
    #include "unionfind.h"
#include <iostream>
#include "cassert"
using namespace std;


class Box{
    int group_id;
public:
    int size;
    Node<Box>* head;
    Box(int id): group_id(id), size(1){}
    int getID()
    {
        return group_id;
    }
};

int main()
{
UnionFind<Box> uni(40);
uni.union_groups(25,7);
//{0->[0],1->[1],2->[2],3->[3],4->[4],5->[5],6->[6],8->[8],9->[9],10->[10],11->[11],12->[12],13->[13],14->[14],15->[15],16->[16],17->[17],18->[18],19->[19],20->[20],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33],34->[34],35->[35],36->[36],37->[37],38->[38],39->[39],}
assert(uni.find(39)==39);
uni.union_groups(4,8);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],9->[9],10->[10],11->[11],12->[12],13->[13],14->[14],15->[15],16->[16],17->[17],18->[18],19->[19],20->[20],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33],34->[34],35->[35],36->[36],37->[37],38->[38],39->[39],}
assert(uni.find(22)==22);
uni.union_groups(11,20);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],9->[9],10->[10],12->[12],13->[13],14->[14],15->[15],16->[16],17->[17],18->[18],19->[19],20->[20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33],34->[34],35->[35],36->[36],37->[37],38->[38],39->[39],}
assert(uni.find(31)==31);
uni.union_groups(11,9);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],12->[12],13->[13],14->[14],15->[15],16->[16],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33],34->[34],35->[35],36->[36],37->[37],38->[38],39->[39],}
assert(uni.find(25)==25);
uni.union_groups(13,33);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],12->[12],14->[14],15->[15],16->[16],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33, 13],34->[34],35->[35],36->[36],37->[37],38->[38],39->[39],}
assert(uni.find(37)==37);
uni.union_groups(16,34);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],12->[12],14->[14],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33, 13],34->[34, 16],35->[35],36->[36],37->[37],38->[38],39->[39],}
assert(uni.find(37)==37);
uni.union_groups(28,26);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],12->[12],14->[14],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],27->[27],28->[26, 28],29->[29],30->[30],31->[31],32->[32],33->[33, 13],34->[34, 16],35->[35],36->[36],37->[37],38->[38],39->[39],}
assert(uni.find(2)==2);
uni.union_groups(36,12);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],14->[14],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],27->[27],28->[26, 28],29->[29],30->[30],31->[31],32->[32],33->[33, 13],34->[34, 16],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
assert(uni.find(32)==32);
uni.union_groups(29,33);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],14->[14],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[32],33->[33, 13, 29],34->[34, 16],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
assert(uni.find(2)==2);
uni.union_groups(14,16);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[32],33->[33, 13, 29],34->[34, 16, 14],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
assert(uni.find(35)==35);
uni.union_groups(32,24);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
assert(uni.find(17)==17);
uni.union_groups(11,8);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],10->[10],15->[15],17->[17],18->[18],19->[19],20->[8, 4, 9, 20, 11],21->[21],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
assert(uni.find(22)==22);
uni.union_groups(1,16);
//{0->[0],2->[2],3->[3],5->[5],6->[6],10->[10],15->[15],17->[17],18->[18],19->[19],20->[8, 4, 9, 20, 11],21->[21],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
assert(uni.find(4)==20);
uni.union_groups(39,21);
//{0->[0],2->[2],3->[3],5->[5],6->[6],10->[10],15->[15],17->[17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[21, 39],}
assert(uni.find(13)==33);
uni.union_groups(21,15);
//{0->[0],2->[2],3->[3],5->[5],6->[6],10->[10],17->[17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[15, 21, 39],}
assert(uni.find(37)==37);
uni.union_groups(17,10);
//{0->[0],2->[2],3->[3],5->[5],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[15, 21, 39],}
assert(uni.find(11)==20);
uni.union_groups(3,15);
//{0->[0],2->[2],5->[5],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[15, 21, 39, 3],}
assert(uni.find(23)==23);
uni.union_groups(22,5);
//{0->[0],2->[2],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[5, 22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[15, 21, 39, 3],}
assert(uni.find(21)==39);
uni.union_groups(22,2);
//{0->[0],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[15, 21, 39, 3],}
assert(uni.find(7)==25);
uni.union_groups(36,32);
//{0->[0],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[24, 32, 12, 36],37->[37],38->[38],39->[15, 21, 39, 3],}
assert(uni.find(14)==34);
uni.union_groups(37,1);
//{0->[0],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[24, 32, 12, 36],38->[38],39->[15, 21, 39, 3],}
assert(uni.find(7)==25);
uni.union_groups(18,17);
//{0->[0],6->[6],17->[10, 17, 18],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[24, 32, 12, 36],38->[38],39->[15, 21, 39, 3],}
assert(uni.find(34)==34);
uni.union_groups(27,18);
//{0->[0],6->[6],17->[10, 17, 18, 27],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[24, 32, 12, 36],38->[38],39->[15, 21, 39, 3],}
assert(uni.find(37)==34);
uni.union_groups(32,10);
//{0->[0],6->[6],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[10, 17, 18, 27, 24, 32, 12, 36],38->[38],39->[15, 21, 39, 3],}
assert(uni.find(11)==20);
uni.union_groups(20,6);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[10, 17, 18, 27, 24, 32, 12, 36],38->[38],39->[15, 21, 39, 3],}
assert(uni.find(13)==33);
uni.union_groups(38,24);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[10, 17, 18, 27, 24, 32, 12, 36, 38],39->[15, 21, 39, 3],}
assert(uni.find(11)==20);
uni.union_groups(27,16);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],39->[15, 21, 39, 3],}
assert(uni.find(38)==36);
uni.union_groups(12,39);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(27)==36);
uni.union_groups(2,9);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11, 2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(27)==36);
uni.union_groups(12,34);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11, 2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(11)==20);
uni.union_groups(32,11);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(39)==36);
uni.union_groups(6,1);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(37)==36);
uni.union_groups(20,33);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],35->[35],36->[33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(21)==36);
uni.union_groups(32,1);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],35->[35],36->[33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(4)==36);
uni.union_groups(21,34);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],35->[35],36->[33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(10)==36);
uni.union_groups(22,11);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],35->[35],36->[33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(35)==35);
uni.union_groups(1,25);
//{0->[0],19->[19],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(20)==36);
uni.union_groups(29,16);
//{0->[0],19->[19],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
assert(uni.find(13)==36);
uni.union_groups(19,13);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
assert(uni.find(9)==36);
uni.union_groups(8,32);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
assert(uni.find(7)==36);
uni.union_groups(22,18);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
assert(uni.find(14)==36);
uni.union_groups(10,8);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
assert(uni.find(26)==28);
uni.union_groups(17,19);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
assert(uni.find(17)==36);
uni.union_groups(15,39);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
assert(uni.find(9)==36);
uni.union_groups(23,30);
//{0->[0],28->[26, 28],30->[30, 23],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
assert(uni.find(33)==36);
uni.union_groups(23,20);
//{0->[0],28->[26, 28],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(25)==36);
uni.union_groups(21,3);
//{0->[0],28->[26, 28],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(35)==35);
uni.union_groups(28,31);
//{0->[0],28->[31, 26, 28],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(13)==36);
uni.union_groups(34,19);
//{0->[0],28->[31, 26, 28],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(11)==36);
uni.union_groups(17,25);
//{0->[0],28->[31, 26, 28],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(39)==36);
uni.union_groups(24,22);
//{0->[0],28->[31, 26, 28],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(26)==28);
uni.union_groups(34,26);
//{0->[0],35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(18)==36);
uni.union_groups(26,3);
//{0->[0],35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(15)==36);
uni.union_groups(27,6);
//{0->[0],35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(28)==36);
uni.union_groups(19,29);
//{0->[0],35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(37)==36);
uni.union_groups(17,30);
//{0->[0],35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
assert(uni.find(33)==36);
uni.union_groups(0,36);
//{35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23, 0],}
assert(uni.find(14)==36);
uni.union_groups(30,6);
//{35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23, 0],}
assert(uni.find(27)==36);
uni.union_groups(14,0);
//{35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23, 0],}
assert(uni.find(17)==36);
uni.union_groups(16,2);
//{35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23, 0],}
assert(uni.find(10)==36);
    cout << "done";
}
