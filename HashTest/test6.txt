Player player1(90,2921);
Player player2(54,3153);
Player player3(97,5774);
Player player4(92,138);
Player player5(39,5527);
Player player6(60,8953);
Player player7(77,5752);
Player player8(31,9636);
Player player9(76,8978);
Player player10(37,6896);
Player player11(62,6955);
Player player12(21,4981);
Player player13(2,7252);
Player player14(51,5699);
Player player15(84,9949);
Player player16(13,8250);
Player player17(5,3261);
Player player18(98,163);
Player player19(68,4807);
Player player20(18,6604);
Player player21(17,1819);
Player player22(45,407);
Player player23(10,1086);
Player player24(75,2479);
Player player25(26,1595);
Player player26(43,7797);
Player player27(80,588);
Player player28(47,8172);
Player player29(89,785);
Player player30(23,3662);
Player player31(96,3081);
Player player32(79,5704);
Player player33(50,7602);
Player player34(55,9420);
Player player35(35,8640);
Player player36(72,6930);
Player player37(14,6428);
Player player38(40,3235);
Player player39(67,1583);
Player player40(36,9747);
Player player41(74,3801);
Player player42(4,8043);
Player player43(95,9205);
Player player44(16,9782);
Player player45(81,2135);
Player player46(33,4355);
Player player47(44,3829);
Player player48(27,8600);
Player player49(66,5546);
Player player50(58,7442);
Player player51(85,9761);
Player player52(22,1364);
Player player53(61,6399);
Player player54(28,5373);
Player player55(11,986);
Player player56(3,6745);
Player player57(94,2632);
Player player58(91,8436);
Player player59(8,1693);
Player player60(20,1492);
Player player61(87,923);
Player player62(30,7146);
Player player63(71,451);
Player player64(69,2971);
Player player65(41,2870);
Player player66(83,5075);
Player player67(42,4986);
Player player68(9,4183);
Player player69(86,8541);
Player player70(70,2728);
Player player71(88,4626);
Player player72(56,4992);
Player player73(53,6184);
Player player74(38,3832);
Player player75(52,9512);
Player player76(6,4581);
Player player77(82,7283);
Player player78(57,8352);
Player player79(12,4769);
Player player80(65,1776);
Player player81(99,4971);
Player player82(15,9809);
Player player83(34,6508);
Player player84(29,9680);
Player player85(32,848);
Player player86(46,3934);
Player player87(25,7209);
Player player88(48,7993);
Player player89(64,7924);
Player player90(7,9639);
Player player91(59,5106);
Player player92(49,3557);
Player player93(63,6413);
Player player94(24,2675);
Player player95(1,3241);
Player player96(78,13);
Player player97(93,2907);
Player player98(19,6651);
Player player99(73,387);
assert(table.find(player89.getID())==-1);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player48.getID())==-1);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.find(player10.getID())==-1);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.find(player66.getID())==-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.find(player26.getID())==-1);
assert(table.find(player16.getID())==-1);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player22.getID())==-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player63.getID())==-1);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.find(player38.getID())==-1);
assert(table.find(player9.getID())!=-1);
assert(table.find(player58.getID())==-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.find(player38.getID())==-1);
assert(table.find(player52.getID())==-1);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player45.getID())==-1);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player75.getID())==-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.find(player10.getID())==-1);
assert(table.find(player99.getID())!=-1);
assert(table.find(player3.getID())!=-1);
assert(table.find(player2.getID())==-1);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player67.getID())==-1);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player82.getID())!=-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player16.getID())==-1);
assert(table.find(player73.getID())==-1);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player88.getID())==-1);
assert(table.find(player89.getID())==-1);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.find(player23.getID())!=-1);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.find(player17.getID())==-1);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.find(player82.getID())!=-1);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player55.getID())!=-1);
assert(table.find(player50.getID())==-1);
assert(table.find(player52.getID())==-1);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player97.getID())!=-1);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.find(player51.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.find(player27.getID())==-1);
assert(table.find(player20.getID())==-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.find(player91.getID())==-1);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.find(player73.getID())==-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.find(player18.getID())==-1);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.find(player13.getID())==-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player42.getID())==-1);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.find(player33.getID())!=-1);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player3.getID())!=-1);
assert(table.find(player77.getID())==-1);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.find(player76.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.find(player33.getID())!=-1);
assert(table.find(player42.getID())==-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player27.getID())==-1);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.find(player73.getID())==-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player33.getID())!=-1);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.find(player3.getID())==-1);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.find(player17.getID())==-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player66.getID())==-1);
assert(table.find(player70.getID())==-1);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.find(player39.getID())!=-1);
assert(table.find(player64.getID())!=-1);
assert(table.find(player44.getID())==-1);
assert(table.find(player76.getID())!=-1);
assert(table.find(player69.getID())==-1);
assert(table.find(player37.getID())==-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player14.getID())==-1);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.find(player67.getID())==-1);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.find(player63.getID())==-1);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player13.getID())==-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.find(player29.getID())==-1);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.find(player38.getID())!=-1);
assert(table.find(player48.getID())==-1);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player12.getID())!=-1);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.find(player58.getID())==-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.find(player29.getID())==-1);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.find(player79.getID())==-1);
assert(table.find(player22.getID())==-1);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player87.getID())==-1);
assert(table.find(player14.getID())!=-1);
assert(table.find(player73.getID())==-1);
assert(table.find(player35.getID())==-1);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player69.getID())!=-1);
assert(table.find(player99.getID())==-1);
assert(table.find(player38.getID())!=-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.find(player82.getID())==-1);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.find(player76.getID())!=-1);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.find(player45.getID())!=-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.find(player38.getID())!=-1);
assert(table.find(player8.getID())==-1);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.find(player89.getID())==-1);
assert(table.find(player46.getID())==-1);
assert(table.find(player57.getID())!=-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.find(player69.getID())!=-1);
assert(table.find(player63.getID())!=-1);
assert(table.find(player2.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player59.getID())!=-1);
assert(table.find(player40.getID())==-1);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.find(player2.getID())!=-1);
assert(table.find(player15.getID())!=-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.find(player7.getID())==-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player88.getID())==-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.find(player7.getID())==-1);
assert(table.find(player84.getID())!=-1);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.find(player19.getID())==-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player8.getID())==-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.find(player46.getID())==-1);
assert(table.find(player61.getID())==-1);
assert(table.find(player66.getID())==-1);
assert(table.find(player58.getID())!=-1);
assert(table.find(player79.getID())==-1);
assert(table.find(player84.getID())!=-1);
assert(table.find(player25.getID())!=-1);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.find(player3.getID())==-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player96.getID())!=-1);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.find(player51.getID())!=-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.find(player78.getID())==-1);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.find(player98.getID())!=-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.find(player20.getID())!=-1);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.find(player65.getID())!=-1);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player5.getID())!=-1);
assert(table.find(player63.getID())!=-1);
assert(table.find(player4.getID())!=-1);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player77.getID())==-1);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.find(player33.getID())==-1);
assert(table.find(player47.getID())==-1);
assert(table.find(player74.getID())==-1);
assert(table.find(player67.getID())==-1);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.find(player18.getID())==-1);
assert(table.find(player22.getID())==-1);
assert(table.find(player81.getID())!=-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player82.getID())==-1);
assert(table.find(player57.getID())==-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player45.getID())!=-1);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.find(player39.getID())==-1);
assert(table.find(player6.getID())==-1);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player53.getID())==-1);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player15.getID())!=-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player97.getID())!=-1);
assert(table.find(player11.getID())==-1);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.find(player53.getID())==-1);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player28.getID())==-1);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.find(player81.getID())!=-1);
assert(table.find(player90.getID())==-1);
assert(table.find(player86.getID())==-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.find(player7.getID())!=-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.find(player21.getID())!=-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player12.getID())==-1);
assert(table.find(player99.getID())==-1);
assert(table.find(player29.getID())!=-1);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.find(player82.getID())==-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player5.getID())!=-1);
assert(table.find(player82.getID())==-1);
assert(table.find(player55.getID())==-1);
assert(table.find(player25.getID())!=-1);
assert(table.find(player46.getID())==-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.find(player68.getID())==-1);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.find(player74.getID())!=-1);
assert(table.find(player73.getID())==-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.find(player80.getID())==-1);
assert(table.find(player51.getID())==-1);
assert(table.find(player91.getID())==-1);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.find(player24.getID())==-1);
assert(table.find(player10.getID())!=-1);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player22.getID())!=-1);
assert(table.find(player39.getID())==-1);
assert(table.find(player33.getID())==-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.find(player44.getID())==-1);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.find(player80.getID())==-1);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.find(player81.getID())!=-1);
assert(table.find(player8.getID())!=-1);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player7.getID())!=-1);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player86.getID())==-1);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.find(player87.getID())==-1);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player38.getID())!=-1);
assert(table.find(player37.getID())==-1);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.find(player98.getID())!=-1);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.find(player47.getID())==-1);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.find(player5.getID())==-1);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.find(player70.getID())==-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.find(player57.getID())==-1);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.find(player83.getID())==-1);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.find(player61.getID())==-1);
assert(table.find(player85.getID())==-1);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player66.getID())==-1);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.find(player6.getID())!=-1);
assert(table.find(player41.getID())==-1);
assert(table.find(player9.getID())!=-1);
assert(table.find(player22.getID())!=-1);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player8.getID())!=-1);
assert(table.find(player55.getID())==-1);
assert(table.find(player99.getID())!=-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.find(player66.getID())==-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.find(player48.getID())==-1);
assert(table.find(player35.getID())==-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.find(player90.getID())!=-1);
assert(table.find(player94.getID())==-1);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.find(player99.getID())!=-1);
assert(table.find(player3.getID())!=-1);
assert(table.find(player67.getID())==-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.find(player83.getID())==-1);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player92.getID())!=-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player82.getID())!=-1);
assert(table.find(player30.getID())!=-1);
assert(table.find(player78.getID())==-1);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player74.getID())!=-1);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.find(player21.getID())==-1);
assert(table.find(player46.getID())==-1);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.find(player7.getID())==-1);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.find(player62.getID())==-1);
assert(table.find(player3.getID())!=-1);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.find(player15.getID())==-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player41.getID())==-1);
assert(table.find(player61.getID())!=-1);
assert(table.find(player13.getID())!=-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player97.getID())!=-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player9.getID())!=-1);
assert(table.find(player96.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.find(player50.getID())!=-1);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player93.getID())!=-1);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.find(player26.getID())!=-1);
assert(table.find(player74.getID())!=-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.find(player98.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player19.getID())==-1);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player44.getID())!=-1);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.find(player33.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.find(player57.getID())!=-1);
assert(table.find(player9.getID())==-1);
assert(table.find(player98.getID())!=-1);
assert(table.find(player61.getID())==-1);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.find(player56.getID())==-1);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player78.getID())==-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.find(player99.getID())!=-1);
assert(table.find(player82.getID())!=-1);
assert(table.find(player87.getID())==-1);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.find(player8.getID())==-1);
assert(table.find(player84.getID())==-1);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.find(player57.getID())!=-1);
assert(table.find(player24.getID())==-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player97.getID())==-1);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player11.getID())==-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.find(player72.getID())==-1);
assert(table.find(player63.getID())==-1);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.find(player29.getID())!=-1);
assert(table.find(player10.getID())==-1);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.find(player45.getID())==-1);
assert(table.find(player5.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.find(player65.getID())==-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.find(player74.getID())!=-1);
assert(table.find(player91.getID())==-1);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.find(player77.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.find(player62.getID())==-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player49.getID())!=-1);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.find(player61.getID())==-1);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.find(player28.getID())==-1);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.find(player52.getID())==-1);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player58.getID())!=-1);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player69.getID())==-1);
assert(table.find(player76.getID())!=-1);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player50.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player97.getID())==-1);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.find(player74.getID())!=-1);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.find(player38.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.find(player87.getID())==-1);
assert(table.find(player81.getID())!=-1);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player53.getID())!=-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player58.getID())!=-1);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.find(player73.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player52.getID())==-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player13.getID())==-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player97.getID())==-1);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player60.getID())!=-1);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.find(player1.getID())!=-1);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.find(player51.getID())==-1);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.find(player16.getID())==-1);
assert(table.find(player52.getID())==-1);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.find(player38.getID())!=-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player95.getID())!=-1);
assert(table.find(player87.getID())==-1);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player98.getID())!=-1);
assert(table.find(player94.getID())==-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player38.getID())!=-1);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player15.getID())!=-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player27.getID())==-1);
assert(table.find(player19.getID())!=-1);
assert(table.find(player57.getID())==-1);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.find(player22.getID())==-1);
assert(table.find(player15.getID())!=-1);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player21.getID())==-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player49.getID())!=-1);
assert(table.find(player84.getID())!=-1);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player98.getID())!=-1);
assert(table.find(player90.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.find(player16.getID())==-1);
assert(table.find(player3.getID())!=-1);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player39.getID())!=-1);
assert(table.find(player56.getID())==-1);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player31.getID())!=-1);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.find(player72.getID())==-1);
assert(table.find(player98.getID())!=-1);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player53.getID())==-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player87.getID())==-1);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player15.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.find(player77.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player93.getID())==-1);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.find(player58.getID())==-1);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player77.getID())!=-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player75.getID())==-1);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.find(player4.getID())!=-1);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player21.getID())!=-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.find(player54.getID())!=-1);
assert(table.find(player92.getID())==-1);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player9.getID())==-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.find(player33.getID())!=-1);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.find(player57.getID())==-1);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.find(player23.getID())==-1);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.find(player35.getID())==-1);
assert(table.find(player76.getID())==-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player55.getID())!=-1);
assert(table.find(player6.getID())!=-1);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.find(player88.getID())==-1);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.find(player86.getID())!=-1);
assert(table.find(player16.getID())==-1);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.find(player58.getID())==-1);
assert(table.find(player83.getID())!=-1);
assert(table.find(player41.getID())!=-1);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.find(player58.getID())==-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.find(player95.getID())==-1);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.find(player98.getID())!=-1);
assert(table.find(player87.getID())==-1);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.find(player98.getID())!=-1);
assert(table.find(player34.getID())==-1);
assert(table.find(player46.getID())==-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.find(player80.getID())==-1);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player20.getID())!=-1);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.find(player30.getID())==-1);
assert(table.find(player98.getID())!=-1);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.find(player45.getID())!=-1);
assert(table.find(player22.getID())==-1);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.find(player76.getID())==-1);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.find(player23.getID())!=-1);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.find(player36.getID())==-1);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.find(player70.getID())!=-1);
assert(table.find(player75.getID())!=-1);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.find(player12.getID())!=-1);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.find(player34.getID())==-1);
assert(table.find(player51.getID())==-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.find(player38.getID())==-1);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.find(player36.getID())==-1);
assert(table.find(player61.getID())==-1);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player99.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.find(player74.getID())!=-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.find(player39.getID())!=-1);
assert(table.find(player13.getID())!=-1);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.find(player17.getID())==-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player84.getID())!=-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.find(player80.getID())==-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player53.getID())==-1);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.find(player97.getID())!=-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.find(player90.getID())!=-1);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.find(player91.getID())==-1);
assert(table.find(player66.getID())==-1);
assert(table.find(player79.getID())==-1);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.find(player78.getID())==-1);
assert(table.find(player72.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player59.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player54.getID())==-1);
assert(table.find(player75.getID())!=-1);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.find(player25.getID())==-1);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.find(player33.getID())!=-1);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player75.getID())!=-1);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.find(player7.getID())!=-1);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player36.getID())==-1);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.find(player35.getID())==-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.find(player67.getID())==-1);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.find(player24.getID())==-1);
assert(table.find(player33.getID())!=-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player49.getID())!=-1);
assert(table.find(player42.getID())==-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player21.getID())!=-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player73.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.find(player79.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.find(player76.getID())==-1);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.find(player98.getID())!=-1);
assert(table.find(player41.getID())!=-1);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player19.getID())!=-1);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.find(player81.getID())!=-1);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.find(player60.getID())!=-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.find(player90.getID())!=-1);
assert(table.find(player94.getID())!=-1);
assert(table.find(player18.getID())==-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.find(player91.getID())==-1);
assert(table.find(player46.getID())==-1);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player76.getID())==-1);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.find(player14.getID())==-1);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player85.getID())==-1);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.find(player43.getID())!=-1);
assert(table.find(player50.getID())!=-1);
assert(table.find(player81.getID())==-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player10.getID())!=-1);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.find(player8.getID())!=-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player25.getID())==-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.find(player21.getID())!=-1);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.find(player88.getID())==-1);
assert(table.find(player77.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.find(player11.getID())==-1);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player92.getID())==-1);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player75.getID())==-1);
assert(table.find(player30.getID())==-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.find(player75.getID())==-1);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.find(player47.getID())!=-1);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.find(player62.getID())!=-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player72.getID())==-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.find(player55.getID())!=-1);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.find(player18.getID())!=-1);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.find(player22.getID())==-1);
assert(table.find(player10.getID())!=-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player45.getID())==-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player81.getID())==-1);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player49.getID())==-1);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.find(player99.getID())==-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player93.getID())==-1);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.find(player63.getID())!=-1);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player82.getID())!=-1);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.find(player36.getID())==-1);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.find(player65.getID())!=-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.find(player80.getID())==-1);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.find(player97.getID())==-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.find(player76.getID())==-1);
assert(table.find(player81.getID())==-1);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player93.getID())==-1);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.find(player46.getID())==-1);
assert(table.find(player90.getID())==-1);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.find(player20.getID())!=-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.find(player3.getID())==-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.find(player32.getID())==-1);
assert(table.find(player26.getID())==-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.find(player43.getID())!=-1);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.find(player2.getID())==-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.find(player84.getID())==-1);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.find(player58.getID())==-1);
assert(table.find(player38.getID())==-1);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player31.getID())==-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.find(player67.getID())==-1);
assert(table.find(player12.getID())!=-1);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.find(player70.getID())==-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player21.getID())!=-1);
assert(table.find(player64.getID())==-1);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.find(player35.getID())!=-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.find(player53.getID())==-1);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.find(player10.getID())!=-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.find(player62.getID())==-1);
assert(table.find(player18.getID())!=-1);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.find(player91.getID())==-1);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player94.getID())==-1);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player20.getID())==-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.find(player65.getID())==-1);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.find(player22.getID())==-1);
assert(table.find(player70.getID())==-1);
assert(table.find(player59.getID())!=-1);
assert(table.find(player98.getID())!=-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.find(player22.getID())==-1);
assert(table.find(player80.getID())!=-1);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.find(player95.getID())!=-1);
assert(table.find(player19.getID())==-1);
assert(table.find(player88.getID())==-1);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.find(player9.getID())==-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.find(player37.getID())==-1);
assert(table.find(player60.getID())==-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.find(player14.getID())==-1);
assert(table.find(player44.getID())==-1);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.find(player27.getID())!=-1);
assert(table.find(player29.getID())==-1);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player32.getID())==-1);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.find(player41.getID())!=-1);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.find(player50.getID())!=-1);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.find(player38.getID())==-1);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.find(player77.getID())==-1);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player30.getID())==-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.find(player60.getID())==-1);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.find(player26.getID())!=-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player69.getID())==-1);
assert(table.find(player51.getID())==-1);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player87.getID())!=-1);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player99.getID())==-1);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.find(player66.getID())==-1);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.find(player43.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.find(player8.getID())!=-1);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player37.getID())==-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.find(player3.getID())==-1);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.find(player46.getID())==-1);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.find(player68.getID())!=-1);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.find(player21.getID())!=-1);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player21.getID())!=-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.find(player96.getID())==-1);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.find(player79.getID())==-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player93.getID())==-1);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.find(player8.getID())!=-1);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.find(player24.getID())==-1);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.find(player98.getID())==-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player99.getID())!=-1);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.find(player31.getID())==-1);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.find(player79.getID())!=-1);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.find(player21.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player20.getID())==-1);
assert(table.find(player73.getID())==-1);
assert(table.find(player10.getID())!=-1);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.find(player9.getID())==-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.find(player64.getID())==-1);
assert(table.find(player20.getID())==-1);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.find(player61.getID())!=-1);
assert(table.find(player10.getID())!=-1);
assert(table.find(player21.getID())!=-1);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.find(player86.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.find(player11.getID())!=-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player68.getID())!=-1);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.find(player33.getID())!=-1);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.find(player31.getID())==-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.find(player11.getID())!=-1);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player35.getID())!=-1);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.find(player53.getID())==-1);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.find(player64.getID())==-1);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.find(player48.getID())==-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.find(player1.getID())!=-1);
assert(table.find(player2.getID())!=-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player50.getID())==-1);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.find(player27.getID())==-1);
assert(table.find(player35.getID())==-1);
assert(table.find(player55.getID())==-1);
assert(table.find(player38.getID())!=-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player63.getID())!=-1);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.find(player67.getID())!=-1);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.find(player67.getID())!=-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.find(player58.getID())!=-1);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.find(player48.getID())!=-1);
assert(table.find(player27.getID())==-1);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.find(player99.getID())==-1);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player72.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.find(player30.getID())==-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.find(player55.getID())==-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.find(player48.getID())!=-1);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.find(player31.getID())==-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.find(player42.getID())==-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player17.getID())==-1);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.find(player50.getID())==-1);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.find(player94.getID())==-1);
assert(table.find(player10.getID())==-1);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.find(player64.getID())==-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.find(player93.getID())==-1);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.find(player49.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.find(player81.getID())!=-1);
assert(table.find(player44.getID())!=-1);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.find(player1.getID())==-1);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.find(player68.getID())==-1);
assert(table.find(player48.getID())!=-1);
assert(table.find(player72.getID())!=-1);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.find(player86.getID())!=-1);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.find(player62.getID())==-1);
assert(table.find(player95.getID())!=-1);
assert(table.find(player32.getID())!=-1);
assert(table.find(player98.getID())==-1);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.find(player6.getID())==-1);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.find(player82.getID())==-1);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.find(player74.getID())==-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.find(player33.getID())!=-1);
assert(table.find(player47.getID())!=-1);
assert(table.find(player81.getID())!=-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.find(player55.getID())==-1);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.find(player95.getID())!=-1);
assert(table.find(player8.getID())==-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.find(player72.getID())!=-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.find(player9.getID())==-1);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.find(player77.getID())!=-1);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.find(player61.getID())==-1);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.find(player59.getID())!=-1);
assert(table.find(player37.getID())!=-1);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.find(player77.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.find(player62.getID())==-1);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.find(player95.getID())!=-1);
assert(table.find(player50.getID())==-1);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.find(player59.getID())!=-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.find(player96.getID())!=-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.find(player58.getID())!=-1);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.find(player33.getID())==-1);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.find(player62.getID())==-1);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.find(player57.getID())!=-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.find(player1.getID())==-1);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.find(player6.getID())==-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player97.getID())!=-1);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.find(player59.getID())!=-1);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.find(player81.getID())!=-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.find(player8.getID())==-1);
assert(table.find(player26.getID())==-1);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.find(player3.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player3.getID())!=-1);
assert(table.find(player91.getID())!=-1);
assert(table.find(player21.getID())==-1);
assert(table.find(player99.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player67.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.find(player81.getID())!=-1);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player28.getID())==-1);
assert(table.find(player51.getID())!=-1);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.find(player19.getID())==-1);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.find(player10.getID())==-1);
assert(table.find(player10.getID())==-1);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.find(player75.getID())==-1);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player89.getID())==-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player55.getID())==-1);
assert(table.find(player71.getID())==-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.find(player20.getID())==-1);
assert(table.find(player10.getID())==-1);
assert(table.find(player82.getID())==-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player98.getID())==-1);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.find(player89.getID())==-1);
assert(table.find(player61.getID())==-1);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player28.getID())==-1);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.find(player83.getID())!=-1);
assert(table.find(player78.getID())!=-1);
assert(table.find(player57.getID())!=-1);
assert(table.find(player18.getID())==-1);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player23.getID())!=-1);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player74.getID())!=-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.find(player72.getID())!=-1);
assert(table.find(player49.getID())==-1);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.find(player97.getID())!=-1);
assert(table.find(player57.getID())!=-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player29.getID())==-1);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player3.getID())!=-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player46.getID())!=-1);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.find(player51.getID())!=-1);
assert(table.find(player93.getID())!=-1);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.find(player5.getID())==-1);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player41.getID())!=-1);
assert(table.find(player2.getID())==-1);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.find(player54.getID())==-1);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.find(player66.getID())==-1);
assert(table.find(player28.getID())==-1);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.find(player18.getID())==-1);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.find(player59.getID())!=-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.find(player10.getID())!=-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.find(player17.getID())!=-1);
assert(table.find(player24.getID())!=-1);
assert(table.find(player81.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.find(player53.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.find(player29.getID())!=-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.find(player12.getID())!=-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player45.getID())==-1);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.find(player22.getID())==-1);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.find(player76.getID())==-1);
assert(table.find(player21.getID())!=-1);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player63.getID())==-1);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.find(player61.getID())==-1);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.find(player88.getID())!=-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player96.getID())!=-1);
assert(table.find(player79.getID())!=-1);
assert(table.find(player20.getID())==-1);
assert(table.find(player96.getID())!=-1);
assert(table.find(player55.getID())==-1);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player22.getID())==-1);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.find(player9.getID())==-1);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player11.getID())==-1);
assert(table.find(player29.getID())==-1);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.find(player65.getID())==-1);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.find(player3.getID())!=-1);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.find(player86.getID())==-1);
assert(table.find(player96.getID())!=-1);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.find(player52.getID())!=-1);
assert(table.find(player57.getID())!=-1);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.find(player46.getID())!=-1);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.find(player57.getID())!=-1);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.find(player66.getID())!=-1);
assert(table.find(player98.getID())==-1);
assert(table.find(player33.getID())!=-1);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player63.getID())==-1);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player4.getID())!=-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player68.getID())==-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.find(player18.getID())!=-1);
assert(table.find(player48.getID())!=-1);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player46.getID())!=-1);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player20.getID())!=-1);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player24.getID())!=-1);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player87.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.find(player21.getID())==-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.find(player69.getID())!=-1);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.find(player55.getID())==-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.find(player69.getID())!=-1);
assert(table.find(player65.getID())==-1);
assert(table.find(player49.getID())!=-1);
assert(table.find(player53.getID())==-1);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player24.getID())!=-1);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.find(player9.getID())==-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.find(player20.getID())!=-1);
assert(table.find(player2.getID())==-1);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player30.getID())==-1);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.find(player90.getID())==-1);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.find(player49.getID())!=-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player1.getID())==-1);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player10.getID())!=-1);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player63.getID())!=-1);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.find(player97.getID())!=-1);
assert(table.find(player91.getID())!=-1);
assert(table.find(player51.getID())!=-1);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.find(player5.getID())!=-1);
assert(table.find(player24.getID())!=-1);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player30.getID())==-1);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.find(player25.getID())==-1);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player5.getID())!=-1);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.find(player25.getID())==-1);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.find(player72.getID())==-1);
assert(table.find(player94.getID())!=-1);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player70.getID())==-1);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player29.getID())==-1);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.find(player12.getID())!=-1);
assert(table.find(player73.getID())==-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.find(player19.getID())!=-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.find(player77.getID())!=-1);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.find(player34.getID())==-1);
assert(table.find(player93.getID())==-1);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.find(player65.getID())==-1);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.find(player7.getID())==-1);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.find(player97.getID())!=-1);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.find(player73.getID())==-1);
assert(table.find(player10.getID())!=-1);
assert(table.find(player98.getID())==-1);
assert(table.find(player68.getID())==-1);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player20.getID())!=-1);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player24.getID())!=-1);
assert(table.find(player71.getID())==-1);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.find(player1.getID())!=-1);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.find(player87.getID())==-1);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.find(player48.getID())==-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.find(player50.getID())!=-1);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player63.getID())==-1);
assert(table.find(player55.getID())==-1);
assert(table.find(player81.getID())!=-1);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player14.getID())!=-1);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player37.getID())==-1);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player13.getID())==-1);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.find(player9.getID())==-1);
assert(table.find(player5.getID())!=-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.find(player25.getID())!=-1);
assert(table.find(player14.getID())!=-1);
assert(table.find(player39.getID())!=-1);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.find(player49.getID())!=-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player13.getID())==-1);
assert(table.find(player54.getID())!=-1);
assert(table.find(player37.getID())==-1);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.find(player17.getID())!=-1);
assert(table.find(player7.getID())==-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.find(player61.getID())==-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.find(player70.getID())==-1);
assert(table.find(player9.getID())==-1);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.find(player4.getID())!=-1);
assert(table.find(player66.getID())!=-1);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.find(player84.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.find(player58.getID())==-1);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.find(player77.getID())==-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.find(player53.getID())!=-1);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.find(player6.getID())==-1);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.find(player25.getID())==-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.find(player95.getID())!=-1);
assert(table.find(player58.getID())==-1);
assert(table.find(player15.getID())==-1);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player69.getID())==-1);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.find(player23.getID())==-1);
assert(table.find(player40.getID())==-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.find(player31.getID())!=-1);
assert(table.find(player28.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player98.getID())!=-1);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.find(player68.getID())==-1);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player47.getID())!=-1);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.find(player1.getID())!=-1);
assert(table.find(player9.getID())==-1);
assert(table.find(player48.getID())!=-1);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.find(player32.getID())==-1);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.find(player51.getID())!=-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.find(player15.getID())==-1);
assert(table.find(player53.getID())!=-1);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player1.getID())!=-1);
assert(table.find(player58.getID())==-1);
assert(table.find(player9.getID())==-1);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.find(player15.getID())==-1);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.find(player88.getID())==-1);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player61.getID())!=-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.find(player33.getID())==-1);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player59.getID())!=-1);
assert(table.find(player16.getID())!=-1);
assert(table.find(player8.getID())!=-1);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.find(player51.getID())!=-1);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.find(player91.getID())!=-1);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.find(player21.getID())==-1);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player23.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.find(player99.getID())!=-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.find(player67.getID())!=-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.find(player93.getID())!=-1);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.find(player40.getID())==-1);
assert(table.find(player36.getID())==-1);
assert(table.find(player73.getID())==-1);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.find(player70.getID())==-1);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player10.getID())!=-1);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.find(player65.getID())==-1);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player91.getID())!=-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player80.getID())==-1);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.find(player62.getID())==-1);
assert(table.find(player13.getID())==-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player99.getID())==-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player9.getID())==-1);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player74.getID())==-1);
assert(table.find(player56.getID())==-1);
assert(table.find(player78.getID())!=-1);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.find(player26.getID())!=-1);
assert(table.find(player89.getID())!=-1);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.find(player51.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player56.getID())==-1);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.find(player61.getID())==-1);
assert(table.find(player55.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.find(player76.getID())==-1);
assert(table.find(player50.getID())==-1);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player79.getID())!=-1);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.find(player87.getID())!=-1);
assert(table.find(player57.getID())==-1);
assert(table.find(player34.getID())==-1);
assert(table.find(player62.getID())==-1);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.find(player80.getID())==-1);
assert(table.find(player54.getID())==-1);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.find(player77.getID())!=-1);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.find(player41.getID())==-1);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player55.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player32.getID())!=-1);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player68.getID())==-1);
assert(table.find(player38.getID())!=-1);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.find(player18.getID())==-1);
assert(table.find(player89.getID())!=-1);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.find(player7.getID())==-1);
assert(table.find(player76.getID())==-1);
assert(table.find(player35.getID())==-1);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.find(player82.getID())!=-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player23.getID())!=-1);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player19.getID())==-1);
assert(table.find(player53.getID())==-1);
assert(table.find(player54.getID())==-1);
assert(table.find(player12.getID())==-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.find(player97.getID())!=-1);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.find(player58.getID())==-1);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.find(player29.getID())==-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.find(player52.getID())!=-1);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.find(player11.getID())==-1);
assert(table.find(player84.getID())!=-1);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player99.getID())!=-1);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player44.getID())==-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.find(player5.getID())!=-1);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.find(player4.getID())!=-1);
assert(table.find(player19.getID())==-1);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.find(player33.getID())==-1);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.find(player16.getID())==-1);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.find(player46.getID())!=-1);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player89.getID())!=-1);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.find(player81.getID())!=-1);
assert(table.find(player98.getID())!=-1);
assert(table.find(player74.getID())==-1);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.find(player15.getID())!=-1);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player22.getID())!=-1);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player95.getID())==-1);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.find(player21.getID())==-1);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.find(player23.getID())==-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.find(player80.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.find(player96.getID())==-1);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.find(player25.getID())==-1);
assert(table.find(player30.getID())!=-1);
assert(table.find(player25.getID())==-1);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.find(player74.getID())==-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player79.getID())!=-1);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player3.getID())!=-1);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.find(player49.getID())!=-1);
assert(table.find(player90.getID())!=-1);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player87.getID())!=-1);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player8.getID())!=-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player7.getID())!=-1);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.find(player13.getID())!=-1);
assert(table.find(player12.getID())==-1);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.find(player51.getID())==-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.find(player16.getID())==-1);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player53.getID())!=-1);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.find(player14.getID())==-1);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player97.getID())!=-1);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.find(player97.getID())!=-1);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.find(player61.getID())==-1);
assert(table.find(player71.getID())==-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.find(player29.getID())==-1);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player82.getID())!=-1);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.find(player15.getID())!=-1);
assert(table.find(player37.getID())==-1);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player16.getID())==-1);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player61.getID())==-1);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player65.getID())==-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player46.getID())!=-1);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player9.getID())!=-1);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player72.getID())==-1);
assert(table.find(player79.getID())==-1);
assert(table.find(player51.getID())==-1);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player65.getID())==-1);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.find(player13.getID())!=-1);
assert(table.find(player98.getID())==-1);
assert(table.find(player15.getID())!=-1);
assert(table.find(player23.getID())!=-1);
assert(table.find(player84.getID())!=-1);
assert(table.find(player25.getID())==-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.find(player99.getID())==-1);
assert(table.find(player57.getID())==-1);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player60.getID())!=-1);
assert(table.find(player38.getID())==-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player80.getID())!=-1);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.find(player82.getID())!=-1);
assert(table.find(player53.getID())==-1);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.find(player58.getID())==-1);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.find(player58.getID())!=-1);
assert(table.find(player26.getID())==-1);
assert(table.find(player93.getID())==-1);
assert(table.find(player95.getID())==-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.find(player91.getID())==-1);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player42.getID())==-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player60.getID())!=-1);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.find(player30.getID())==-1);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.find(player75.getID())!=-1);
assert(table.find(player2.getID())!=-1);
assert(table.find(player30.getID())==-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.find(player29.getID())==-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.find(player20.getID())==-1);
assert(table.find(player98.getID())!=-1);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.find(player22.getID())!=-1);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player87.getID())==-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.find(player29.getID())==-1);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.find(player33.getID())==-1);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.find(player32.getID())==-1);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player57.getID())!=-1);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.find(player24.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player48.getID())!=-1);
assert(table.find(player67.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.find(player65.getID())==-1);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.find(player5.getID())!=-1);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player70.getID())!=-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player5.getID())!=-1);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.find(player91.getID())==-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player81.getID())!=-1);
assert(table.find(player50.getID())==-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.find(player19.getID())==-1);
assert(table.find(player11.getID())!=-1);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.find(player90.getID())!=-1);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.find(player45.getID())==-1);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player85.getID())==-1);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.find(player8.getID())==-1);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player65.getID())==-1);
assert(table.find(player79.getID())!=-1);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player19.getID())==-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.find(player23.getID())!=-1);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.find(player7.getID())!=-1);
assert(table.find(player70.getID())!=-1);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.find(player45.getID())==-1);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.find(player85.getID())==-1);
assert(table.find(player99.getID())==-1);
assert(table.find(player65.getID())==-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player79.getID())!=-1);
assert(table.find(player85.getID())==-1);
assert(table.find(player42.getID())==-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.find(player21.getID())!=-1);
assert(table.find(player84.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.find(player46.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.find(player13.getID())!=-1);
assert(table.find(player84.getID())!=-1);
assert(table.find(player81.getID())!=-1);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.find(player15.getID())!=-1);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.find(player70.getID())!=-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.find(player48.getID())==-1);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.find(player19.getID())==-1);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.find(player10.getID())!=-1);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player6.getID())!=-1);
assert(table.find(player61.getID())==-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player90.getID())!=-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player13.getID())==-1);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.find(player63.getID())!=-1);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player34.getID())!=-1);
assert(table.find(player20.getID())!=-1);
assert(table.find(player1.getID())==-1);
assert(table.find(player43.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.find(player31.getID())==-1);
assert(table.find(player99.getID())==-1);
assert(table.find(player79.getID())==-1);
assert(table.find(player44.getID())==-1);
assert(table.find(player24.getID())!=-1);
assert(table.find(player84.getID())==-1);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.find(player68.getID())==-1);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.find(player2.getID())!=-1);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.find(player63.getID())!=-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.find(player16.getID())==-1);
assert(table.find(player77.getID())==-1);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.find(player36.getID())==-1);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.find(player32.getID())==-1);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.find(player99.getID())==-1);
assert(table.find(player19.getID())==-1);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.find(player7.getID())==-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player15.getID())!=-1);
assert(table.find(player2.getID())!=-1);
assert(table.find(player36.getID())==-1);
assert(table.find(player19.getID())==-1);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.find(player78.getID())==-1);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.find(player59.getID())!=-1);
assert(table.find(player96.getID())==-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.find(player82.getID())!=-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.find(player7.getID())==-1);
assert(table.find(player24.getID())==-1);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.find(player41.getID())==-1);
assert(table.find(player15.getID())==-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.find(player66.getID())==-1);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.find(player45.getID())==-1);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.find(player21.getID())!=-1);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.find(player71.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player33.getID())==-1);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player65.getID())==-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player4.getID())!=-1);
assert(table.find(player49.getID())!=-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.find(player31.getID())==-1);
assert(table.find(player83.getID())!=-1);
assert(table.find(player76.getID())!=-1);
assert(table.find(player74.getID())!=-1);
assert(table.find(player71.getID())==-1);
assert(table.find(player96.getID())==-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.find(player99.getID())==-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.find(player15.getID())!=-1);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.find(player82.getID())!=-1);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player51.getID())!=-1);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player6.getID())!=-1);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.find(player89.getID())==-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player23.getID())==-1);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player29.getID())!=-1);
assert(table.find(player22.getID())!=-1);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.find(player77.getID())==-1);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.find(player51.getID())!=-1);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.find(player17.getID())==-1);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.find(player58.getID())==-1);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.find(player87.getID())==-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player34.getID())==-1);
assert(table.find(player52.getID())!=-1);
assert(table.find(player18.getID())==-1);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.find(player60.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.find(player49.getID())!=-1);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.find(player99.getID())!=-1);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.find(player62.getID())==-1);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.find(player8.getID())!=-1);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player54.getID())==-1);
assert(table.find(player70.getID())!=-1);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.find(player97.getID())==-1);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.find(player89.getID())==-1);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player42.getID())!=-1);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player74.getID())!=-1);
assert(table.find(player59.getID())==-1);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.find(player8.getID())!=-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.find(player9.getID())!=-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.find(player70.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.find(player25.getID())!=-1);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.find(player58.getID())!=-1);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.find(player73.getID())!=-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.find(player80.getID())!=-1);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player9.getID())!=-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.find(player91.getID())!=-1);
assert(table.find(player66.getID())!=-1);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.find(player77.getID())!=-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.find(player10.getID())!=-1);
assert(table.find(player52.getID())!=-1);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.find(player60.getID())!=-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player89.getID())==-1);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player43.getID())!=-1);
assert(table.find(player78.getID())!=-1);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.find(player60.getID())!=-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player87.getID())!=-1);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.find(player25.getID())!=-1);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player78.getID())==-1);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player63.getID())==-1);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.find(player37.getID())!=-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player37.getID())!=-1);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.find(player15.getID())==-1);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.find(player84.getID())==-1);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player90.getID())==-1);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.find(player78.getID())==-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.find(player42.getID())==-1);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player42.getID())==-1);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player8.getID())!=-1);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.find(player65.getID())!=-1);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.find(player85.getID())==-1);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.find(player81.getID())!=-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.find(player72.getID())==-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.find(player6.getID())==-1);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player65.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player96.getID())==-1);
assert(table.find(player8.getID())!=-1);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.find(player59.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.find(player75.getID())!=-1);
assert(table.find(player7.getID())==-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.find(player61.getID())!=-1);
assert(table.find(player77.getID())!=-1);
assert(table.find(player17.getID())==-1);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.find(player74.getID())==-1);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.find(player94.getID())!=-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player79.getID())!=-1);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player8.getID())==-1);
assert(table.find(player30.getID())==-1);
assert(table.find(player33.getID())!=-1);
assert(table.find(player74.getID())==-1);
assert(table.find(player58.getID())!=-1);
assert(table.find(player52.getID())!=-1);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.find(player89.getID())==-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.find(player15.getID())==-1);
assert(table.find(player9.getID())!=-1);
assert(table.find(player77.getID())!=-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player43.getID())!=-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player10.getID())!=-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.find(player39.getID())==-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.find(player60.getID())!=-1);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.find(player79.getID())!=-1);
assert(table.find(player39.getID())==-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player23.getID())==-1);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.find(player75.getID())!=-1);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.find(player47.getID())==-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.find(player12.getID())==-1);
assert(table.find(player33.getID())==-1);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.find(player92.getID())!=-1);
assert(table.find(player97.getID())==-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.find(player14.getID())==-1);
assert(table.find(player95.getID())==-1);
assert(table.find(player6.getID())==-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player30.getID())==-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player17.getID())==-1);
assert(table.find(player33.getID())==-1);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.find(player39.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player97.getID())==-1);
assert(table.find(player97.getID())==-1);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.find(player83.getID())==-1);
assert(table.find(player10.getID())!=-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.find(player75.getID())!=-1);
assert(table.find(player74.getID())!=-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.find(player50.getID())!=-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.find(player68.getID())==-1);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.find(player78.getID())!=-1);
assert(table.find(player37.getID())==-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player37.getID())==-1);
assert(table.find(player32.getID())==-1);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.find(player41.getID())==-1);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.find(player14.getID())==-1);
assert(table.find(player78.getID())!=-1);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.find(player61.getID())==-1);
assert(table.find(player51.getID())==-1);
assert(table.find(player30.getID())!=-1);
assert(table.find(player6.getID())==-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.find(player51.getID())==-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player29.getID())==-1);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.find(player67.getID())!=-1);
assert(table.find(player68.getID())==-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.find(player22.getID())==-1);
assert(table.find(player66.getID())==-1);
assert(table.find(player26.getID())!=-1);
assert(table.find(player91.getID())!=-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player32.getID())==-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.find(player28.getID())==-1);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.find(player22.getID())==-1);
assert(table.find(player14.getID())==-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.find(player19.getID())==-1);
assert(table.find(player72.getID())==-1);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.find(player9.getID())!=-1);
assert(table.find(player17.getID())==-1);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.find(player37.getID())==-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.find(player78.getID())==-1);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.find(player99.getID())==-1);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player82.getID())==-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.find(player89.getID())!=-1);
assert(table.find(player75.getID())==-1);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.find(player44.getID())!=-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player84.getID())==-1);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player60.getID())!=-1);
assert(table.find(player12.getID())!=-1);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.find(player42.getID())==-1);
assert(table.find(player88.getID())==-1);
assert(table.find(player47.getID())==-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.find(player14.getID())==-1);
assert(table.find(player1.getID())==-1);
assert(table.find(player63.getID())!=-1);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player83.getID())==-1);
assert(table.find(player10.getID())!=-1);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player10.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.find(player78.getID())==-1);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.find(player33.getID())==-1);
assert(table.find(player80.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.find(player61.getID())==-1);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.find(player41.getID())!=-1);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.find(player65.getID())==-1);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.find(player35.getID())!=-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.find(player22.getID())==-1);
assert(table.find(player70.getID())==-1);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.find(player73.getID())==-1);
assert(table.find(player1.getID())==-1);
assert(table.find(player71.getID())!=-1);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.find(player38.getID())!=-1);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player27.getID())==-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player56.getID())==-1);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.find(player10.getID())!=-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.find(player84.getID())!=-1);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.find(player97.getID())!=-1);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.find(player24.getID())==-1);
assert(table.find(player10.getID())!=-1);
assert(table.find(player2.getID())==-1);
assert(table.find(player29.getID())!=-1);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.find(player5.getID())==-1);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player10.getID())!=-1);
assert(table.find(player39.getID())==-1);
assert(table.find(player96.getID())!=-1);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.find(player93.getID())!=-1);
assert(table.find(player73.getID())==-1);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player31.getID())!=-1);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.find(player29.getID())!=-1);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player41.getID())!=-1);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player83.getID())==-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.find(player21.getID())!=-1);
assert(table.find(player80.getID())==-1);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player40.getID())==-1);
assert(table.find(player25.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.find(player35.getID())!=-1);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.find(player48.getID())==-1);
assert(table.find(player12.getID())==-1);
assert(table.find(player65.getID())==-1);
assert(table.find(player2.getID())==-1);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player29.getID())!=-1);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.find(player19.getID())!=-1);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player67.getID())==-1);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player75.getID())!=-1);
assert(table.find(player97.getID())!=-1);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player11.getID())==-1);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player86.getID())!=-1);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player16.getID())==-1);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player97.getID())==-1);
assert(table.find(player98.getID())==-1);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player36.getID())!=-1);
assert(table.find(player19.getID())!=-1);
assert(table.find(player40.getID())==-1);
assert(table.find(player91.getID())!=-1);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player91.getID())!=-1);
assert(table.find(player2.getID())==-1);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.find(player16.getID())==-1);
assert(table.find(player17.getID())==-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player72.getID())!=-1);
assert(table.find(player28.getID())!=-1);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.find(player28.getID())!=-1);
assert(table.find(player2.getID())==-1);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.find(player84.getID())!=-1);
assert(table.find(player76.getID())==-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player60.getID())==-1);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.find(player22.getID())==-1);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.find(player47.getID())!=-1);
assert(table.find(player9.getID())!=-1);
assert(table.find(player45.getID())==-1);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.find(player37.getID())==-1);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.find(player14.getID())==-1);
assert(table.find(player42.getID())!=-1);
assert(table.find(player49.getID())==-1);
assert(table.find(player94.getID())==-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.find(player7.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.find(player84.getID())!=-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.find(player51.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.find(player18.getID())==-1);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.find(player26.getID())==-1);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.find(player11.getID())==-1);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.find(player27.getID())==-1);
assert(table.find(player26.getID())==-1);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.find(player27.getID())==-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.find(player89.getID())!=-1);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.find(player75.getID())!=-1);
assert(table.find(player88.getID())==-1);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.find(player29.getID())!=-1);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.find(player77.getID())==-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.find(player89.getID())!=-1);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player41.getID())==-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.find(player96.getID())==-1);
assert(table.find(player93.getID())==-1);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.find(player32.getID())==-1);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.find(player36.getID())==-1);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.find(player98.getID())==-1);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player80.getID())!=-1);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player69.getID())!=-1);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player55.getID())==-1);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.find(player24.getID())==-1);
assert(table.remove(player19.getID())==NOT_FOUND);
