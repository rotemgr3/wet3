Player player1(53,574);
Player player2(69,38);
Player player3(76,718);
Player player4(20,425);
Player player5(32,666);
Player player6(13,287);
Player player7(79,115);
Player player8(36,229);
Player player9(90,272);
Player player10(83,221);
Player player11(75,553);
Player player12(101,280);
Player player13(85,310);
Player player14(84,517);
Player player15(40,449);
Player player16(19,422);
Player player17(39,769);
Player player18(38,45);
Player player19(33,266);
Player player20(106,775);
Player player21(28,486);
Player player22(89,549);
Player player23(60,137);
Player player24(24,638);
Player player25(67,122);
Player player26(72,607);
Player player27(103,360);
Player player28(95,49);
Player player29(59,545);
Player player30(80,421);
Player player31(64,155);
Player player32(56,578);
Player player33(10,293);
Player player34(37,160);
Player player35(61,386);
Player player36(91,504);
Player player37(81,734);
Player player38(42,603);
Player player39(70,195);
Player player40(107,749);
Player player41(55,667);
Player player42(44,787);
Player player43(47,68);
Player player44(117,203);
Player player45(50,326);
Player player46(115,356);
Player player47(3,641);
Player player48(71,164);
Player player49(11,2);
Player player50(94,335);
Player player51(1,489);
Player player52(99,244);
Player player53(2,495);
Player player54(12,166);
Player player55(6,80);
Player player56(27,75);
Player player57(4,550);
Player player58(93,626);
Player player59(15,89);
Player player60(14,573);
Player player61(68,559);
Player player62(34,242);
Player player63(74,706);
Player player64(7,274);
Player player65(29,791);
Player player66(62,364);
Player player67(31,431);
Player player68(104,751);
Player player69(51,236);
Player player70(65,694);
Player player71(92,126);
Player player72(54,324);
Player player73(113,305);
Player player74(57,752);
Player player75(86,168);
Player player76(82,575);
Player player77(5,795);
Player player78(8,318);
Player player79(30,398);
Player player80(114,679);
Player player81(46,619);
Player player82(110,9);
Player player83(111,228);
Player player84(23,403);
Player player85(43,323);
Player player86(16,561);
Player player87(45,495);
Player player88(9,329);
Player player89(119,761);
Player player90(105,738);
Player player91(63,561);
Player player92(102,521);
Player player93(78,43);
Player player94(118,582);
Player player95(73,236);
Player player96(98,158);
Player player97(52,144);
Player player98(48,75);
Player player99(22,577);
Player player100(109,10);
Player player101(21,688);
Player player102(116,265);
Player player103(58,751);
Player player104(25,623);
Player player105(112,33);
Player player106(41,175);
Player player107(77,111);
Player player108(100,707);
Player player109(97,5);
Player player110(88,644);
Player player111(35,71);
Player player112(87,70);
Player player113(66,585);
Player player114(26,527);
Player player115(18,227);
Player player116(49,227);
Player player117(17,621);
Player player118(108,150);
Player player119(96,698);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player68.getID())==-1);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.find(player36.getID())==-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.find(player66.getID())==-1);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.find(player79.getID())==-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.find(player65.getID())==-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.find(player94.getID())==-1);
assert(table.find(player14.getID())==-1);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.find(player85.getID())==-1);
assert(table.find(player20.getID())==-1);
assert(table.find(player49.getID())==-1);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.find(player15.getID())==-1);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player78.getID())==-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player119.getID())==-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.find(player47.getID())==-1);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.find(player109.getID())==-1);
assert(table.find(player94.getID())==-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.find(player16.getID())==-1);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.find(player33.getID())==-1);
assert(table.find(player39.getID())==-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.find(player106.getID())==-1);
assert(table.find(player8.getID())==-1);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player83.getID())==-1);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.find(player35.getID())==-1);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player96.getID())==-1);
assert(table.find(player106.getID())==-1);
assert(table.find(player42.getID())==-1);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player58.getID())==-1);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.find(player19.getID())!=-1);
assert(table.find(player68.getID())==-1);
assert(table.find(player102.getID())==-1);
assert(table.find(player18.getID())==-1);
assert(table.find(player30.getID())==-1);
assert(table.find(player117.getID())==-1);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.find(player101.getID())==-1);
assert(table.find(player53.getID())==-1);
assert(table.find(player91.getID())==-1);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.find(player38.getID())==-1);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.find(player69.getID())==-1);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.find(player117.getID())==-1);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.find(player103.getID())==-1);
assert(table.find(player31.getID())==-1);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.find(player98.getID())==-1);
assert(table.find(player102.getID())==-1);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.find(player97.getID())==-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.find(player4.getID())!=-1);
assert(table.find(player50.getID())==-1);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.find(player101.getID())==-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player5.getID())==-1);
assert(table.find(player81.getID())==-1);
assert(table.find(player89.getID())==-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.find(player11.getID())==-1);
assert(table.find(player14.getID())==-1);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.find(player17.getID())==-1);
assert(table.find(player78.getID())!=-1);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.find(player38.getID())==-1);
assert(table.find(player1.getID())==-1);
assert(table.find(player45.getID())==-1);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player99.getID())==-1);
assert(table.find(player66.getID())!=-1);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player32.getID())==-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.find(player95.getID())==-1);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.find(player37.getID())==-1);
assert(table.find(player105.getID())!=-1);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player2.getID())==-1);
assert(table.find(player113.getID())!=-1);
assert(table.find(player65.getID())==-1);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.find(player101.getID())==-1);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player46.getID())==-1);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.find(player43.getID())==-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player94.getID())==-1);
assert(table.find(player11.getID())==-1);
assert(table.find(player89.getID())==-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.find(player70.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.find(player23.getID())==-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.find(player84.getID())==-1);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.find(player68.getID())!=-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.find(player57.getID())==-1);
assert(table.find(player24.getID())!=-1);
assert(table.find(player107.getID())!=-1);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.find(player108.getID())!=-1);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.find(player81.getID())==-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.find(player20.getID())==-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.find(player9.getID())!=-1);
assert(table.find(player89.getID())==-1);
assert(table.find(player90.getID())==-1);
assert(table.find(player107.getID())!=-1);
assert(table.find(player33.getID())==-1);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player65.getID())==-1);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.find(player33.getID())==-1);
assert(table.find(player54.getID())==-1);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.find(player104.getID())!=-1);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.find(player53.getID())!=-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player46.getID())==-1);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.find(player55.getID())!=-1);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.find(player60.getID())==-1);
assert(table.find(player119.getID())!=-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.find(player81.getID())==-1);
assert(table.find(player19.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.find(player19.getID())!=-1);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.find(player118.getID())==-1);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player80.getID())==-1);
assert(table.find(player88.getID())==-1);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.find(player87.getID())!=-1);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.find(player79.getID())==-1);
assert(table.find(player37.getID())!=-1);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.find(player28.getID())==-1);
assert(table.find(player31.getID())==-1);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.find(player81.getID())==-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.find(player66.getID())==-1);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.find(player39.getID())!=-1);
assert(table.find(player64.getID())==-1);
assert(table.find(player11.getID())==-1);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.find(player97.getID())!=-1);
assert(table.find(player32.getID())==-1);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.find(player45.getID())==-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player51.getID())==-1);
assert(table.find(player68.getID())!=-1);
assert(table.find(player9.getID())!=-1);
assert(table.find(player57.getID())==-1);
assert(table.find(player100.getID())!=-1);
assert(table.find(player32.getID())==-1);
assert(table.find(player37.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player52.getID())!=-1);
assert(table.find(player37.getID())!=-1);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.find(player35.getID())==-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player70.getID())!=-1);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player100.getID())!=-1);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player39.getID())!=-1);
assert(table.find(player102.getID())==-1);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.find(player93.getID())==-1);
assert(table.find(player101.getID())==-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.find(player63.getID())==-1);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player32.getID())==-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player57.getID())==-1);
assert(table.find(player12.getID())!=-1);
assert(table.find(player109.getID())==-1);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.find(player60.getID())==-1);
assert(table.find(player84.getID())!=-1);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.find(player70.getID())!=-1);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.find(player2.getID())!=-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.find(player77.getID())==-1);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.find(player82.getID())!=-1);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.find(player10.getID())!=-1);
assert(table.find(player65.getID())==-1);
assert(table.find(player83.getID())==-1);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player19.getID())==-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player114.getID())!=-1);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.find(player40.getID())==-1);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player70.getID())!=-1);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.find(player60.getID())==-1);
assert(table.find(player91.getID())==-1);
assert(table.find(player25.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player10.getID())!=-1);
assert(table.find(player49.getID())!=-1);
assert(table.find(player1.getID())==-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player104.getID())!=-1);
assert(table.find(player4.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player106.getID())!=-1);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.find(player99.getID())==-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player92.getID())==-1);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.find(player63.getID())==-1);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player68.getID())!=-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player110.getID())==-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player2.getID())!=-1);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player106.getID())!=-1);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.find(player52.getID())!=-1);
assert(table.find(player47.getID())!=-1);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.find(player56.getID())==-1);
assert(table.find(player69.getID())==-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.find(player103.getID())!=-1);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.find(player117.getID())!=-1);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.find(player92.getID())!=-1);
assert(table.find(player1.getID())==-1);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player32.getID())!=-1);
assert(table.find(player57.getID())==-1);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.find(player70.getID())!=-1);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.find(player67.getID())==-1);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.find(player49.getID())==-1);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.find(player48.getID())!=-1);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.find(player67.getID())==-1);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.find(player113.getID())==-1);
assert(table.find(player79.getID())==-1);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.find(player7.getID())==-1);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.find(player51.getID())==-1);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.find(player30.getID())==-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.find(player73.getID())==-1);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.find(player44.getID())==-1);
assert(table.find(player16.getID())==-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player59.getID())==-1);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.find(player11.getID())==-1);
assert(table.find(player1.getID())==-1);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.find(player110.getID())==-1);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.find(player102.getID())!=-1);
assert(table.find(player101.getID())==-1);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.find(player79.getID())==-1);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.find(player97.getID())!=-1);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player82.getID())==-1);
assert(table.find(player31.getID())==-1);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.find(player99.getID())==-1);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.find(player57.getID())==-1);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.find(player42.getID())==-1);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.find(player41.getID())==-1);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.find(player119.getID())==-1);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.find(player29.getID())!=-1);
assert(table.find(player97.getID())!=-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.find(player107.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player69.getID())==-1);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player104.getID())!=-1);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.find(player118.getID())==-1);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.find(player82.getID())==-1);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.find(player117.getID())!=-1);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player68.getID())!=-1);
assert(table.find(player3.getID())==-1);
assert(table.find(player114.getID())!=-1);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player109.getID())==-1);
assert(table.find(player98.getID())==-1);
assert(table.find(player107.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.insert(player111.getID(), &player111)==ALREADY_EXIST);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.find(player21.getID())!=-1);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.find(player41.getID())==-1);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.find(player58.getID())==-1);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.find(player84.getID())==-1);
assert(table.find(player37.getID())!=-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.find(player70.getID())!=-1);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.find(player96.getID())!=-1);
assert(table.find(player11.getID())==-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.find(player103.getID())!=-1);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player5.getID())==-1);
assert(table.find(player86.getID())==-1);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player61.getID())==-1);
assert(table.find(player54.getID())==-1);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.find(player84.getID())==-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.find(player51.getID())==-1);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.find(player104.getID())!=-1);
assert(table.find(player57.getID())==-1);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.find(player112.getID())==-1);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.find(player87.getID())==-1);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.find(player76.getID())==-1);
assert(table.find(player6.getID())==-1);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player105.getID())==-1);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.find(player14.getID())==-1);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player67.getID())!=-1);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.find(player119.getID())==-1);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.find(player100.getID())!=-1);
assert(table.find(player88.getID())!=-1);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.find(player31.getID())==-1);
assert(table.find(player63.getID())!=-1);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.find(player44.getID())!=-1);
assert(table.find(player36.getID())!=-1);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.find(player56.getID())==-1);
assert(table.find(player106.getID())!=-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player70.getID())!=-1);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.insert(player109.getID(), &player109)==ALREADY_EXIST);
assert(table.find(player78.getID())==-1);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.find(player47.getID())!=-1);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.find(player93.getID())==-1);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.find(player69.getID())==-1);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.find(player53.getID())!=-1);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.find(player36.getID())!=-1);
assert(table.find(player61.getID())==-1);
assert(table.find(player12.getID())==-1);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player61.getID())==-1);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.find(player41.getID())==-1);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.find(player73.getID())==-1);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.find(player119.getID())==-1);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.find(player59.getID())==-1);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player12.getID())==-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.find(player82.getID())==-1);
assert(table.find(player49.getID())==-1);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.find(player104.getID())!=-1);
assert(table.find(player83.getID())==-1);
assert(table.find(player101.getID())==-1);
assert(table.find(player65.getID())!=-1);
assert(table.find(player54.getID())==-1);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.find(player106.getID())!=-1);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player44.getID())!=-1);
assert(table.find(player111.getID())==-1);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player108.getID())==-1);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.find(player78.getID())!=-1);
assert(table.find(player91.getID())==-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.find(player50.getID())!=-1);
assert(table.find(player88.getID())==-1);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.find(player78.getID())!=-1);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.find(player50.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.find(player106.getID())!=-1);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player100.getID())!=-1);
assert(table.find(player49.getID())==-1);
assert(table.find(player90.getID())==-1);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.find(player19.getID())==-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player33.getID())!=-1);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.find(player108.getID())==-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.find(player69.getID())==-1);
assert(table.find(player65.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.find(player91.getID())==-1);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.find(player4.getID())!=-1);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.find(player78.getID())==-1);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player29.getID())!=-1);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.find(player91.getID())==-1);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.find(player115.getID())==-1);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.find(player96.getID())!=-1);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.find(player65.getID())!=-1);
assert(table.find(player39.getID())!=-1);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.find(player24.getID())!=-1);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player89.getID())!=-1);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.find(player98.getID())==-1);
assert(table.find(player59.getID())!=-1);
assert(table.find(player52.getID())==-1);
assert(table.find(player89.getID())!=-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player117.getID())!=-1);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player34.getID())!=-1);
assert(table.find(player49.getID())==-1);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.find(player77.getID())==-1);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player43.getID())==-1);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.find(player42.getID())!=-1);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.find(player75.getID())!=-1);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.find(player92.getID())!=-1);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.find(player37.getID())==-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.find(player23.getID())==-1);
assert(table.find(player28.getID())!=-1);
assert(table.find(player55.getID())==-1);
assert(table.find(player1.getID())!=-1);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.find(player37.getID())==-1);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.find(player19.getID())==-1);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player32.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.find(player27.getID())==-1);
assert(table.find(player117.getID())!=-1);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.find(player11.getID())!=-1);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.find(player46.getID())==-1);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player5.getID())!=-1);
assert(table.find(player112.getID())!=-1);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player68.getID())==-1);
assert(table.find(player12.getID())==-1);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.find(player67.getID())!=-1);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.find(player18.getID())==-1);
assert(table.find(player45.getID())==-1);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.find(player28.getID())!=-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.find(player14.getID())==-1);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player104.getID())!=-1);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player117.getID())!=-1);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.find(player80.getID())!=-1);
assert(table.find(player103.getID())==-1);
assert(table.find(player99.getID())==-1);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.find(player78.getID())!=-1);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.find(player97.getID())==-1);
assert(table.find(player101.getID())==-1);
assert(table.find(player60.getID())!=-1);
assert(table.remove(player110.getID())==NOT_FOUND);
assert(table.find(player41.getID())!=-1);
assert(table.find(player46.getID())==-1);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.find(player16.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player54.getID())==-1);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.find(player112.getID())!=-1);
assert(table.find(player6.getID())==-1);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.find(player100.getID())==-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.find(player42.getID())!=-1);
assert(table.find(player79.getID())!=-1);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.find(player52.getID())!=-1);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player32.getID())==-1);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.find(player15.getID())==-1);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.find(player41.getID())!=-1);
assert(table.find(player46.getID())==-1);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.find(player109.getID())!=-1);
assert(table.find(player15.getID())==-1);
assert(table.find(player79.getID())!=-1);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.find(player36.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player77.getID())!=-1);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player59.getID())!=-1);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player25.getID())!=-1);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.find(player37.getID())!=-1);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.find(player98.getID())==-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.find(player6.getID())==-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.find(player10.getID())!=-1);
assert(table.find(player7.getID())==-1);
assert(table.find(player29.getID())==-1);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player116.getID())==-1);
assert(table.find(player46.getID())==-1);
assert(table.find(player19.getID())!=-1);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player10.getID())!=-1);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player117.getID())!=-1);
assert(table.find(player16.getID())==-1);
assert(table.find(player32.getID())==-1);
assert(table.find(player3.getID())==-1);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player24.getID())==-1);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player24.getID())==-1);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player41.getID())!=-1);
assert(table.find(player86.getID())==-1);
assert(table.find(player73.getID())==-1);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player116.getID())==-1);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.find(player41.getID())!=-1);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player62.getID())==-1);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.find(player2.getID())!=-1);
assert(table.find(player89.getID())==-1);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player4.getID())!=-1);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.find(player6.getID())!=-1);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.find(player38.getID())==-1);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player8.getID())==-1);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.find(player67.getID())!=-1);
assert(table.find(player115.getID())!=-1);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.find(player93.getID())!=-1);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.find(player98.getID())!=-1);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player20.getID())==-1);
assert(table.find(player32.getID())==-1);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.find(player111.getID())==-1);
assert(table.find(player97.getID())==-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.find(player50.getID())==-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.find(player112.getID())!=-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.find(player16.getID())==-1);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player111.getID())==-1);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player9.getID())!=-1);
assert(table.find(player47.getID())==-1);
assert(table.find(player32.getID())==-1);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.find(player97.getID())==-1);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.find(player22.getID())==-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player113.getID())==-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.find(player57.getID())==-1);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.find(player111.getID())==-1);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.find(player65.getID())!=-1);
assert(table.find(player23.getID())!=-1);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.find(player88.getID())!=-1);
assert(table.find(player49.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player119.getID())!=-1);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.find(player23.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.find(player53.getID())!=-1);
assert(table.find(player38.getID())==-1);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.find(player27.getID())==-1);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.find(player51.getID())!=-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.find(player22.getID())==-1);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.find(player63.getID())!=-1);
assert(table.find(player48.getID())!=-1);
assert(table.find(player77.getID())!=-1);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.find(player100.getID())==-1);
assert(table.find(player78.getID())!=-1);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.find(player11.getID())!=-1);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.find(player98.getID())==-1);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.find(player113.getID())!=-1);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.find(player19.getID())!=-1);
assert(table.find(player110.getID())!=-1);
assert(table.find(player71.getID())==-1);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.find(player106.getID())==-1);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player87.getID())!=-1);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.find(player16.getID())==-1);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.find(player43.getID())==-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.find(player77.getID())!=-1);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.find(player33.getID())==-1);
assert(table.find(player113.getID())==-1);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.find(player58.getID())==-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.find(player15.getID())!=-1);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.find(player71.getID())==-1);
assert(table.find(player113.getID())==-1);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.find(player91.getID())==-1);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.find(player8.getID())==-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.find(player37.getID())!=-1);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player50.getID())!=-1);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.find(player61.getID())!=-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player65.getID())!=-1);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.find(player45.getID())==-1);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.find(player50.getID())!=-1);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.find(player37.getID())==-1);
assert(table.find(player45.getID())==-1);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.find(player104.getID())!=-1);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player18.getID())==-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.find(player21.getID())==-1);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.find(player91.getID())==-1);
assert(table.find(player100.getID())==-1);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.find(player36.getID())!=-1);
assert(table.find(player104.getID())!=-1);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player49.getID())==-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player38.getID())==-1);
assert(table.find(player93.getID())!=-1);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player22.getID())!=-1);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player119.getID())!=-1);
assert(table.find(player58.getID())==-1);
assert(table.find(player52.getID())==-1);
assert(table.find(player4.getID())!=-1);
assert(table.find(player65.getID())!=-1);
assert(table.find(player109.getID())!=-1);
assert(table.find(player70.getID())==-1);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.find(player102.getID())!=-1);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.find(player110.getID())!=-1);
assert(table.find(player63.getID())!=-1);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.find(player16.getID())==-1);
assert(table.find(player29.getID())==-1);
assert(table.find(player97.getID())==-1);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player43.getID())==-1);
assert(table.find(player33.getID())==-1);
assert(table.find(player86.getID())==-1);
assert(table.find(player50.getID())!=-1);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.find(player41.getID())!=-1);
assert(table.find(player17.getID())!=-1);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.find(player40.getID())!=-1);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.find(player63.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.remove(player105.getID())==NOT_FOUND);
assert(table.find(player13.getID())!=-1);
assert(table.find(player18.getID())==-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player59.getID())==-1);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player30.getID())==-1);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.find(player94.getID())!=-1);
assert(table.find(player74.getID())==-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player43.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player42.getID())!=-1);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.find(player103.getID())!=-1);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.find(player100.getID())==-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player114.getID())==NOT_FOUND);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.find(player2.getID())!=-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.find(player89.getID())==-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.find(player108.getID())==-1);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.find(player100.getID())!=-1);
assert(table.find(player79.getID())!=-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player50.getID())!=-1);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player103.getID())!=-1);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player109.getID())!=-1);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player81.getID())!=-1);
assert(table.find(player82.getID())!=-1);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.find(player32.getID())==-1);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.find(player17.getID())==-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.find(player40.getID())!=-1);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player59.getID())==-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.find(player31.getID())!=-1);
assert(table.find(player95.getID())==-1);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.find(player23.getID())!=-1);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.find(player39.getID())==-1);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player75.getID())==-1);
assert(table.find(player79.getID())!=-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.find(player119.getID())==-1);
assert(table.find(player119.getID())==-1);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.find(player75.getID())==-1);
assert(table.find(player69.getID())==-1);
assert(table.find(player101.getID())==-1);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player98.getID())==-1);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.find(player65.getID())!=-1);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.find(player15.getID())==-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.find(player42.getID())==-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.find(player115.getID())!=-1);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player119.getID())==-1);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player104.getID())==-1);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.find(player38.getID())==-1);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player35.getID())!=-1);
assert(table.find(player67.getID())!=-1);
assert(table.find(player3.getID())==-1);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.find(player46.getID())==-1);
assert(table.find(player36.getID())==-1);
assert(table.find(player23.getID())!=-1);
assert(table.find(player110.getID())!=-1);
assert(table.find(player56.getID())!=-1);
assert(table.find(player109.getID())==-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player67.getID())!=-1);
assert(table.find(player100.getID())!=-1);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.find(player6.getID())==-1);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.find(player92.getID())==-1);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.find(player4.getID())!=-1);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.find(player33.getID())==-1);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.find(player74.getID())==-1);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.find(player70.getID())==-1);
assert(table.find(player30.getID())==-1);
assert(table.find(player93.getID())!=-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player38.getID())!=-1);
assert(table.find(player8.getID())==-1);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.find(player66.getID())==-1);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.find(player5.getID())==-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.find(player52.getID())==-1);
assert(table.find(player69.getID())==-1);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.find(player1.getID())!=-1);
assert(table.find(player65.getID())!=-1);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player115.getID())!=-1);
assert(table.find(player117.getID())==-1);
assert(table.find(player45.getID())==-1);
assert(table.find(player67.getID())!=-1);
assert(table.find(player113.getID())==-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.find(player41.getID())==-1);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player113.getID())==-1);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.remove(player117.getID())==NOT_FOUND);
assert(table.find(player119.getID())==-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player117.getID())==-1);
assert(table.find(player83.getID())!=-1);
assert(table.find(player106.getID())!=-1);
assert(table.find(player72.getID())==-1);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.find(player47.getID())==-1);
assert(table.find(player18.getID())!=-1);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.find(player117.getID())==-1);
assert(table.find(player2.getID())==-1);
assert(table.find(player77.getID())==-1);
assert(table.find(player25.getID())==-1);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.find(player26.getID())==-1);
assert(table.find(player50.getID())==-1);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player31.getID())!=-1);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player46.getID())==-1);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.remove(player114.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.find(player89.getID())==-1);
assert(table.find(player84.getID())==-1);
assert(table.find(player105.getID())==-1);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.find(player61.getID())==-1);
assert(table.remove(player105.getID())==NOT_FOUND);
assert(table.find(player106.getID())!=-1);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player8.getID())!=-1);
assert(table.find(player58.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player19.getID())==-1);
assert(table.find(player12.getID())==-1);
assert(table.find(player19.getID())==-1);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.find(player7.getID())==-1);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.find(player81.getID())!=-1);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.find(player58.getID())!=-1);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player6.getID())==-1);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.find(player58.getID())!=-1);
assert(table.find(player17.getID())==-1);
assert(table.remove(player105.getID())==NOT_FOUND);
assert(table.find(player101.getID())!=-1);
assert(table.find(player6.getID())==-1);
assert(table.find(player83.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.find(player92.getID())==-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.find(player92.getID())==-1);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.find(player27.getID())==-1);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.remove(player110.getID())==NOT_FOUND);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.find(player19.getID())==-1);
assert(table.find(player9.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.find(player100.getID())!=-1);
assert(table.find(player110.getID())==-1);
assert(table.find(player43.getID())==-1);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.find(player13.getID())==-1);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.find(player77.getID())==-1);
assert(table.find(player51.getID())!=-1);
assert(table.find(player70.getID())==-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.find(player42.getID())==-1);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player7.getID())==-1);
assert(table.find(player54.getID())==-1);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.find(player65.getID())!=-1);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.find(player44.getID())==-1);
assert(table.find(player70.getID())==-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player38.getID())==-1);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.find(player44.getID())==-1);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.find(player74.getID())==-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.find(player26.getID())==-1);
assert(table.find(player43.getID())==-1);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.find(player39.getID())!=-1);
assert(table.find(player73.getID())!=-1);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.find(player92.getID())==-1);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.insert(player109.getID(), &player109)==ALREADY_EXIST);
assert(table.find(player22.getID())!=-1);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.find(player7.getID())==-1);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.find(player55.getID())==-1);
assert(table.find(player100.getID())!=-1);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.find(player78.getID())!=-1);
assert(table.find(player112.getID())==-1);
assert(table.find(player63.getID())!=-1);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.find(player95.getID())==-1);
assert(table.find(player2.getID())==-1);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.remove(player113.getID())==NOT_FOUND);
assert(table.find(player13.getID())==-1);
assert(table.find(player100.getID())!=-1);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player80.getID())!=-1);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player111.getID())==-1);
assert(table.find(player82.getID())!=-1);
assert(table.find(player114.getID())==-1);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.find(player94.getID())==-1);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player59.getID())!=-1);
assert(table.find(player35.getID())!=-1);
assert(table.find(player60.getID())!=-1);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.find(player41.getID())==-1);
assert(table.find(player64.getID())==-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player29.getID())==-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player96.getID())==-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.find(player86.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.find(player106.getID())!=-1);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player106.getID())!=-1);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player86.getID())!=-1);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.find(player54.getID())==-1);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.find(player108.getID())!=-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.find(player31.getID())!=-1);
assert(table.find(player58.getID())==-1);
assert(table.find(player117.getID())!=-1);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.find(player47.getID())!=-1);
assert(table.find(player117.getID())!=-1);
assert(table.find(player67.getID())!=-1);
assert(table.find(player5.getID())!=-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.find(player78.getID())!=-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.find(player96.getID())==-1);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.find(player42.getID())!=-1);
assert(table.find(player88.getID())==-1);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.find(player119.getID())!=-1);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.find(player108.getID())!=-1);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.find(player23.getID())!=-1);
assert(table.find(player64.getID())==-1);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.find(player64.getID())==-1);
assert(table.find(player109.getID())==-1);
assert(table.find(player45.getID())==-1);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.find(player38.getID())==-1);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player95.getID())==-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player119.getID())!=-1);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.find(player119.getID())!=-1);
assert(table.find(player31.getID())!=-1);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.find(player12.getID())!=-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.find(player80.getID())!=-1);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.find(player80.getID())!=-1);
assert(table.find(player87.getID())==-1);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.find(player31.getID())!=-1);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.find(player115.getID())!=-1);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.find(player21.getID())==-1);
assert(table.find(player94.getID())==-1);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.find(player33.getID())==-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player63.getID())!=-1);
assert(table.find(player117.getID())==-1);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.find(player81.getID())!=-1);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player26.getID())==-1);
assert(table.find(player41.getID())==-1);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.find(player88.getID())==-1);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.find(player109.getID())==-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.find(player73.getID())==-1);
assert(table.find(player43.getID())==-1);
assert(table.find(player70.getID())!=-1);
assert(table.find(player92.getID())==-1);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player16.getID())==-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player44.getID())==-1);
assert(table.find(player64.getID())==-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player67.getID())!=-1);
assert(table.find(player93.getID())!=-1);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.find(player9.getID())!=-1);
assert(table.find(player46.getID())!=-1);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.find(player43.getID())==-1);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.find(player18.getID())!=-1);
assert(table.find(player43.getID())==-1);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player94.getID())==-1);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.find(player21.getID())==-1);
assert(table.find(player112.getID())==-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.find(player19.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.find(player83.getID())==-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player94.getID())==-1);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.find(player78.getID())!=-1);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.find(player93.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.find(player20.getID())!=-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.find(player85.getID())!=-1);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.find(player97.getID())!=-1);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.find(player42.getID())==-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.find(player34.getID())!=-1);
assert(table.find(player74.getID())!=-1);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player35.getID())!=-1);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.find(player106.getID())!=-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.find(player39.getID())==-1);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player23.getID())!=-1);
assert(table.find(player20.getID())==-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.find(player100.getID())==-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.find(player65.getID())!=-1);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.find(player46.getID())==-1);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player99.getID())==-1);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player32.getID())==-1);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.find(player99.getID())==-1);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.find(player17.getID())==-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.find(player107.getID())==-1);
assert(table.find(player35.getID())!=-1);
assert(table.find(player27.getID())!=-1);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player98.getID())==-1);
assert(table.find(player65.getID())!=-1);
assert(table.find(player74.getID())!=-1);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.find(player82.getID())!=-1);
assert(table.find(player116.getID())==-1);
assert(table.find(player10.getID())!=-1);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.find(player2.getID())!=-1);
assert(table.find(player52.getID())==-1);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.find(player35.getID())!=-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player14.getID())==-1);
assert(table.find(player83.getID())==-1);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.find(player3.getID())!=-1);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.find(player16.getID())!=-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.find(player93.getID())==-1);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.find(player34.getID())!=-1);
assert(table.find(player68.getID())==-1);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player31.getID())!=-1);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.find(player115.getID())!=-1);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.find(player49.getID())==-1);
assert(table.find(player16.getID())!=-1);
assert(table.find(player89.getID())==-1);
assert(table.find(player81.getID())==-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.find(player5.getID())!=-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.find(player113.getID())!=-1);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.find(player81.getID())==-1);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.find(player79.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.find(player112.getID())!=-1);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player72.getID())==-1);
assert(table.find(player71.getID())==-1);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.find(player74.getID())!=-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player58.getID())==-1);
assert(table.find(player110.getID())!=-1);
assert(table.find(player47.getID())==-1);
assert(table.find(player84.getID())==-1);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.find(player53.getID())==-1);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player108.getID())!=-1);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.find(player57.getID())==-1);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player119.getID())!=-1);
assert(table.find(player8.getID())!=-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.find(player5.getID())!=-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.find(player61.getID())!=-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.find(player36.getID())!=-1);
assert(table.find(player107.getID())==-1);
assert(table.find(player60.getID())==-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player19.getID())!=-1);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.find(player109.getID())==-1);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.find(player85.getID())==-1);
assert(table.find(player38.getID())!=-1);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.find(player99.getID())!=-1);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.find(player74.getID())!=-1);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.find(player102.getID())!=-1);
assert(table.find(player27.getID())!=-1);
assert(table.find(player61.getID())==-1);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.find(player108.getID())!=-1);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.find(player15.getID())==-1);
assert(table.find(player15.getID())==-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.find(player115.getID())!=-1);
assert(table.find(player63.getID())==-1);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.find(player37.getID())==-1);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.find(player5.getID())!=-1);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player23.getID())==-1);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player117.getID())==-1);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.find(player31.getID())==-1);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.find(player81.getID())==-1);
assert(table.find(player108.getID())!=-1);
assert(table.find(player91.getID())==-1);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.find(player104.getID())!=-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player96.getID())!=-1);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.find(player72.getID())==-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player111.getID())==-1);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player106.getID())!=-1);
assert(table.find(player4.getID())==-1);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.find(player13.getID())==-1);
assert(table.find(player34.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.find(player57.getID())==-1);
assert(table.find(player68.getID())==-1);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.find(player13.getID())==-1);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.find(player113.getID())!=-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player81.getID())!=-1);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.find(player18.getID())!=-1);
assert(table.find(player112.getID())==-1);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.find(player25.getID())==-1);
assert(table.find(player88.getID())!=-1);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.find(player81.getID())!=-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.find(player16.getID())!=-1);
assert(table.find(player63.getID())==-1);
assert(table.find(player22.getID())==-1);
assert(table.find(player32.getID())==-1);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.find(player35.getID())!=-1);
assert(table.find(player47.getID())==-1);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.find(player21.getID())==-1);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.find(player84.getID())==-1);
assert(table.find(player64.getID())==-1);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.remove(player105.getID())==NOT_FOUND);
assert(table.find(player110.getID())!=-1);
assert(table.find(player11.getID())!=-1);
assert(table.find(player53.getID())==-1);
assert(table.find(player21.getID())==-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.find(player67.getID())!=-1);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.find(player104.getID())==-1);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.find(player34.getID())!=-1);
assert(table.find(player23.getID())==-1);
assert(table.find(player15.getID())==-1);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player12.getID())==-1);
assert(table.find(player52.getID())==-1);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.find(player37.getID())==-1);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player99.getID())==-1);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player114.getID())==-1);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.find(player96.getID())!=-1);
assert(table.find(player77.getID())==-1);
assert(table.find(player115.getID())!=-1);
assert(table.find(player53.getID())==-1);
assert(table.find(player6.getID())==-1);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player74.getID())!=-1);
assert(table.find(player85.getID())==-1);
assert(table.find(player91.getID())==-1);
assert(table.remove(player113.getID())==NOT_FOUND);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.find(player7.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.find(player41.getID())!=-1);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.find(player28.getID())==-1);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player23.getID())==-1);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player44.getID())==-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.find(player113.getID())==-1);
assert(table.find(player54.getID())!=-1);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.find(player93.getID())!=-1);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.find(player4.getID())==-1);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player100.getID())!=-1);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.find(player91.getID())==-1);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.find(player108.getID())!=-1);
assert(table.find(player101.getID())==-1);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.find(player104.getID())==-1);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player65.getID())!=-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player5.getID())!=-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.find(player69.getID())==-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.find(player90.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.find(player42.getID())==-1);
assert(table.find(player19.getID())==-1);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.find(player81.getID())!=-1);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.find(player88.getID())!=-1);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.find(player29.getID())==-1);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.find(player22.getID())!=-1);
assert(table.find(player82.getID())!=-1);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.find(player112.getID())!=-1);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.find(player9.getID())!=-1);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.find(player114.getID())==-1);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.find(player18.getID())!=-1);
assert(table.find(player63.getID())!=-1);
assert(table.find(player113.getID())==-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.find(player27.getID())==-1);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.find(player4.getID())!=-1);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.find(player15.getID())!=-1);
assert(table.find(player32.getID())==-1);
assert(table.find(player58.getID())!=-1);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.find(player42.getID())==-1);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player73.getID())!=-1);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.find(player58.getID())!=-1);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.find(player36.getID())!=-1);
assert(table.find(player24.getID())!=-1);
assert(table.find(player28.getID())==-1);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.find(player33.getID())!=-1);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.find(player61.getID())==-1);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.find(player20.getID())==-1);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.find(player28.getID())==-1);
assert(table.find(player104.getID())==-1);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player42.getID())==-1);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.find(player19.getID())==-1);
assert(table.find(player63.getID())==-1);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.find(player60.getID())==-1);
assert(table.find(player55.getID())==-1);
assert(table.find(player106.getID())==-1);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.find(player49.getID())!=-1);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player68.getID())!=-1);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player67.getID())!=-1);
assert(table.find(player82.getID())!=-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.find(player112.getID())==-1);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player64.getID())==-1);
assert(table.find(player74.getID())==-1);
assert(table.find(player43.getID())==-1);
assert(table.find(player114.getID())==-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.find(player10.getID())==-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.find(player89.getID())!=-1);
assert(table.find(player37.getID())!=-1);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.find(player65.getID())!=-1);
assert(table.find(player116.getID())!=-1);
assert(table.find(player23.getID())==-1);
assert(table.find(player26.getID())!=-1);
assert(table.find(player117.getID())!=-1);
assert(table.find(player85.getID())==-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.find(player14.getID())==-1);
assert(table.find(player14.getID())==-1);
assert(table.find(player20.getID())==-1);
assert(table.find(player73.getID())!=-1);
assert(table.find(player38.getID())==-1);
assert(table.insert(player111.getID(), &player111)==ALREADY_EXIST);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.find(player47.getID())!=-1);
assert(table.find(player108.getID())!=-1);
assert(table.find(player46.getID())==-1);
assert(table.find(player105.getID())==-1);
assert(table.find(player41.getID())==-1);
assert(table.find(player65.getID())!=-1);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.find(player47.getID())!=-1);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.find(player97.getID())==-1);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player73.getID())!=-1);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.find(player97.getID())==-1);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.find(player75.getID())!=-1);
assert(table.find(player79.getID())==-1);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.find(player85.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.find(player96.getID())==-1);
assert(table.find(player84.getID())!=-1);
assert(table.find(player89.getID())!=-1);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player42.getID())==-1);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.find(player93.getID())!=-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.find(player107.getID())!=-1);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.find(player59.getID())==-1);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player38.getID())==-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.find(player94.getID())==-1);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.find(player44.getID())!=-1);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.find(player77.getID())==-1);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.find(player97.getID())==-1);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.find(player21.getID())==-1);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.find(player107.getID())!=-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.find(player98.getID())!=-1);
assert(table.find(player39.getID())==-1);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player9.getID())!=-1);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player66.getID())!=-1);
assert(table.find(player40.getID())==-1);
assert(table.find(player3.getID())!=-1);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player77.getID())==-1);
assert(table.find(player87.getID())==-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.find(player96.getID())==-1);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player91.getID())!=-1);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.find(player88.getID())!=-1);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.find(player26.getID())!=-1);
assert(table.find(player51.getID())==-1);
assert(table.find(player116.getID())!=-1);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.find(player92.getID())!=-1);
assert(table.find(player44.getID())!=-1);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player51.getID())==-1);
assert(table.find(player9.getID())!=-1);
assert(table.find(player20.getID())!=-1);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.find(player70.getID())==-1);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.find(player48.getID())==-1);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player18.getID())!=-1);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.find(player107.getID())==-1);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.find(player118.getID())!=-1);
assert(table.find(player47.getID())==-1);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.find(player78.getID())==-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.find(player41.getID())==-1);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.find(player72.getID())==-1);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.find(player96.getID())==-1);
assert(table.find(player59.getID())==-1);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player85.getID())==-1);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.find(player44.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.find(player53.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.find(player75.getID())==-1);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player55.getID())==-1);
assert(table.find(player33.getID())!=-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player28.getID())!=-1);
assert(table.find(player87.getID())==-1);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.find(player116.getID())==-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.remove(player113.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player108.getID())!=-1);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.find(player72.getID())==-1);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player77.getID())==-1);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.find(player90.getID())!=-1);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.find(player93.getID())==-1);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.find(player77.getID())==-1);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player110.getID())!=-1);
assert(table.find(player117.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player100.getID())==-1);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.find(player78.getID())==-1);
assert(table.find(player96.getID())==-1);
assert(table.find(player14.getID())==-1);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.find(player61.getID())!=-1);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.insert(player109.getID(), &player109)==ALREADY_EXIST);
assert(table.find(player105.getID())==-1);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.find(player92.getID())==-1);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player118.getID())!=-1);
assert(table.find(player7.getID())!=-1);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.find(player80.getID())!=-1);
assert(table.find(player24.getID())==-1);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player67.getID())==-1);
assert(table.find(player58.getID())!=-1);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.find(player112.getID())==-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.find(player84.getID())!=-1);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player50.getID())!=-1);
assert(table.find(player92.getID())==-1);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.find(player19.getID())==-1);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player12.getID())==-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.find(player11.getID())==-1);
assert(table.find(player6.getID())==-1);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.find(player101.getID())==-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.find(player81.getID())==-1);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.find(player3.getID())!=-1);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.find(player13.getID())==-1);
assert(table.find(player37.getID())==-1);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.find(player64.getID())==-1);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.find(player92.getID())==-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player69.getID())==-1);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.find(player25.getID())!=-1);
assert(table.find(player10.getID())!=-1);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.find(player94.getID())==-1);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player35.getID())!=-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player86.getID())==-1);
assert(table.find(player103.getID())==-1);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.find(player108.getID())==-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.find(player28.getID())!=-1);
assert(table.find(player99.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.find(player118.getID())==-1);
assert(table.find(player16.getID())==-1);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.find(player31.getID())==-1);
assert(table.find(player40.getID())==-1);
assert(table.find(player69.getID())==-1);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.find(player111.getID())!=-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.find(player54.getID())!=-1);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.find(player50.getID())!=-1);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.find(player68.getID())!=-1);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player12.getID())==-1);
assert(table.find(player9.getID())==-1);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.find(player59.getID())==-1);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.find(player42.getID())!=-1);
assert(table.find(player61.getID())==-1);
assert(table.find(player26.getID())!=-1);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.find(player92.getID())==-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.find(player94.getID())==-1);
assert(table.find(player42.getID())!=-1);
assert(table.find(player31.getID())==-1);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player46.getID())!=-1);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.find(player117.getID())!=-1);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player108.getID())==-1);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.find(player112.getID())==-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player64.getID())==-1);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.find(player2.getID())!=-1);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.find(player24.getID())==-1);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.find(player38.getID())!=-1);
assert(table.find(player109.getID())!=-1);
assert(table.find(player36.getID())==-1);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player101.getID())!=-1);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.find(player79.getID())==-1);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.find(player105.getID())==-1);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.find(player49.getID())!=-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player103.getID())==-1);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.find(player1.getID())!=-1);
assert(table.find(player24.getID())==-1);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.find(player96.getID())==-1);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player78.getID())==-1);
assert(table.find(player30.getID())!=-1);
assert(table.find(player106.getID())==-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player109.getID(), &player109)==ALREADY_EXIST);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player101.getID())!=-1);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.find(player1.getID())!=-1);
assert(table.find(player2.getID())!=-1);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.find(player49.getID())!=-1);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player98.getID())!=-1);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.find(player45.getID())==-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.find(player70.getID())==-1);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player102.getID())==-1);
assert(table.find(player100.getID())==-1);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.find(player93.getID())!=-1);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.find(player40.getID())!=-1);
assert(table.find(player62.getID())!=-1);
assert(table.find(player64.getID())!=-1);
assert(table.find(player18.getID())==-1);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player53.getID())==-1);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.find(player71.getID())==-1);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.find(player80.getID())==-1);
assert(table.find(player26.getID())!=-1);
assert(table.find(player7.getID())==-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player66.getID())==-1);
assert(table.find(player28.getID())==-1);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player101.getID())==-1);
assert(table.find(player39.getID())!=-1);
assert(table.find(player106.getID())==-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.find(player12.getID())==-1);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player105.getID())==NOT_FOUND);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.find(player92.getID())!=-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player84.getID())==-1);
assert(table.find(player59.getID())==-1);
assert(table.find(player18.getID())==-1);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.find(player19.getID())==-1);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.find(player1.getID())!=-1);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.find(player102.getID())==-1);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.find(player96.getID())!=-1);
assert(table.find(player4.getID())!=-1);
assert(table.find(player39.getID())!=-1);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player109.getID())!=-1);
assert(table.find(player36.getID())==-1);
assert(table.find(player82.getID())!=-1);
assert(table.find(player15.getID())!=-1);
assert(table.find(player3.getID())!=-1);
assert(table.find(player82.getID())!=-1);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.find(player101.getID())!=-1);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.find(player65.getID())==-1);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player71.getID())==-1);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.find(player28.getID())==-1);
assert(table.find(player60.getID())!=-1);
assert(table.find(player102.getID())==-1);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.find(player11.getID())==-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.find(player111.getID())!=-1);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player35.getID())==-1);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.find(player26.getID())==-1);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.find(player46.getID())==-1);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.find(player76.getID())!=-1);
assert(table.find(player74.getID())==-1);
assert(table.find(player75.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.find(player117.getID())==-1);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.find(player22.getID())!=-1);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.find(player111.getID())!=-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.find(player63.getID())==-1);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.find(player107.getID())==-1);
assert(table.find(player9.getID())==-1);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.find(player36.getID())!=-1);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.find(player101.getID())!=-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.find(player46.getID())==-1);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.find(player23.getID())!=-1);
assert(table.find(player70.getID())!=-1);
assert(table.find(player1.getID())!=-1);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player75.getID())!=-1);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.find(player10.getID())==-1);
assert(table.find(player14.getID())==-1);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.remove(player114.getID())==NOT_FOUND);
assert(table.find(player43.getID())!=-1);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.find(player118.getID())!=-1);
assert(table.find(player35.getID())==-1);
assert(table.find(player70.getID())!=-1);
assert(table.find(player3.getID())==-1);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.insert(player111.getID(), &player111)==ALREADY_EXIST);
assert(table.find(player85.getID())!=-1);
assert(table.find(player26.getID())==-1);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.find(player29.getID())==-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.find(player114.getID())==-1);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player4.getID())!=-1);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player49.getID())==-1);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.find(player114.getID())==-1);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player119.getID())!=-1);
assert(table.find(player37.getID())!=-1);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.find(player105.getID())==-1);
assert(table.find(player113.getID())!=-1);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.find(player13.getID())!=-1);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.find(player4.getID())!=-1);
assert(table.find(player31.getID())==-1);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.find(player68.getID())!=-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.find(player115.getID())==-1);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.find(player20.getID())!=-1);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.find(player55.getID())==-1);
assert(table.find(player24.getID())!=-1);
assert(table.find(player33.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player74.getID())==-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player58.getID())!=-1);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.find(player103.getID())==-1);
assert(table.find(player70.getID())!=-1);
assert(table.find(player53.getID())!=-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.find(player106.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.find(player56.getID())==-1);
assert(table.find(player25.getID())!=-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player11.getID())==-1);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.find(player67.getID())!=-1);
assert(table.find(player85.getID())!=-1);
assert(table.find(player99.getID())!=-1);
assert(table.find(player37.getID())!=-1);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.find(player74.getID())!=-1);
assert(table.find(player89.getID())==-1);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.find(player80.getID())==-1);
assert(table.find(player30.getID())==-1);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.find(player1.getID())!=-1);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player106.getID())!=-1);
assert(table.remove(player114.getID())==NOT_FOUND);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.find(player73.getID())==-1);
assert(table.find(player4.getID())!=-1);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.find(player72.getID())!=-1);
assert(table.find(player33.getID())!=-1);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player109.getID(), &player109)==ALREADY_EXIST);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player14.getID())==-1);
assert(table.find(player116.getID())!=-1);
assert(table.find(player10.getID())!=-1);
assert(table.insert(player109.getID(), &player109)==ALREADY_EXIST);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.find(player29.getID())==-1);
assert(table.find(player89.getID())==-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.find(player84.getID())!=-1);
assert(table.find(player14.getID())==-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player78.getID())==-1);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player103.getID())==-1);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player84.getID())!=-1);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.find(player86.getID())!=-1);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.find(player5.getID())!=-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.find(player21.getID())==-1);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player117.getID())==NOT_FOUND);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.find(player98.getID())!=-1);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.find(player46.getID())!=-1);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player68.getID())==-1);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player46.getID())!=-1);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.find(player83.getID())==-1);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.find(player92.getID())!=-1);
assert(table.find(player118.getID())==-1);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.find(player50.getID())==-1);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.find(player21.getID())==-1);
assert(table.find(player53.getID())==-1);
assert(table.find(player79.getID())==-1);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.find(player19.getID())!=-1);
assert(table.find(player94.getID())==-1);
assert(table.find(player9.getID())!=-1);
assert(table.find(player66.getID())==-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player65.getID())==-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player102.getID())==-1);
assert(table.find(player79.getID())==-1);
assert(table.find(player43.getID())!=-1);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.find(player27.getID())==-1);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.find(player45.getID())!=-1);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.find(player57.getID())!=-1);
assert(table.find(player1.getID())==-1);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.find(player19.getID())!=-1);
assert(table.find(player23.getID())==-1);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.find(player105.getID())==-1);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player28.getID())==-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player22.getID())!=-1);
assert(table.find(player30.getID())==-1);
assert(table.find(player15.getID())!=-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.find(player78.getID())!=-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player96.getID())!=-1);
assert(table.find(player50.getID())==-1);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.find(player20.getID())!=-1);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.find(player39.getID())!=-1);
assert(table.find(player110.getID())!=-1);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.find(player62.getID())!=-1);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.find(player98.getID())!=-1);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.find(player5.getID())!=-1);
assert(table.find(player35.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.find(player2.getID())!=-1);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.find(player82.getID())!=-1);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player35.getID())!=-1);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.find(player99.getID())==-1);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.find(player67.getID())!=-1);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.find(player7.getID())==-1);
assert(table.find(player113.getID())!=-1);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.find(player24.getID())!=-1);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.find(player96.getID())==-1);
assert(table.find(player63.getID())!=-1);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.find(player15.getID())!=-1);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.find(player19.getID())!=-1);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.find(player61.getID())==-1);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.find(player65.getID())==-1);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.find(player106.getID())==-1);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.find(player93.getID())==-1);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player1.getID())!=-1);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.find(player73.getID())!=-1);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.find(player45.getID())!=-1);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.find(player34.getID())==-1);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.find(player83.getID())==-1);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.find(player103.getID())!=-1);
assert(table.find(player52.getID())==-1);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player37.getID())!=-1);
assert(table.find(player46.getID())!=-1);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.find(player44.getID())==-1);
assert(table.find(player86.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.find(player89.getID())==-1);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.find(player13.getID())!=-1);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.find(player61.getID())==-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player87.getID())==-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.find(player43.getID())!=-1);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.find(player49.getID())!=-1);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player116.getID())==-1);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.find(player104.getID())==-1);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.find(player113.getID())!=-1);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.find(player104.getID())==-1);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.find(player100.getID())==-1);
assert(table.find(player4.getID())==-1);
assert(table.find(player47.getID())==-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.find(player14.getID())==-1);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.find(player2.getID())==-1);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.find(player84.getID())!=-1);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.find(player107.getID())!=-1);
assert(table.find(player68.getID())==-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player55.getID())==-1);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player101.getID())!=-1);
assert(table.find(player118.getID())!=-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player78.getID())!=-1);
assert(table.find(player88.getID())!=-1);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.find(player73.getID())!=-1);
assert(table.find(player40.getID())!=-1);
assert(table.find(player109.getID())!=-1);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.find(player68.getID())==-1);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.find(player59.getID())!=-1);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.find(player61.getID())==-1);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.find(player58.getID())!=-1);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.find(player93.getID())==-1);
assert(table.find(player111.getID())==-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player77.getID())!=-1);
assert(table.find(player119.getID())!=-1);
assert(table.find(player21.getID())==-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player89.getID())==-1);
assert(table.find(player107.getID())==-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player95.getID())==-1);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player25.getID())!=-1);
assert(table.find(player63.getID())==-1);
assert(table.remove(player114.getID())==NOT_FOUND);
assert(table.find(player70.getID())==-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.find(player103.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player110.getID())!=-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.find(player100.getID())==-1);
assert(table.find(player117.getID())!=-1);
assert(table.find(player90.getID())==-1);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player67.getID())!=-1);
assert(table.find(player30.getID())==-1);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.find(player82.getID())==-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player112.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.find(player28.getID())==-1);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player98.getID())!=-1);
assert(table.find(player80.getID())!=-1);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.find(player50.getID())==-1);
assert(table.find(player106.getID())==-1);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.find(player7.getID())==-1);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.find(player61.getID())!=-1);
assert(table.find(player37.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.find(player14.getID())==-1);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.find(player18.getID())!=-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player53.getID())!=-1);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.find(player101.getID())!=-1);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.find(player33.getID())!=-1);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.find(player90.getID())==-1);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.find(player91.getID())!=-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player15.getID())==-1);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.find(player75.getID())!=-1);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.find(player101.getID())!=-1);
assert(table.find(player58.getID())!=-1);
assert(table.find(player28.getID())==-1);
assert(table.find(player13.getID())==-1);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player112.getID())!=-1);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.find(player78.getID())==-1);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.find(player47.getID())==-1);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player118.getID())!=-1);
assert(table.find(player64.getID())==-1);
assert(table.find(player79.getID())!=-1);
assert(table.find(player36.getID())!=-1);
assert(table.find(player83.getID())==-1);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.find(player113.getID())!=-1);
assert(table.find(player86.getID())==-1);
assert(table.find(player2.getID())==-1);
assert(table.find(player24.getID())!=-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player64.getID())==-1);
assert(table.find(player119.getID())==-1);
assert(table.find(player83.getID())==-1);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.find(player16.getID())==-1);
assert(table.find(player8.getID())!=-1);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.find(player114.getID())==-1);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.find(player65.getID())==-1);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.find(player14.getID())==-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.find(player2.getID())==-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.find(player89.getID())!=-1);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.find(player67.getID())!=-1);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.find(player92.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player56.getID())==-1);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.find(player67.getID())!=-1);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.find(player1.getID())==-1);
assert(table.find(player65.getID())==-1);
assert(table.find(player57.getID())==-1);
assert(table.find(player107.getID())!=-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.find(player65.getID())==-1);
assert(table.find(player100.getID())==-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player118.getID())!=-1);
assert(table.find(player22.getID())==-1);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.find(player38.getID())!=-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player38.getID())!=-1);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.find(player114.getID())==-1);
assert(table.find(player82.getID())!=-1);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.find(player92.getID())==-1);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.find(player78.getID())==-1);
assert(table.find(player35.getID())==-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player11.getID())!=-1);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.find(player9.getID())!=-1);
assert(table.find(player25.getID())!=-1);
assert(table.find(player104.getID())==-1);
assert(table.find(player116.getID())!=-1);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.find(player31.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.find(player22.getID())==-1);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player37.getID())==-1);
assert(table.find(player88.getID())!=-1);
assert(table.find(player107.getID())!=-1);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.find(player21.getID())!=-1);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player36.getID())==-1);
assert(table.find(player54.getID())!=-1);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.find(player36.getID())==-1);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.find(player43.getID())!=-1);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.find(player92.getID())==-1);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player109.getID())!=-1);
assert(table.find(player115.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.find(player84.getID())==-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.find(player54.getID())!=-1);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.find(player111.getID())!=-1);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player29.getID())!=-1);
assert(table.find(player111.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.find(player113.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player116.getID())!=-1);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player83.getID())==-1);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.find(player98.getID())==-1);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player98.getID())==-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player12.getID())==-1);
assert(table.find(player98.getID())==-1);
assert(table.find(player2.getID())==-1);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player119.getID())==-1);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.find(player71.getID())==-1);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player20.getID())!=-1);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player83.getID())==-1);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.find(player77.getID())==-1);
assert(table.find(player95.getID())==-1);
assert(table.find(player46.getID())!=-1);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player28.getID())==-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.find(player93.getID())==-1);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player86.getID())==-1);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.find(player77.getID())==-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.find(player59.getID())!=-1);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.find(player23.getID())!=-1);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player81.getID())==-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.find(player22.getID())!=-1);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.find(player11.getID())==-1);
assert(table.find(player11.getID())==-1);
assert(table.find(player66.getID())!=-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.find(player97.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.find(player94.getID())==-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.find(player8.getID())==-1);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.find(player13.getID())!=-1);
assert(table.find(player2.getID())!=-1);
assert(table.find(player118.getID())!=-1);
assert(table.find(player51.getID())==-1);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.find(player109.getID())!=-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.find(player11.getID())==-1);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.find(player69.getID())!=-1);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player109.getID())!=-1);
assert(table.find(player84.getID())!=-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.find(player109.getID())!=-1);
assert(table.find(player105.getID())==-1);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.find(player106.getID())==-1);
assert(table.find(player115.getID())!=-1);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.find(player104.getID())!=-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.find(player95.getID())==-1);
assert(table.find(player96.getID())==-1);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player19.getID())!=-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.find(player45.getID())==-1);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.find(player103.getID())==-1);
assert(table.find(player45.getID())==-1);
assert(table.find(player119.getID())==-1);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player31.getID())==-1);
assert(table.find(player99.getID())!=-1);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.find(player99.getID())!=-1);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player23.getID())!=-1);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.find(player81.getID())==-1);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.find(player119.getID())==-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player85.getID())==-1);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.find(player67.getID())!=-1);
assert(table.find(player29.getID())==-1);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.find(player114.getID())==-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player83.getID())==-1);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player100.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player42.getID())!=-1);
assert(table.find(player97.getID())==-1);
assert(table.find(player86.getID())==-1);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.find(player30.getID())==-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.find(player82.getID())==-1);
assert(table.find(player44.getID())==-1);
assert(table.find(player78.getID())==-1);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player83.getID())==-1);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.find(player67.getID())!=-1);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player43.getID())==-1);
assert(table.find(player96.getID())==-1);
assert(table.find(player34.getID())!=-1);
assert(table.find(player67.getID())!=-1);
assert(table.find(player89.getID())==-1);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.find(player101.getID())==-1);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.find(player95.getID())!=-1);
assert(table.find(player79.getID())==-1);
assert(table.find(player6.getID())!=-1);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.find(player16.getID())==-1);
assert(table.find(player1.getID())==-1);
assert(table.find(player90.getID())!=-1);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.find(player100.getID())==-1);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.find(player13.getID())==-1);
assert(table.find(player71.getID())==-1);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.find(player43.getID())==-1);
assert(table.find(player68.getID())==-1);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player59.getID())!=-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.find(player91.getID())==-1);
assert(table.find(player31.getID())==-1);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.find(player13.getID())==-1);
assert(table.find(player62.getID())==-1);
assert(table.find(player9.getID())==-1);
assert(table.find(player16.getID())==-1);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player33.getID())!=-1);
assert(table.find(player13.getID())==-1);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player93.getID())!=-1);
assert(table.find(player19.getID())==-1);
assert(table.find(player70.getID())!=-1);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.find(player100.getID())==-1);
assert(table.find(player98.getID())==-1);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.find(player117.getID())==-1);
assert(table.find(player51.getID())==-1);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player59.getID())!=-1);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player117.getID())==-1);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.find(player104.getID())!=-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.find(player74.getID())==-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player5.getID())==-1);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.find(player34.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.find(player52.getID())!=-1);
assert(table.find(player10.getID())!=-1);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.find(player77.getID())==-1);
assert(table.find(player16.getID())!=-1);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player61.getID())==-1);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.find(player118.getID())==-1);
assert(table.find(player17.getID())==-1);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.find(player65.getID())!=-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.find(player96.getID())==-1);
assert(table.find(player80.getID())!=-1);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player21.getID())!=-1);
assert(table.find(player102.getID())==-1);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.find(player26.getID())==-1);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.find(player82.getID())!=-1);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.find(player86.getID())==-1);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player55.getID())==-1);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.find(player12.getID())==-1);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player73.getID())==-1);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player65.getID())!=-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.find(player29.getID())!=-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.find(player61.getID())==-1);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player67.getID())!=-1);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.remove(player117.getID())==NOT_FOUND);
assert(table.find(player30.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.find(player108.getID())==-1);
assert(table.find(player4.getID())!=-1);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.remove(player117.getID())==NOT_FOUND);
assert(table.find(player11.getID())==-1);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.find(player114.getID())==-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.find(player66.getID())==-1);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.find(player74.getID())==-1);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.find(player99.getID())==-1);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.find(player7.getID())==-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.find(player1.getID())==-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.find(player62.getID())!=-1);
assert(table.find(player82.getID())!=-1);
assert(table.find(player51.getID())==-1);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player57.getID())!=-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player99.getID())==-1);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.find(player1.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player114.getID())!=-1);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player111.getID())==-1);
assert(table.find(player75.getID())!=-1);
assert(table.find(player61.getID())==-1);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player39.getID())!=-1);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.find(player106.getID())!=-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player115.getID())!=-1);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.find(player115.getID())!=-1);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.find(player17.getID())==-1);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.find(player1.getID())==-1);
assert(table.find(player115.getID())!=-1);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.find(player112.getID())==-1);
assert(table.find(player1.getID())==-1);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player7.getID())==-1);
assert(table.find(player118.getID())==-1);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.find(player8.getID())!=-1);
assert(table.find(player57.getID())!=-1);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.find(player53.getID())==-1);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player110.getID())==-1);
assert(table.find(player52.getID())==-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.find(player118.getID())==-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.find(player101.getID())==-1);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player63.getID())==-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.find(player101.getID())==-1);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.find(player8.getID())!=-1);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.find(player47.getID())==-1);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.find(player53.getID())==-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.find(player16.getID())!=-1);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.find(player119.getID())==-1);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.find(player116.getID())!=-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.find(player70.getID())==-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.find(player34.getID())!=-1);
assert(table.find(player79.getID())==-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.find(player5.getID())!=-1);
assert(table.find(player67.getID())!=-1);
assert(table.find(player43.getID())!=-1);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.find(player60.getID())==-1);
assert(table.find(player107.getID())!=-1);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.find(player45.getID())!=-1);
assert(table.find(player44.getID())==-1);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player95.getID())!=-1);
assert(table.find(player55.getID())!=-1);
assert(table.find(player101.getID())==-1);
assert(table.find(player43.getID())!=-1);
assert(table.find(player91.getID())==-1);
assert(table.remove(player114.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.find(player80.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.find(player77.getID())!=-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.find(player9.getID())==-1);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.find(player102.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player10.getID())!=-1);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.find(player64.getID())==-1);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.find(player70.getID())==-1);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.find(player102.getID())!=-1);
assert(table.find(player6.getID())==-1);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.find(player85.getID())==-1);
assert(table.find(player78.getID())==-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.find(player4.getID())!=-1);
assert(table.find(player57.getID())==-1);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.find(player100.getID())==-1);
assert(table.find(player70.getID())==-1);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player7.getID())==-1);
assert(table.find(player53.getID())!=-1);
assert(table.find(player83.getID())==-1);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.find(player23.getID())!=-1);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player115.getID())!=-1);
assert(table.find(player92.getID())==-1);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player14.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.find(player70.getID())==-1);
assert(table.find(player75.getID())==-1);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.find(player55.getID())==-1);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.find(player15.getID())!=-1);
assert(table.find(player63.getID())!=-1);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.find(player80.getID())==-1);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.find(player30.getID())==-1);
assert(table.find(player34.getID())!=-1);
assert(table.find(player24.getID())==-1);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.find(player78.getID())==-1);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.find(player76.getID())==-1);
assert(table.find(player52.getID())!=-1);
assert(table.find(player89.getID())==-1);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player44.getID())==-1);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.find(player83.getID())==-1);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.find(player102.getID())==-1);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.find(player39.getID())!=-1);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player100.getID())==-1);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.find(player33.getID())!=-1);
assert(table.find(player48.getID())!=-1);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.find(player103.getID())==-1);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.find(player89.getID())==-1);
assert(table.find(player102.getID())==-1);
assert(table.find(player103.getID())==-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.find(player92.getID())!=-1);
assert(table.find(player101.getID())==-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.find(player7.getID())!=-1);
assert(table.find(player6.getID())==-1);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.find(player82.getID())!=-1);
assert(table.find(player54.getID())!=-1);
assert(table.find(player109.getID())==-1);
assert(table.find(player79.getID())!=-1);
assert(table.find(player107.getID())!=-1);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.find(player54.getID())!=-1);
assert(table.find(player64.getID())!=-1);
assert(table.find(player22.getID())!=-1);
assert(table.find(player103.getID())==-1);
assert(table.find(player94.getID())!=-1);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.find(player45.getID())!=-1);
assert(table.find(player37.getID())!=-1);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player118.getID())==-1);
assert(table.find(player110.getID())==-1);
assert(table.find(player75.getID())==-1);
assert(table.find(player38.getID())==-1);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.find(player117.getID())==-1);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player82.getID())!=-1);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player91.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.find(player6.getID())!=-1);
assert(table.find(player60.getID())==-1);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.find(player117.getID())==-1);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.find(player99.getID())!=-1);
assert(table.find(player9.getID())!=-1);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.find(player5.getID())==-1);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.find(player47.getID())==-1);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player32.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.find(player88.getID())!=-1);
assert(table.find(player78.getID())!=-1);
assert(table.find(player53.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.find(player23.getID())!=-1);
assert(table.find(player23.getID())!=-1);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player80.getID())!=-1);
assert(table.find(player2.getID())==-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.find(player28.getID())==-1);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player113.getID())==-1);
assert(table.find(player38.getID())==-1);
assert(table.find(player5.getID())==-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.find(player20.getID())==-1);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player61.getID())!=-1);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.remove(player114.getID())==NOT_FOUND);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.find(player89.getID())==-1);
