//remove, insert, find, 150 players

Player player1(23,1006);
Player player2(132,2);
Player player3(126,1283);
Player player4(45,452);
Player player5(77,1087);
Player player6(18,68);
Player player7(36,1153);
Player player8(90,525);
Player player9(76,258);
Player player10(78,263);
Player player11(79,582);
Player player12(141,947);
Player player13(4,1128);
Player player14(35,447);
Player player15(28,275);
Player player16(130,1400);
Player player17(73,318);
Player player18(131,888);
Player player19(139,689);
Player player20(17,262);
Player player21(42,349);
Player player22(3,1047);
Player player23(85,1318);
Player player24(108,769);
Player player25(16,1177);
Player player26(148,845);
Player player27(117,1459);
Player player28(11,894);
Player player29(63,462);
Player player30(99,871);
Player player31(87,682);
Player player32(134,795);
Player player33(58,242);
Player player34(29,1127);
Player player35(19,1425);
Player player36(84,1315);
Player player37(40,1018);
Player player38(39,981);
Player player39(122,1471);
Player player40(135,946);
Player player41(53,534);
Player player42(136,306);
Player player43(12,949);
Player player44(138,1090);
Player player45(38,147);
Player player46(6,168);
Player player47(60,342);
Player player48(118,462);
Player player49(67,1007);
Player player50(91,138);
Player player51(1,1322);
Player player52(83,533);
Player player53(128,1488);
Player player54(47,1248);
Player player55(22,1203);
Player player56(26,808);
Player player57(34,1483);
Player player58(114,1400);
Player player59(92,425);
Player player60(88,1077);
Player player61(120,1330);
Player player62(8,675);
Player player63(103,187);
Player player64(51,264);
Player player65(101,1047);
Player player66(95,412);
Player player67(129,878);
Player player68(55,696);
Player player69(124,1345);
Player player70(100,1487);
Player player71(66,1152);
Player player72(27,212);
Player player73(44,6);
Player player74(97,675);
Player player75(41,977);
Player player76(144,822);
Player player77(13,772);
Player player78(69,1364);
Player player79(107,346);
Player player80(9,786);
Player player81(133,1334);
Player player82(102,420);
Player player83(20,1259);
Player player84(94,1036);
Player player85(104,522);
Player player86(72,627);
Player player87(80,1210);
Player player88(82,1046);
Player player89(74,169);
Player player90(125,1376);
Player player91(31,422);
Player player92(81,95);
Player player93(46,644);
Player player94(65,1124);
Player player95(111,1428);
Player player96(52,1298);
Player player97(121,116);
Player player98(89,137);
Player player99(71,1409);
Player player100(93,179);
Player player101(98,249);
Player player102(7,925);
Player player103(25,1442);
Player player104(149,973);
Player player105(21,1017);
Player player106(116,383);
Player player107(61,391);
Player player108(30,366);
Player player109(54,658);
Player player110(37,1375);
Player player111(2,695);
Player player112(115,1114);
Player player113(56,1322);
Player player114(48,1065);
Player player115(49,550);
Player player116(33,1293);
Player player117(10,538);
Player player118(5,378);
Player player119(112,936);
Player player120(15,899);
Player player121(109,1068);
Player player122(59,1326);
Player player123(57,1279);
Player player124(142,247);
Player player125(105,368);
Player player126(127,1332);
Player player127(32,812);
Player player128(64,806);
Player player129(96,848);
Player player130(75,764);
Player player131(62,374);
Player player132(70,1069);
Player player133(43,824);
Player player134(140,1417);
Player player135(50,887);
Player player136(24,225);
Player player137(123,282);
Player player138(68,84);
Player player139(143,1365);
Player player140(119,63);
Player player141(147,322);
Player player142(14,102);
Player player143(106,1166);
Player player144(146,688);
Player player145(145,595);
Player player146(86,807);
Player player147(110,432);
Player player148(113,197);
Player player149(137,526);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.find(player17.getID())==-1);
assert(table.find(player90.getID())==-1);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.insert(player147.getID(), &player147)==SUCCESS);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.insert(player141.getID(), &player141)==SUCCESS);
assert(table.find(player51.getID())==-1);
assert(table.find(player128.getID())==-1);
assert(table.find(player141.getID())!=-1);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player137.getID(), &player137)==SUCCESS);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player25.getID())==-1);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.remove(player133.getID())==NOT_FOUND);
assert(table.find(player52.getID())==-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.find(player29.getID())==-1);
assert(table.find(player5.getID())==-1);
assert(table.find(player23.getID())==-1);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player127.getID())==NOT_FOUND);
assert(table.find(player19.getID())==-1);
assert(table.insert(player123.getID(), &player123)==SUCCESS);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player128.getID())==NOT_FOUND);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.insert(player139.getID(), &player139)==SUCCESS);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.remove(player139.getID())==SUCCESS);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player44.getID())==-1);
assert(table.find(player147.getID())!=-1);
assert(table.insert(player120.getID(), &player120)==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.find(player14.getID())==-1);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player43.getID())==-1);
assert(table.find(player134.getID())==-1);
assert(table.find(player106.getID())!=-1);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player27.getID())==-1);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player38.getID())==-1);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.find(player19.getID())==-1);
assert(table.find(player58.getID())!=-1);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.find(player73.getID())==-1);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.find(player148.getID())==-1);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.find(player19.getID())==-1);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.find(player141.getID())!=-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.insert(player120.getID(), &player120)==ALREADY_EXIST);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.remove(player147.getID())==SUCCESS);
assert(table.insert(player144.getID(), &player144)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.find(player64.getID())==-1);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.find(player80.getID())==-1);
assert(table.find(player36.getID())==-1);
assert(table.remove(player125.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.find(player134.getID())==-1);
assert(table.find(player43.getID())==-1);
assert(table.insert(player137.getID(), &player137)==ALREADY_EXIST);
assert(table.find(player83.getID())==-1);
assert(table.find(player97.getID())==-1);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.find(player14.getID())==-1);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.find(player17.getID())==-1);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.find(player69.getID())==-1);
assert(table.insert(player134.getID(), &player134)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.find(player69.getID())==-1);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.insert(player132.getID(), &player132)==SUCCESS);
assert(table.insert(player138.getID(), &player138)==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.find(player148.getID())==-1);
assert(table.find(player19.getID())==-1);
assert(table.find(player94.getID())==-1);
assert(table.find(player55.getID())!=-1);
assert(table.find(player47.getID())!=-1);
assert(table.find(player143.getID())==-1);
assert(table.find(player96.getID())==-1);
assert(table.find(player20.getID())==-1);
assert(table.find(player81.getID())==-1);
assert(table.insert(player149.getID(), &player149)==SUCCESS);
assert(table.remove(player113.getID())==NOT_FOUND);
assert(table.find(player133.getID())==-1);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.find(player39.getID())==-1);
assert(table.find(player64.getID())==-1);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.find(player146.getID())==-1);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.find(player139.getID())==-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player103.getID())!=-1);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player111.getID())==-1);
assert(table.find(player128.getID())==-1);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.find(player110.getID())==-1);
assert(table.find(player77.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player125.getID())==NOT_FOUND);
assert(table.find(player109.getID())==-1);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.find(player111.getID())==-1);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.insert(player127.getID(), &player127)==SUCCESS);
assert(table.find(player100.getID())==-1);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.find(player93.getID())!=-1);
assert(table.find(player46.getID())==-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.find(player31.getID())==-1);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.insert(player128.getID(), &player128)==SUCCESS);
assert(table.find(player99.getID())==-1);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.find(player125.getID())==-1);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.remove(player120.getID())==SUCCESS);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.find(player119.getID())==-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player17.getID())==-1);
assert(table.insert(player148.getID(), &player148)==SUCCESS);
assert(table.find(player25.getID())==-1);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.find(player95.getID())==-1);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player53.getID())==-1);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.find(player122.getID())==-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.find(player45.getID())==-1);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player69.getID())==-1);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.remove(player131.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player107.getID())==-1);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.insert(player131.getID(), &player131)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.find(player129.getID())==-1);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.find(player75.getID())!=-1);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player9.getID())==-1);
assert(table.find(player96.getID())==-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player121.getID())==-1);
assert(table.insert(player126.getID(), &player126)==SUCCESS);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.insert(player124.getID(), &player124)==ALREADY_EXIST);
assert(table.find(player33.getID())==-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.insert(player148.getID(), &player148)==ALREADY_EXIST);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player141.getID())==SUCCESS);
assert(table.find(player135.getID())==-1);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.find(player106.getID())!=-1);
assert(table.insert(player135.getID(), &player135)==SUCCESS);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.find(player18.getID())==-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player23.getID())==-1);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player118.getID())==-1);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.insert(player127.getID(), &player127)==ALREADY_EXIST);
assert(table.find(player138.getID())!=-1);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.find(player84.getID())==-1);
assert(table.find(player105.getID())!=-1);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.find(player78.getID())==-1);
assert(table.find(player85.getID())==-1);
assert(table.find(player108.getID())==-1);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.find(player54.getID())==-1);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.find(player37.getID())!=-1);
assert(table.find(player109.getID())!=-1);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.find(player27.getID())==-1);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.insert(player140.getID(), &player140)==SUCCESS);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.find(player121.getID())==-1);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.remove(player144.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.insert(player125.getID(), &player125)==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player135.getID(), &player135)==ALREADY_EXIST);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player130.getID())==-1);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.remove(player149.getID())==SUCCESS);
assert(table.find(player139.getID())==-1);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.insert(player130.getID(), &player130)==SUCCESS);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.remove(player138.getID())==SUCCESS);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.find(player88.getID())==-1);
assert(table.find(player14.getID())==-1);
assert(table.insert(player121.getID(), &player121)==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.find(player3.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player108.getID())==-1);
assert(table.insert(player141.getID(), &player141)==SUCCESS);
assert(table.find(player44.getID())!=-1);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.find(player11.getID())==-1);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player130.getID())!=-1);
assert(table.find(player109.getID())!=-1);
assert(table.find(player23.getID())==-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.find(player83.getID())==-1);
assert(table.find(player33.getID())==-1);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.find(player96.getID())==-1);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.find(player80.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.remove(player121.getID())==SUCCESS);
assert(table.remove(player147.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player127.getID())!=-1);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.find(player61.getID())==-1);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.find(player130.getID())!=-1);
assert(table.find(player84.getID())==-1);
assert(table.find(player137.getID())!=-1);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.find(player50.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.find(player61.getID())==-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.insert(player138.getID(), &player138)==SUCCESS);
assert(table.insert(player140.getID(), &player140)==ALREADY_EXIST);
assert(table.find(player68.getID())==-1);
assert(table.find(player125.getID())!=-1);
assert(table.find(player51.getID())!=-1);
assert(table.find(player112.getID())==-1);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.find(player10.getID())==-1);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.find(player144.getID())==-1);
assert(table.find(player49.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player40.getID())!=-1);
assert(table.find(player38.getID())==-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.remove(player143.getID())==NOT_FOUND);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player123.getID())!=-1);
assert(table.find(player30.getID())==-1);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.find(player132.getID())!=-1);
assert(table.find(player111.getID())==-1);
assert(table.remove(player117.getID())==NOT_FOUND);
assert(table.find(player36.getID())==-1);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.find(player138.getID())!=-1);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player130.getID(), &player130)==ALREADY_EXIST);
assert(table.find(player36.getID())==-1);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player18.getID())!=-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.find(player42.getID())==-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.insert(player145.getID(), &player145)==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.find(player50.getID())!=-1);
assert(table.find(player73.getID())!=-1);
assert(table.find(player101.getID())==-1);
assert(table.find(player14.getID())!=-1);
assert(table.insert(player129.getID(), &player129)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.remove(player142.getID())==NOT_FOUND);
assert(table.remove(player117.getID())==NOT_FOUND);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player87.getID())!=-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player28.getID())==-1);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.find(player127.getID())!=-1);
assert(table.find(player41.getID())==-1);
assert(table.find(player126.getID())!=-1);
assert(table.find(player108.getID())!=-1);
assert(table.remove(player113.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player77.getID())==-1);
assert(table.find(player122.getID())==-1);
assert(table.find(player68.getID())==-1);
assert(table.find(player37.getID())!=-1);
assert(table.find(player21.getID())!=-1);
assert(table.find(player27.getID())==-1);
assert(table.remove(player145.getID())==SUCCESS);
assert(table.find(player136.getID())!=-1);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.find(player77.getID())==-1);
assert(table.find(player117.getID())==-1);
assert(table.find(player112.getID())==-1);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player97.getID())==-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player125.getID())==SUCCESS);
assert(table.find(player118.getID())==-1);
assert(table.insert(player135.getID(), &player135)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.find(player114.getID())==-1);
assert(table.find(player72.getID())==-1);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.remove(player132.getID())==SUCCESS);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.find(player61.getID())==-1);
assert(table.find(player49.getID())!=-1);
assert(table.find(player129.getID())!=-1);
assert(table.find(player39.getID())==-1);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.find(player28.getID())==-1);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.find(player95.getID())==-1);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player135.getID())==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.find(player121.getID())==-1);
assert(table.find(player86.getID())==-1);
assert(table.find(player82.getID())!=-1);
assert(table.find(player85.getID())==-1);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player7.getID())==-1);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.find(player113.getID())!=-1);
assert(table.find(player48.getID())!=-1);
assert(table.find(player104.getID())!=-1);
assert(table.find(player17.getID())==-1);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.find(player126.getID())!=-1);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.find(player110.getID())==-1);
assert(table.find(player88.getID())!=-1);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player135.getID())==-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player130.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.find(player42.getID())==-1);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.find(player72.getID())==-1);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player126.getID())==SUCCESS);
assert(table.find(player26.getID())!=-1);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.find(player100.getID())!=-1);
assert(table.remove(player134.getID())==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.find(player18.getID())!=-1);
assert(table.find(player104.getID())!=-1);
assert(table.find(player65.getID())!=-1);
assert(table.find(player30.getID())==-1);
assert(table.find(player114.getID())==-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.find(player3.getID())!=-1);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.find(player44.getID())!=-1);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.remove(player148.getID())==SUCCESS);
assert(table.insert(player126.getID(), &player126)==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player17.getID())==-1);
assert(table.find(player137.getID())!=-1);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.find(player102.getID())==-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player147.getID())==-1);
assert(table.find(player145.getID())==-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player144.getID(), &player144)==SUCCESS);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.find(player97.getID())==-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.remove(player135.getID())==NOT_FOUND);
assert(table.find(player32.getID())==-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player88.getID())!=-1);
assert(table.find(player101.getID())==-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.insert(player138.getID(), &player138)==ALREADY_EXIST);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.find(player51.getID())!=-1);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.find(player8.getID())==-1);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player5.getID())!=-1);
assert(table.find(player7.getID())==-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.remove(player129.getID())==SUCCESS);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player148.getID(), &player148)==SUCCESS);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.find(player130.getID())!=-1);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.find(player135.getID())==-1);
assert(table.find(player95.getID())==-1);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.find(player18.getID())!=-1);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player138.getID(), &player138)==ALREADY_EXIST);
assert(table.find(player108.getID())!=-1);
assert(table.find(player46.getID())==-1);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.find(player61.getID())!=-1);
assert(table.find(player63.getID())!=-1);
assert(table.insert(player135.getID(), &player135)==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.find(player137.getID())!=-1);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.find(player93.getID())!=-1);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player57.getID())!=-1);
assert(table.find(player80.getID())!=-1);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.find(player133.getID())==-1);
assert(table.find(player147.getID())==-1);
assert(table.remove(player124.getID())==NOT_FOUND);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player132.getID(), &player132)==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.find(player31.getID())!=-1);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player111.getID())==-1);
assert(table.find(player63.getID())!=-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player141.getID())!=-1);
assert(table.find(player49.getID())==-1);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.remove(player137.getID())==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.find(player92.getID())!=-1);
assert(table.find(player1.getID())==-1);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.find(player34.getID())!=-1);
assert(table.find(player108.getID())!=-1);
assert(table.remove(player146.getID())==NOT_FOUND);
assert(table.find(player29.getID())==-1);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player147.getID())==-1);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.remove(player131.getID())==SUCCESS);
assert(table.find(player28.getID())==-1);
assert(table.find(player130.getID())!=-1);
assert(table.find(player145.getID())==-1);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.find(player105.getID())==-1);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.find(player33.getID())==-1);
assert(table.find(player42.getID())==-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player115.getID())!=-1);
assert(table.find(player126.getID())!=-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.find(player23.getID())==-1);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.find(player102.getID())==-1);
assert(table.remove(player138.getID())==SUCCESS);
assert(table.find(player107.getID())!=-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.find(player102.getID())==-1);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.find(player16.getID())==-1);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.find(player138.getID())==-1);
assert(table.find(player60.getID())==-1);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player47.getID())==-1);
assert(table.remove(player140.getID())==SUCCESS);
assert(table.find(player73.getID())!=-1);
assert(table.find(player36.getID())!=-1);
assert(table.find(player13.getID())!=-1);
assert(table.find(player89.getID())==-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.find(player46.getID())==-1);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player130.getID())!=-1);
assert(table.remove(player131.getID())==NOT_FOUND);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player135.getID())==SUCCESS);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.insert(player139.getID(), &player139)==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.find(player37.getID())==-1);
assert(table.remove(player144.getID())==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player132.getID())==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.find(player139.getID())!=-1);
assert(table.find(player131.getID())==-1);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.find(player127.getID())!=-1);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.insert(player146.getID(), &player146)==SUCCESS);
assert(table.insert(player121.getID(), &player121)==SUCCESS);
assert(table.find(player68.getID())==-1);
assert(table.insert(player149.getID(), &player149)==SUCCESS);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.find(player69.getID())==-1);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.find(player54.getID())!=-1);
assert(table.find(player113.getID())==-1);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.find(player24.getID())!=-1);
assert(table.find(player39.getID())!=-1);
assert(table.find(player46.getID())==-1);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.find(player83.getID())!=-1);
assert(table.find(player106.getID())!=-1);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.find(player99.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player113.getID())==NOT_FOUND);
assert(table.find(player129.getID())==-1);
assert(table.find(player146.getID())!=-1);
assert(table.find(player38.getID())!=-1);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.find(player98.getID())==-1);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.find(player5.getID())!=-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.find(player82.getID())==-1);
assert(table.find(player14.getID())!=-1);
assert(table.find(player127.getID())!=-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.find(player13.getID())!=-1);
assert(table.find(player128.getID())!=-1);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.find(player118.getID())!=-1);
assert(table.find(player62.getID())!=-1);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.find(player15.getID())!=-1);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.find(player81.getID())==-1);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.insert(player147.getID(), &player147)==SUCCESS);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.insert(player144.getID(), &player144)==SUCCESS);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player98.getID())==-1);
assert(table.remove(player130.getID())==SUCCESS);
assert(table.find(player84.getID())!=-1);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player23.getID())==-1);
assert(table.find(player135.getID())==-1);
assert(table.find(player123.getID())!=-1);
assert(table.insert(player138.getID(), &player138)==SUCCESS);
assert(table.find(player21.getID())!=-1);
assert(table.find(player73.getID())!=-1);
assert(table.find(player47.getID())==-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player139.getID())!=-1);
assert(table.find(player110.getID())==-1);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.find(player54.getID())!=-1);
assert(table.find(player127.getID())!=-1);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player91.getID())!=-1);
assert(table.find(player84.getID())!=-1);
assert(table.remove(player146.getID())==SUCCESS);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.remove(player135.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.find(player55.getID())!=-1);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.remove(player137.getID())==NOT_FOUND);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.remove(player138.getID())==SUCCESS);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player132.getID(), &player132)==SUCCESS);
assert(table.find(player139.getID())!=-1);
assert(table.find(player5.getID())!=-1);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player2.getID())==-1);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.find(player74.getID())!=-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.find(player15.getID())==-1);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.find(player54.getID())!=-1);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.find(player117.getID())!=-1);
assert(table.find(player98.getID())==-1);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.insert(player125.getID(), &player125)==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.find(player106.getID())==-1);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.find(player143.getID())==-1);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.remove(player135.getID())==NOT_FOUND);
assert(table.remove(player132.getID())==SUCCESS);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.find(player103.getID())==-1);
assert(table.find(player105.getID())!=-1);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player36.getID())!=-1);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player92.getID())!=-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player36.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.find(player123.getID())!=-1);
assert(table.remove(player127.getID())==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player128.getID())==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.find(player32.getID())==-1);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.find(player128.getID())==-1);
assert(table.remove(player132.getID())==NOT_FOUND);
assert(table.find(player96.getID())==-1);
assert(table.find(player6.getID())==-1);
assert(table.find(player80.getID())!=-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.find(player138.getID())==-1);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.find(player105.getID())!=-1);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player138.getID(), &player138)==SUCCESS);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player121.getID())!=-1);
assert(table.find(player139.getID())!=-1);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player73.getID())!=-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.find(player147.getID())!=-1);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player108.getID())==-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player144.getID())==SUCCESS);
assert(table.insert(player135.getID(), &player135)==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.find(player109.getID())!=-1);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player134.getID(), &player134)==SUCCESS);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.remove(player132.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.find(player50.getID())==-1);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player113.getID())==-1);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.find(player117.getID())!=-1);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.remove(player138.getID())==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.find(player33.getID())==-1);
assert(table.find(player17.getID())!=-1);
assert(table.insert(player145.getID(), &player145)==SUCCESS);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player100.getID())!=-1);
assert(table.find(player118.getID())!=-1);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.find(player105.getID())!=-1);
assert(table.find(player14.getID())!=-1);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.find(player49.getID())==-1);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.find(player46.getID())==-1);
assert(table.find(player106.getID())==-1);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player145.getID())==SUCCESS);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player109.getID(), &player109)==ALREADY_EXIST);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.find(player13.getID())!=-1);
assert(table.find(player127.getID())==-1);
assert(table.find(player132.getID())==-1);
assert(table.find(player72.getID())==-1);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.insert(player135.getID(), &player135)==ALREADY_EXIST);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.find(player147.getID())!=-1);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.find(player148.getID())!=-1);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.insert(player132.getID(), &player132)==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.find(player120.getID())==-1);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.find(player98.getID())==-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player134.getID())!=-1);
assert(table.remove(player133.getID())==NOT_FOUND);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.find(player9.getID())!=-1);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.remove(player139.getID())==SUCCESS);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.insert(player144.getID(), &player144)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.find(player131.getID())==-1);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.remove(player142.getID())==NOT_FOUND);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.find(player132.getID())!=-1);
assert(table.find(player20.getID())==-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.find(player2.getID())==-1);
assert(table.find(player2.getID())==-1);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player5.getID())==-1);
assert(table.remove(player146.getID())==NOT_FOUND);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.find(player23.getID())==-1);
assert(table.remove(player144.getID())==SUCCESS);
assert(table.find(player58.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.find(player142.getID())==-1);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.find(player147.getID())!=-1);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.remove(player134.getID())==SUCCESS);
assert(table.remove(player132.getID())==SUCCESS);
assert(table.find(player147.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player109.getID())!=-1);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.remove(player138.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player7.getID())!=-1);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.find(player100.getID())!=-1);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.find(player36.getID())!=-1);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.find(player100.getID())!=-1);
assert(table.insert(player133.getID(), &player133)==SUCCESS);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player10.getID())==-1);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.find(player111.getID())!=-1);
assert(table.find(player48.getID())!=-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.find(player85.getID())!=-1);
assert(table.find(player131.getID())==-1);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.find(player135.getID())!=-1);
assert(table.find(player1.getID())!=-1);
assert(table.remove(player121.getID())==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player125.getID())!=-1);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.find(player76.getID())==-1);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player106.getID())==-1);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.find(player121.getID())==-1);
assert(table.remove(player131.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player21.getID())!=-1);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.find(player70.getID())==-1);
assert(table.find(player69.getID())!=-1);
assert(table.find(player6.getID())==-1);
assert(table.find(player94.getID())==-1);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player37.getID())!=-1);
assert(table.find(player72.getID())==-1);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player6.getID())==-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player73.getID())!=-1);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.insert(player130.getID(), &player130)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.find(player86.getID())==-1);
assert(table.find(player65.getID())==-1);
assert(table.find(player22.getID())==-1);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.find(player1.getID())!=-1);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.find(player134.getID())==-1);
assert(table.find(player91.getID())!=-1);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player82.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
assert(table.remove(player149.getID())==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.insert(player121.getID(), &player121)==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.find(player57.getID())!=-1);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player63.getID())!=-1);
assert(table.find(player147.getID())!=-1);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.find(player88.getID())==-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.find(player12.getID())==-1);
assert(table.remove(player126.getID())==SUCCESS);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player51.getID())==-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.remove(player148.getID())==SUCCESS);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.find(player56.getID())==-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player69.getID())!=-1);
assert(table.find(player67.getID())!=-1);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.find(player58.getID())==-1);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.find(player41.getID())==-1);
assert(table.find(player124.getID())==-1);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player100.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.find(player64.getID())!=-1);
assert(table.find(player88.getID())==-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player131.getID())==-1);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.find(player14.getID())!=-1);
assert(table.find(player143.getID())==-1);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.insert(player140.getID(), &player140)==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player107.getID())==-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.find(player37.getID())!=-1);
assert(table.insert(player130.getID(), &player130)==ALREADY_EXIST);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player91.getID())!=-1);
assert(table.find(player84.getID())==-1);
assert(table.find(player105.getID())!=-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player112.getID())==-1);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.find(player37.getID())!=-1);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.insert(player149.getID(), &player149)==SUCCESS);
assert(table.find(player66.getID())!=-1);
assert(table.insert(player131.getID(), &player131)==SUCCESS);
assert(table.find(player146.getID())==-1);
assert(table.insert(player137.getID(), &player137)==SUCCESS);
assert(table.find(player90.getID())!=-1);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.remove(player149.getID())==SUCCESS);
assert(table.find(player127.getID())==-1);
assert(table.find(player104.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.insert(player111.getID(), &player111)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.find(player69.getID())!=-1);
assert(table.find(player74.getID())!=-1);
assert(table.find(player74.getID())!=-1);
assert(table.find(player58.getID())==-1);
assert(table.insert(player120.getID(), &player120)==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.find(player77.getID())==-1);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.find(player97.getID())==-1);
assert(table.find(player117.getID())!=-1);
assert(table.find(player4.getID())!=-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.find(player117.getID())!=-1);
assert(table.find(player62.getID())==-1);
assert(table.find(player43.getID())!=-1);
assert(table.find(player122.getID())==-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.find(player15.getID())==-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player46.getID())==-1);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.remove(player143.getID())==NOT_FOUND);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.find(player51.getID())==-1);
assert(table.insert(player140.getID(), &player140)==ALREADY_EXIST);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.insert(player128.getID(), &player128)==SUCCESS);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.remove(player143.getID())==NOT_FOUND);
assert(table.remove(player125.getID())==SUCCESS);
assert(table.find(player126.getID())==-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player88.getID())==-1);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.find(player118.getID())!=-1);
assert(table.find(player146.getID())==-1);
assert(table.remove(player122.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.find(player83.getID())==-1);
assert(table.find(player110.getID())!=-1);
assert(table.find(player97.getID())==-1);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.remove(player147.getID())==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player148.getID())==-1);
assert(table.find(player33.getID())!=-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.insert(player145.getID(), &player145)==SUCCESS);
assert(table.insert(player121.getID(), &player121)==ALREADY_EXIST);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player141.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.remove(player148.getID())==NOT_FOUND);
assert(table.find(player129.getID())==-1);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.insert(player142.getID(), &player142)==ALREADY_EXIST);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.find(player45.getID())==-1);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.find(player137.getID())!=-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player110.getID())!=-1);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.remove(player135.getID())==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.find(player139.getID())==-1);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player84.getID())==-1);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.find(player92.getID())==-1);
assert(table.find(player35.getID())==-1);
assert(table.find(player31.getID())!=-1);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.remove(player137.getID())==SUCCESS);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.find(player78.getID())!=-1);
assert(table.find(player38.getID())!=-1);
assert(table.insert(player130.getID(), &player130)==ALREADY_EXIST);
assert(table.find(player117.getID())!=-1);
assert(table.find(player21.getID())==-1);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.find(player113.getID())!=-1);
assert(table.find(player143.getID())==-1);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.find(player103.getID())==-1);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player81.getID())!=-1);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.find(player46.getID())==-1);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.find(player42.getID())==-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.insert(player126.getID(), &player126)==SUCCESS);
assert(table.find(player22.getID())==-1);
assert(table.remove(player133.getID())==SUCCESS);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.find(player143.getID())==-1);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.find(player65.getID())!=-1);
assert(table.find(player10.getID())==-1);
assert(table.find(player5.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player29.getID())!=-1);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.find(player3.getID())==-1);
assert(table.find(player138.getID())==-1);
assert(table.find(player93.getID())==-1);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.find(player97.getID())!=-1);
assert(table.find(player2.getID())==-1);
assert(table.find(player96.getID())!=-1);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.find(player116.getID())==-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player149.getID())==-1);
assert(table.insert(player129.getID(), &player129)==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.insert(player137.getID(), &player137)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.find(player98.getID())!=-1);
assert(table.find(player135.getID())==-1);
assert(table.find(player59.getID())!=-1);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.find(player25.getID())!=-1);
assert(table.insert(player134.getID(), &player134)==SUCCESS);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.find(player13.getID())!=-1);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.find(player133.getID())==-1);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.insert(player135.getID(), &player135)==SUCCESS);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player134.getID())==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.find(player66.getID())!=-1);
assert(table.find(player22.getID())==-1);
assert(table.find(player122.getID())==-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.find(player137.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.insert(player109.getID(), &player109)==ALREADY_EXIST);
assert(table.remove(player129.getID())==SUCCESS);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.find(player88.getID())==-1);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.find(player45.getID())==-1);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.find(player123.getID())!=-1);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player137.getID())!=-1);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.remove(player138.getID())==NOT_FOUND);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.remove(player122.getID())==NOT_FOUND);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.find(player87.getID())!=-1);
assert(table.find(player129.getID())==-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player10.getID())==-1);
assert(table.find(player112.getID())==-1);
assert(table.find(player141.getID())!=-1);
assert(table.find(player121.getID())!=-1);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.insert(player134.getID(), &player134)==SUCCESS);
assert(table.remove(player127.getID())==NOT_FOUND);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.remove(player137.getID())==SUCCESS);
assert(table.remove(player137.getID())==NOT_FOUND);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.find(player48.getID())==-1);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.find(player32.getID())!=-1);
assert(table.find(player124.getID())!=-1);
assert(table.insert(player135.getID(), &player135)==ALREADY_EXIST);
assert(table.find(player15.getID())!=-1);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.find(player147.getID())==-1);
assert(table.find(player145.getID())!=-1);
assert(table.find(player60.getID())==-1);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player149.getID(), &player149)==SUCCESS);
assert(table.find(player130.getID())!=-1);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.insert(player127.getID(), &player127)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.find(player72.getID())!=-1);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.find(player105.getID())!=-1);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.find(player78.getID())!=-1);
assert(table.find(player40.getID())==-1);
assert(table.find(player88.getID())==-1);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.find(player146.getID())==-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.find(player148.getID())==-1);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.find(player30.getID())!=-1);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player141.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player96.getID())==-1);
assert(table.find(player148.getID())==-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.find(player140.getID())!=-1);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player147.getID())==NOT_FOUND);
assert(table.remove(player122.getID())==NOT_FOUND);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.find(player124.getID())!=-1);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.find(player28.getID())!=-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.find(player16.getID())==-1);
assert(table.find(player67.getID())!=-1);
assert(table.find(player7.getID())!=-1);
assert(table.find(player85.getID())==-1);
assert(table.find(player4.getID())!=-1);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.find(player119.getID())!=-1);
assert(table.remove(player142.getID())==NOT_FOUND);
assert(table.find(player147.getID())==-1);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.find(player9.getID())==-1);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.insert(player133.getID(), &player133)==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.find(player119.getID())!=-1);
assert(table.find(player29.getID())!=-1);
assert(table.find(player62.getID())==-1);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.find(player15.getID())!=-1);
assert(table.find(player38.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.find(player91.getID())==-1);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.find(player101.getID())!=-1);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player136.getID())!=-1);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.find(player99.getID())==-1);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.find(player38.getID())!=-1);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.find(player46.getID())==-1);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.find(player35.getID())==-1);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.find(player42.getID())!=-1);
assert(table.remove(player140.getID())==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player104.getID())!=-1);
assert(table.find(player112.getID())==-1);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.remove(player121.getID())==SUCCESS);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.find(player82.getID())!=-1);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.find(player127.getID())!=-1);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.remove(player127.getID())==SUCCESS);
assert(table.find(player112.getID())==-1);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.find(player23.getID())==-1);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.find(player5.getID())==-1);
assert(table.find(player29.getID())!=-1);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.find(player51.getID())==-1);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.find(player29.getID())!=-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.insert(player132.getID(), &player132)==SUCCESS);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.find(player74.getID())==-1);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player145.getID())==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.find(player1.getID())!=-1);
assert(table.find(player127.getID())==-1);
assert(table.find(player92.getID())!=-1);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.find(player149.getID())!=-1);
assert(table.find(player81.getID())==-1);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.find(player108.getID())==-1);
assert(table.find(player111.getID())==-1);
assert(table.remove(player135.getID())==SUCCESS);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player142.getID())==NOT_FOUND);
assert(table.find(player53.getID())==-1);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.find(player111.getID())==-1);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.insert(player143.getID(), &player143)==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.insert(player146.getID(), &player146)==SUCCESS);
assert(table.remove(player137.getID())==NOT_FOUND);
assert(table.find(player103.getID())!=-1);
assert(table.find(player108.getID())==-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.find(player38.getID())!=-1);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.remove(player136.getID())==SUCCESS);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.remove(player136.getID())==NOT_FOUND);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.find(player51.getID())!=-1);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player106.getID())!=-1);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.find(player21.getID())==-1);
assert(table.find(player6.getID())!=-1);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player35.getID())==-1);
assert(table.find(player126.getID())!=-1);
assert(table.find(player27.getID())==-1);
assert(table.find(player67.getID())!=-1);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.find(player116.getID())==-1);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.remove(player146.getID())==SUCCESS);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player128.getID())==SUCCESS);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player55.getID())==-1);
assert(table.remove(player149.getID())==SUCCESS);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player123.getID())!=-1);
assert(table.find(player6.getID())!=-1);
assert(table.find(player148.getID())==-1);
assert(table.find(player12.getID())==-1);
assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.find(player117.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.insert(player138.getID(), &player138)==SUCCESS);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.find(player134.getID())!=-1);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.find(player117.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.find(player146.getID())==-1);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.find(player131.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.find(player63.getID())==-1);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.remove(player132.getID())==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.find(player117.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player60.getID())==NOT_FOUND);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player137.getID())==-1);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.find(player130.getID())!=-1);
assert(table.insert(player146.getID(), &player146)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player130.getID())==SUCCESS);
assert(table.remove(player140.getID())==NOT_FOUND);
assert(table.find(player108.getID())!=-1);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.find(player80.getID())==-1);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.find(player117.getID())!=-1);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.find(player23.getID())==-1);
assert(table.find(player81.getID())==-1);
assert(table.find(player120.getID())!=-1);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player133.getID())==SUCCESS);
assert(table.find(player82.getID())==-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.insert(player128.getID(), &player128)==SUCCESS);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.find(player66.getID())!=-1);
assert(table.find(player12.getID())==-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.remove(player137.getID())==NOT_FOUND);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.find(player27.getID())==-1);
assert(table.find(player50.getID())==-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.find(player88.getID())!=-1);
assert(table.find(player52.getID())==-1);
assert(table.remove(player132.getID())==NOT_FOUND);
assert(table.insert(player135.getID(), &player135)==SUCCESS);
assert(table.find(player93.getID())!=-1);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.find(player55.getID())!=-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.find(player137.getID())==-1);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.find(player66.getID())!=-1);
assert(table.insert(player139.getID(), &player139)==SUCCESS);
assert(table.find(player97.getID())!=-1);
assert(table.find(player49.getID())==-1);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.insert(player120.getID(), &player120)==ALREADY_EXIST);
assert(table.find(player76.getID())==-1);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.find(player18.getID())==-1);
assert(table.find(player77.getID())!=-1);
assert(table.find(player10.getID())!=-1);
assert(table.find(player109.getID())!=-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.find(player45.getID())!=-1);
assert(table.find(player120.getID())!=-1);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.find(player29.getID())!=-1);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.find(player145.getID())==-1);
assert(table.find(player68.getID())!=-1);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.find(player139.getID())!=-1);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.find(player53.getID())!=-1);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.find(player135.getID())!=-1);
assert(table.insert(player149.getID(), &player149)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.remove(player140.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.find(player20.getID())==-1);
assert(table.find(player76.getID())==-1);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.find(player2.getID())!=-1);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player100.getID())!=-1);
assert(table.find(player74.getID())!=-1);
assert(table.find(player70.getID())==-1);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player139.getID())!=-1);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player147.getID(), &player147)==SUCCESS);
assert(table.insert(player144.getID(), &player144)==SUCCESS);
assert(table.find(player123.getID())!=-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.find(player73.getID())!=-1);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player142.getID(), &player142)==ALREADY_EXIST);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player81.getID())==-1);
assert(table.find(player146.getID())!=-1);
assert(table.find(player101.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.find(player59.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.find(player115.getID())==-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.find(player63.getID())!=-1);
assert(table.find(player83.getID())==-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.remove(player149.getID())==SUCCESS);
assert(table.find(player95.getID())==-1);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.find(player22.getID())==-1);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.find(player65.getID())!=-1);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player127.getID())==NOT_FOUND);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player138.getID(), &player138)==ALREADY_EXIST);
assert(table.find(player76.getID())==-1);
assert(table.find(player79.getID())==-1);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.find(player24.getID())==-1);
assert(table.find(player122.getID())==-1);
assert(table.find(player116.getID())==-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player113.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.remove(player140.getID())==NOT_FOUND);
assert(table.find(player98.getID())==-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.find(player94.getID())==-1);
assert(table.find(player23.getID())==-1);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player59.getID())!=-1);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player123.getID())!=-1);
assert(table.find(player93.getID())!=-1);
assert(table.insert(player148.getID(), &player148)==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player149.getID(), &player149)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.insert(player141.getID(), &player141)==SUCCESS);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.find(player147.getID())!=-1);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player68.getID())==-1);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.find(player37.getID())!=-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.find(player58.getID())==-1);
assert(table.remove(player149.getID())==SUCCESS);
assert(table.find(player129.getID())==-1);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.insert(player135.getID(), &player135)==ALREADY_EXIST);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.find(player119.getID())!=-1);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.find(player100.getID())!=-1);
assert(table.find(player78.getID())==-1);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.find(player39.getID())==-1);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.remove(player139.getID())==SUCCESS);
assert(table.remove(player143.getID())==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player127.getID(), &player127)==SUCCESS);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.remove(player120.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.find(player127.getID())!=-1);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.find(player52.getID())!=-1);
assert(table.find(player90.getID())==-1);
assert(table.find(player108.getID())!=-1);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.find(player75.getID())!=-1);
assert(table.find(player3.getID())==-1);
assert(table.remove(player128.getID())==SUCCESS);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.find(player42.getID())!=-1);
assert(table.find(player7.getID())==-1);
assert(table.find(player122.getID())==-1);
assert(table.find(player112.getID())!=-1);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player137.getID(), &player137)==SUCCESS);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.find(player105.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player81.getID())!=-1);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.remove(player125.getID())==NOT_FOUND);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.find(player130.getID())==-1);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.remove(player124.getID())==NOT_FOUND);
assert(table.find(player119.getID())!=-1);
assert(table.remove(player138.getID())==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.remove(player147.getID())==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.find(player72.getID())!=-1);
assert(table.find(player68.getID())==-1);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.find(player31.getID())==-1);
assert(table.find(player142.getID())!=-1);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.remove(player128.getID())==NOT_FOUND);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.find(player25.getID())==-1);
assert(table.find(player136.getID())!=-1);
assert(table.find(player52.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.find(player69.getID())==-1);
assert(table.find(player13.getID())==-1);
assert(table.insert(player140.getID(), &player140)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.find(player88.getID())==-1);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player81.getID())!=-1);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.find(player120.getID())==-1);
assert(table.find(player31.getID())==-1);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.find(player142.getID())!=-1);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player126.getID())==SUCCESS);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.find(player87.getID())==-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.remove(player131.getID())==SUCCESS);
assert(table.remove(player113.getID())==NOT_FOUND);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.insert(player144.getID(), &player144)==ALREADY_EXIST);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.find(player65.getID())==-1);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.find(player92.getID())!=-1);
assert(table.find(player13.getID())==-1);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.find(player27.getID())==-1);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.find(player110.getID())==-1);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.find(player59.getID())!=-1);
assert(table.find(player20.getID())!=-1);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.find(player121.getID())==-1);
assert(table.find(player111.getID())!=-1);
assert(table.remove(player144.getID())==SUCCESS);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.find(player64.getID())!=-1);
assert(table.find(player121.getID())==-1);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.find(player62.getID())!=-1);
assert(table.find(player115.getID())==-1);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.find(player130.getID())==-1);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.find(player144.getID())==-1);
assert(table.find(player141.getID())!=-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.remove(player92.getID())==SUCCESS);
assert(table.find(player92.getID())==-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.insert(player129.getID(), &player129)==SUCCESS);
assert(table.find(player114.getID())==-1);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.find(player16.getID())!=-1);
assert(table.find(player107.getID())==-1);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.find(player80.getID())!=-1);
assert(table.remove(player137.getID())==SUCCESS);
assert(table.find(player43.getID())==-1);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.find(player137.getID())==-1);
assert(table.find(player86.getID())==-1);
assert(table.find(player122.getID())==-1);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.find(player1.getID())!=-1);
assert(table.remove(player23.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.find(player71.getID())!=-1);
assert(table.find(player93.getID())!=-1);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player89.getID())!=-1);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player57.getID())!=-1);
assert(table.find(player72.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.find(player79.getID())!=-1);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player64.getID())==-1);
assert(table.find(player50.getID())==-1);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.insert(player139.getID(), &player139)==SUCCESS);
assert(table.find(player102.getID())==-1);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.find(player67.getID())==-1);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.find(player125.getID())==-1);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player114.getID())==NOT_FOUND);
assert(table.find(player49.getID())==-1);
assert(table.find(player51.getID())==-1);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.find(player145.getID())==-1);
assert(table.find(player99.getID())!=-1);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.find(player107.getID())!=-1);
assert(table.insert(player148.getID(), &player148)==ALREADY_EXIST);
assert(table.find(player39.getID())==-1);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.find(player125.getID())==-1);
assert(table.find(player24.getID())!=-1);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player93.getID())!=-1);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player53.getID())==-1);
assert(table.find(player90.getID())!=-1);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.find(player96.getID())!=-1);
assert(table.find(player40.getID())==-1);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player102.getID())==-1);
assert(table.find(player104.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.insert(player137.getID(), &player137)==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.find(player34.getID())==-1);
assert(table.find(player52.getID())!=-1);
assert(table.find(player133.getID())==-1);
assert(table.find(player45.getID())==-1);
assert(table.find(player18.getID())==-1);
assert(table.find(player11.getID())!=-1);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player113.getID())==-1);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.find(player99.getID())!=-1);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.find(player20.getID())!=-1);
assert(table.insert(player120.getID(), &player120)==SUCCESS);
assert(table.insert(player149.getID(), &player149)==SUCCESS);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.find(player81.getID())!=-1);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.find(player37.getID())!=-1);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player77.getID())!=-1);
assert(table.find(player78.getID())!=-1);
assert(table.find(player22.getID())!=-1);
assert(table.find(player74.getID())!=-1);
assert(table.find(player66.getID())==-1);
assert(table.find(player15.getID())!=-1);
assert(table.find(player105.getID())!=-1);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.find(player139.getID())!=-1);
assert(table.find(player63.getID())==-1);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.find(player51.getID())==-1);
assert(table.find(player144.getID())==-1);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.find(player1.getID())==-1);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.find(player63.getID())==-1);
assert(table.find(player6.getID())!=-1);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.insert(player140.getID(), &player140)==ALREADY_EXIST);
assert(table.find(player113.getID())==-1);
assert(table.find(player71.getID())==-1);
assert(table.find(player94.getID())!=-1);
assert(table.find(player121.getID())==-1);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.find(player100.getID())!=-1);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player50.getID())!=-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.insert(player142.getID(), &player142)==ALREADY_EXIST);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.find(player143.getID())==-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player139.getID())!=-1);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.find(player138.getID())==-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.find(player81.getID())!=-1);
assert(table.find(player89.getID())!=-1);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.find(player82.getID())==-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.find(player64.getID())==-1);
assert(table.find(player33.getID())==-1);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.find(player88.getID())==-1);
assert(table.find(player132.getID())==-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player126.getID(), &player126)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.insert(player124.getID(), &player124)==ALREADY_EXIST);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.find(player142.getID())!=-1);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.insert(player127.getID(), &player127)==ALREADY_EXIST);
assert(table.find(player3.getID())==-1);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.find(player121.getID())==-1);
assert(table.remove(player123.getID())==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.remove(player136.getID())==SUCCESS);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.find(player22.getID())!=-1);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.find(player4.getID())==-1);
assert(table.find(player31.getID())==-1);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.insert(player129.getID(), &player129)==ALREADY_EXIST);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player57.getID())!=-1);
assert(table.find(player104.getID())!=-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player32.getID())==-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player122.getID(), &player122)==SUCCESS);
assert(table.find(player77.getID())!=-1);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player68.getID())==-1);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player76.getID())!=-1);
assert(table.find(player77.getID())!=-1);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.find(player6.getID())==-1);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.find(player74.getID())!=-1);
assert(table.find(player104.getID())==-1);
assert(table.find(player24.getID())==-1);
assert(table.insert(player149.getID(), &player149)==ALREADY_EXIST);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.find(player132.getID())==-1);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.find(player140.getID())!=-1);
assert(table.find(player112.getID())!=-1);
assert(table.insert(player111.getID(), &player111)==ALREADY_EXIST);
assert(table.find(player106.getID())!=-1);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player139.getID())==SUCCESS);
assert(table.find(player64.getID())==-1);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.insert(player143.getID(), &player143)==SUCCESS);
assert(table.find(player98.getID())==-1);
assert(table.find(player15.getID())==-1);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.find(player69.getID())==-1);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.find(player119.getID())!=-1);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player122.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.find(player20.getID())!=-1);
assert(table.find(player19.getID())==-1);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.find(player89.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player59.getID())==-1);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.find(player120.getID())!=-1);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.find(player76.getID())!=-1);
assert(table.find(player71.getID())==-1);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.find(player104.getID())==-1);
assert(table.remove(player147.getID())==NOT_FOUND);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.find(player101.getID())==-1);
assert(table.insert(player124.getID(), &player124)==ALREADY_EXIST);
assert(table.find(player135.getID())!=-1);
assert(table.find(player141.getID())!=-1);
assert(table.find(player70.getID())==-1);
assert(table.insert(player139.getID(), &player139)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.remove(player146.getID())==SUCCESS);
assert(table.insert(player131.getID(), &player131)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.find(player81.getID())!=-1);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.find(player146.getID())==-1);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.find(player127.getID())!=-1);
assert(table.find(player109.getID())!=-1);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.find(player137.getID())!=-1);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player16.getID())!=-1);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.remove(player141.getID())==SUCCESS);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.insert(player140.getID(), &player140)==ALREADY_EXIST);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.find(player24.getID())==-1);
assert(table.remove(player124.getID())==NOT_FOUND);
assert(table.find(player114.getID())!=-1);
assert(table.find(player67.getID())==-1);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.remove(player123.getID())==NOT_FOUND);
assert(table.find(player142.getID())!=-1);
assert(table.find(player111.getID())!=-1);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player131.getID())==SUCCESS);
assert(table.find(player11.getID())==-1);
assert(table.find(player60.getID())==-1);
assert(table.find(player146.getID())==-1);
assert(table.find(player41.getID())==-1);
assert(table.find(player77.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player102.getID())!=-1);
assert(table.find(player9.getID())!=-1);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.find(player140.getID())!=-1);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.find(player147.getID())==-1);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player133.getID())==-1);
assert(table.find(player102.getID())!=-1);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player135.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.find(player32.getID())==-1);
assert(table.find(player50.getID())!=-1);
assert(table.insert(player138.getID(), &player138)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player125.getID(), &player125)==SUCCESS);
assert(table.remove(player141.getID())==NOT_FOUND);
assert(table.insert(player132.getID(), &player132)==SUCCESS);
assert(table.find(player123.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.find(player33.getID())!=-1);
assert(table.find(player123.getID())==-1);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player144.getID())==-1);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.remove(player128.getID())==NOT_FOUND);
assert(table.find(player105.getID())!=-1);
assert(table.find(player73.getID())==-1);
assert(table.find(player37.getID())==-1);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.find(player10.getID())==-1);
assert(table.find(player83.getID())!=-1);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.remove(player136.getID())==SUCCESS);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.remove(player143.getID())==SUCCESS);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.find(player29.getID())==-1);
assert(table.find(player84.getID())==-1);
assert(table.find(player52.getID())!=-1);
assert(table.find(player25.getID())!=-1);
assert(table.find(player13.getID())==-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.remove(player126.getID())==SUCCESS);
assert(table.remove(player137.getID())==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.find(player127.getID())!=-1);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.remove(player147.getID())==NOT_FOUND);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player82.getID())==-1);
assert(table.find(player40.getID())==-1);
assert(table.find(player35.getID())==-1);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.find(player139.getID())!=-1);
assert(table.find(player61.getID())!=-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player44.getID())!=-1);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player116.getID())!=-1);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.find(player54.getID())!=-1);
assert(table.find(player7.getID())==-1);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.find(player138.getID())!=-1);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.find(player23.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player1.getID())==-1);
assert(table.remove(player117.getID())==NOT_FOUND);
assert(table.find(player28.getID())!=-1);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.find(player10.getID())==-1);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.remove(player132.getID())==SUCCESS);
assert(table.find(player86.getID())==-1);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.remove(player123.getID())==NOT_FOUND);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.find(player49.getID())!=-1);
assert(table.remove(player149.getID())==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.find(player47.getID())!=-1);
assert(table.find(player108.getID())==-1);
assert(table.find(player88.getID())==-1);
assert(table.find(player11.getID())==-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.find(player33.getID())!=-1);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.remove(player141.getID())==NOT_FOUND);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.remove(player131.getID())==NOT_FOUND);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.remove(player136.getID())==NOT_FOUND);
assert(table.find(player111.getID())==-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.find(player8.getID())!=-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.find(player36.getID())==-1);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.remove(player140.getID())==SUCCESS);
assert(table.find(player43.getID())!=-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.remove(player128.getID())==NOT_FOUND);
assert(table.find(player103.getID())!=-1);
assert(table.find(player66.getID())==-1);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.find(player109.getID())!=-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.find(player52.getID())==-1);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.find(player127.getID())!=-1);
assert(table.find(player10.getID())==-1);
assert(table.remove(player141.getID())==NOT_FOUND);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player88.getID())==-1);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.remove(player143.getID())==NOT_FOUND);
assert(table.find(player11.getID())==-1);
assert(table.find(player44.getID())!=-1);
assert(table.find(player5.getID())==-1);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.remove(player133.getID())==NOT_FOUND);
assert(table.find(player62.getID())==-1);
assert(table.find(player131.getID())==-1);
assert(table.find(player34.getID())==-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player26.getID())==-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.remove(player127.getID())==SUCCESS);
assert(table.find(player119.getID())!=-1);
assert(table.find(player42.getID())!=-1);
assert(table.insert(player122.getID(), &player122)==SUCCESS);
assert(table.remove(player147.getID())==NOT_FOUND);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.remove(player125.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.find(player78.getID())!=-1);
assert(table.find(player55.getID())==-1);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player68.getID())!=-1);
assert(table.find(player91.getID())==-1);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.find(player13.getID())==-1);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.find(player99.getID())==-1);
assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.insert(player130.getID(), &player130)==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player130.getID())==SUCCESS);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player28.getID())!=-1);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.find(player69.getID())==-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.find(player114.getID())!=-1);
assert(table.insert(player142.getID(), &player142)==ALREADY_EXIST);
assert(table.find(player88.getID())==-1);
assert(table.find(player69.getID())==-1);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.remove(player131.getID())==NOT_FOUND);
assert(table.find(player14.getID())==-1);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player143.getID(), &player143)==SUCCESS);
assert(table.remove(player147.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.find(player115.getID())!=-1);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.find(player114.getID())!=-1);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player85.getID())!=-1);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.remove(player117.getID())==NOT_FOUND);
assert(table.remove(player141.getID())==NOT_FOUND);
assert(table.find(player20.getID())!=-1);
assert(table.find(player141.getID())==-1);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.find(player131.getID())==-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.find(player13.getID())==-1);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player141.getID(), &player141)==SUCCESS);
assert(table.find(player53.getID())!=-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.remove(player129.getID())==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.remove(player132.getID())==NOT_FOUND);
assert(table.insert(player122.getID(), &player122)==ALREADY_EXIST);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player131.getID())==-1);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.find(player102.getID())==-1);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player133.getID(), &player133)==SUCCESS);
assert(table.find(player101.getID())==-1);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player127.getID())==NOT_FOUND);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player80.getID())==-1);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.find(player14.getID())!=-1);
assert(table.find(player135.getID())!=-1);
assert(table.remove(player138.getID())==SUCCESS);
assert(table.remove(player126.getID())==NOT_FOUND);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.find(player30.getID())==-1);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.find(player79.getID())!=-1);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.insert(player128.getID(), &player128)==SUCCESS);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.find(player35.getID())==-1);
assert(table.find(player129.getID())==-1);
assert(table.find(player110.getID())!=-1);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player135.getID(), &player135)==ALREADY_EXIST);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.find(player69.getID())==-1);
assert(table.find(player53.getID())!=-1);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.insert(player122.getID(), &player122)==ALREADY_EXIST);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.find(player23.getID())!=-1);
assert(table.find(player104.getID())==-1);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player116.getID())!=-1);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.find(player128.getID())!=-1);
assert(table.insert(player144.getID(), &player144)==SUCCESS);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.find(player113.getID())==-1);
assert(table.find(player130.getID())==-1);
assert(table.find(player96.getID())==-1);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.find(player142.getID())!=-1);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.find(player130.getID())==-1);
assert(table.insert(player144.getID(), &player144)==ALREADY_EXIST);
assert(table.find(player40.getID())==-1);
assert(table.find(player53.getID())!=-1);
assert(table.remove(player138.getID())==NOT_FOUND);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.find(player105.getID())!=-1);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player19.getID())==-1);
assert(table.find(player94.getID())!=-1);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.insert(player121.getID(), &player121)==SUCCESS);
assert(table.find(player63.getID())!=-1);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player81.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.insert(player137.getID(), &player137)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
assert(table.find(player125.getID())==-1);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player28.getID())!=-1);
assert(table.find(player80.getID())==-1);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.find(player106.getID())==-1);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.find(player115.getID())!=-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player129.getID())==-1);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.insert(player145.getID(), &player145)==SUCCESS);
assert(table.insert(player144.getID(), &player144)==ALREADY_EXIST);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player121.getID())==SUCCESS);
assert(table.find(player51.getID())!=-1);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player69.getID())!=-1);
assert(table.find(player24.getID())==-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.remove(player122.getID())==SUCCESS);
assert(table.find(player120.getID())!=-1);
assert(table.find(player81.getID())==-1);
assert(table.find(player29.getID())==-1);
assert(table.insert(player144.getID(), &player144)==ALREADY_EXIST);
assert(table.find(player35.getID())==-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.find(player15.getID())!=-1);
assert(table.find(player112.getID())==-1);
assert(table.find(player144.getID())!=-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.insert(player127.getID(), &player127)==SUCCESS);
assert(table.find(player7.getID())==-1);
assert(table.find(player140.getID())==-1);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.remove(player135.getID())==SUCCESS);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.find(player62.getID())==-1);
assert(table.find(player102.getID())==-1);
assert(table.insert(player142.getID(), &player142)==ALREADY_EXIST);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.find(player117.getID())==-1);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.find(player139.getID())!=-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player106.getID())==-1);
assert(table.find(player46.getID())!=-1);
assert(table.find(player52.getID())==-1);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player87.getID())!=-1);
assert(table.find(player8.getID())!=-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.find(player85.getID())!=-1);
assert(table.find(player15.getID())!=-1);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
assert(table.find(player102.getID())==-1);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.find(player78.getID())!=-1);
assert(table.insert(player131.getID(), &player131)==SUCCESS);
assert(table.find(player82.getID())==-1);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player131.getID())!=-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.find(player61.getID())==-1);
assert(table.find(player115.getID())!=-1);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
assert(table.find(player114.getID())!=-1);
assert(table.find(player28.getID())!=-1);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.find(player50.getID())!=-1);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.find(player75.getID())!=-1);
assert(table.find(player139.getID())!=-1);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.find(player105.getID())!=-1);
assert(table.find(player121.getID())==-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.find(player29.getID())==-1);
assert(table.insert(player122.getID(), &player122)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.find(player23.getID())!=-1);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player47.getID())==-1);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player16.getID())!=-1);
assert(table.find(player108.getID())==-1);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.insert(player144.getID(), &player144)==ALREADY_EXIST);
assert(table.find(player12.getID())==-1);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player1.getID())==-1);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player129.getID(), &player129)==SUCCESS);
assert(table.find(player94.getID())!=-1);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.find(player103.getID())!=-1);
assert(table.find(player52.getID())==-1);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.find(player67.getID())==-1);
assert(table.find(player106.getID())==-1);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player144.getID(), &player144)==ALREADY_EXIST);
assert(table.find(player121.getID())==-1);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.find(player137.getID())!=-1);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player126.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player62.getID())==-1);
assert(table.find(player44.getID())==-1);
assert(table.find(player12.getID())==-1);
assert(table.find(player146.getID())==-1);
assert(table.find(player125.getID())==-1);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.find(player91.getID())==-1);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.find(player75.getID())==-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.find(player91.getID())==-1);
assert(table.find(player105.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.insert(player146.getID(), &player146)==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.find(player120.getID())!=-1);
assert(table.find(player1.getID())==-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player40.getID())==-1);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.find(player135.getID())==-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.find(player134.getID())!=-1);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player130.getID())==-1);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.find(player88.getID())!=-1);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.insert(player143.getID(), &player143)==ALREADY_EXIST);
assert(table.remove(player138.getID())==NOT_FOUND);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player21.getID())==-1);
assert(table.find(player40.getID())==-1);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.find(player92.getID())==-1);
assert(table.find(player5.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.remove(player144.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.insert(player148.getID(), &player148)==ALREADY_EXIST);
assert(table.find(player100.getID())==-1);
assert(table.insert(player122.getID(), &player122)==ALREADY_EXIST);
assert(table.find(player103.getID())!=-1);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.insert(player126.getID(), &player126)==SUCCESS);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player92.getID())==-1);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.remove(player147.getID())==NOT_FOUND);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.find(player56.getID())==-1);
assert(table.insert(player127.getID(), &player127)==ALREADY_EXIST);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player61.getID())==-1);
assert(table.find(player74.getID())==-1);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.find(player65.getID())!=-1);
assert(table.remove(player125.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.find(player123.getID())==-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.remove(player139.getID())==SUCCESS);
assert(table.insert(player145.getID(), &player145)==ALREADY_EXIST);
assert(table.insert(player148.getID(), &player148)==ALREADY_EXIST);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player96.getID())==-1);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.find(player36.getID())==-1);
assert(table.remove(player132.getID())==NOT_FOUND);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.remove(player131.getID())==SUCCESS);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.find(player11.getID())==-1);
assert(table.find(player117.getID())==-1);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.remove(player123.getID())==NOT_FOUND);
assert(table.find(player132.getID())==-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player75.getID())==-1);
assert(table.find(player117.getID())==-1);
assert(table.find(player89.getID())==-1);
assert(table.find(player70.getID())==-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.find(player88.getID())!=-1);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.find(player43.getID())!=-1);
assert(table.find(player21.getID())==-1);
assert(table.find(player53.getID())!=-1);
assert(table.find(player65.getID())!=-1);
assert(table.find(player13.getID())!=-1);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player49.getID())==-1);
assert(table.find(player1.getID())==-1);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.find(player125.getID())==-1);
assert(table.remove(player128.getID())==SUCCESS);
assert(table.find(player135.getID())==-1);
assert(table.find(player136.getID())==-1);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.find(player128.getID())==-1);
assert(table.find(player124.getID())==-1);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.remove(player120.getID())==SUCCESS);
assert(table.insert(player135.getID(), &player135)==SUCCESS);
assert(table.find(player113.getID())!=-1);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.find(player74.getID())==-1);
assert(table.remove(player133.getID())==SUCCESS);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.insert(player123.getID(), &player123)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player127.getID())==SUCCESS);
assert(table.find(player9.getID())!=-1);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.find(player135.getID())!=-1);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.find(player108.getID())==-1);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player47.getID())==-1);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.find(player70.getID())==-1);
assert(table.insert(player132.getID(), &player132)==SUCCESS);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.find(player103.getID())!=-1);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.find(player17.getID())!=-1);
assert(table.find(player87.getID())==-1);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.insert(player129.getID(), &player129)==ALREADY_EXIST);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player125.getID())==NOT_FOUND);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.find(player144.getID())==-1);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.find(player25.getID())!=-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player128.getID(), &player128)==SUCCESS);
assert(table.find(player122.getID())!=-1);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player114.getID())==NOT_FOUND);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.find(player117.getID())!=-1);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.find(player57.getID())==-1);
assert(table.find(player11.getID())!=-1);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.remove(player113.getID())==NOT_FOUND);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.find(player100.getID())==-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.remove(player129.getID())==SUCCESS);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.remove(player110.getID())==NOT_FOUND);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.remove(player146.getID())==SUCCESS);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.find(player62.getID())==-1);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.find(player52.getID())==-1);
assert(table.find(player91.getID())==-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player92.getID())==-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.find(player124.getID())!=-1);
assert(table.find(player20.getID())==-1);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.find(player133.getID())==-1);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.find(player113.getID())==-1);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.find(player79.getID())!=-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.find(player116.getID())==-1);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.remove(player52.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.find(player100.getID())==-1);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.remove(player137.getID())==SUCCESS);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.find(player74.getID())==-1);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player47.getID())==-1);
assert(table.remove(player137.getID())==NOT_FOUND);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.find(player134.getID())!=-1);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.find(player133.getID())==-1);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.find(player104.getID())!=-1);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.find(player66.getID())==-1);
assert(table.find(player108.getID())==-1);
assert(table.find(player19.getID())==-1);
assert(table.find(player93.getID())==-1);
assert(table.find(player54.getID())==-1);
assert(table.find(player101.getID())==-1);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.find(player29.getID())!=-1);
assert(table.find(player129.getID())==-1);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.find(player21.getID())==-1);
assert(table.find(player81.getID())==-1);
assert(table.find(player137.getID())==-1);
assert(table.remove(player105.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.find(player109.getID())==-1);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.remove(player137.getID())==NOT_FOUND);
assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
assert(table.find(player139.getID())==-1);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.find(player82.getID())==-1);
assert(table.find(player90.getID())==-1);
assert(table.find(player97.getID())!=-1);
assert(table.find(player53.getID())!=-1);
assert(table.find(player51.getID())!=-1);
assert(table.remove(player110.getID())==NOT_FOUND);
assert(table.find(player92.getID())==-1);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.find(player111.getID())!=-1);
assert(table.find(player8.getID())==-1);
assert(table.insert(player146.getID(), &player146)==SUCCESS);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.find(player77.getID())!=-1);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.find(player16.getID())!=-1);
assert(table.find(player147.getID())==-1);
assert(table.find(player117.getID())!=-1);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.find(player12.getID())!=-1);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.remove(player124.getID())==NOT_FOUND);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.remove(player148.getID())==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.find(player121.getID())==-1);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player118.getID())!=-1);
assert(table.find(player89.getID())==-1);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.insert(player120.getID(), &player120)==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.insert(player122.getID(), &player122)==ALREADY_EXIST);
assert(table.remove(player147.getID())==NOT_FOUND);
assert(table.insert(player129.getID(), &player129)==SUCCESS);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.find(player64.getID())!=-1);
assert(table.find(player26.getID())==-1);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.find(player102.getID())!=-1);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.find(player100.getID())!=-1);
assert(table.find(player104.getID())==-1);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.remove(player138.getID())==NOT_FOUND);
assert(table.find(player116.getID())==-1);
assert(table.find(player139.getID())==-1);
assert(table.find(player135.getID())!=-1);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.find(player63.getID())!=-1);
assert(table.insert(player122.getID(), &player122)==ALREADY_EXIST);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.find(player84.getID())!=-1);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player78.getID())!=-1);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.find(player148.getID())==-1);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.find(player95.getID())==-1);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.find(player138.getID())==-1);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player126.getID())!=-1);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.find(player111.getID())!=-1);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.find(player149.getID())==-1);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.find(player64.getID())!=-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.remove(player140.getID())==NOT_FOUND);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.find(player63.getID())!=-1);
assert(table.find(player141.getID())!=-1);
assert(table.remove(player134.getID())==SUCCESS);
assert(table.insert(player137.getID(), &player137)==SUCCESS);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.find(player135.getID())!=-1);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player143.getID())!=-1);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.find(player108.getID())==-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.remove(player120.getID())==SUCCESS);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.find(player97.getID())!=-1);
assert(table.find(player133.getID())==-1);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player24.getID())!=-1);
assert(table.find(player61.getID())==-1);
assert(table.find(player79.getID())!=-1);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.find(player46.getID())==-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.find(player29.getID())==-1);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.insert(player111.getID(), &player111)==ALREADY_EXIST);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.find(player1.getID())==-1);
assert(table.remove(player143.getID())==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.find(player86.getID())==-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player146.getID())==SUCCESS);
assert(table.find(player68.getID())!=-1);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.find(player9.getID())==-1);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.find(player119.getID())==-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player53.getID())!=-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.find(player94.getID())==-1);
assert(table.find(player82.getID())!=-1);
assert(table.find(player71.getID())!=-1);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.find(player88.getID())==-1);
assert(table.find(player107.getID())!=-1);
assert(table.insert(player138.getID(), &player138)==SUCCESS);
assert(table.find(player100.getID())!=-1);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player27.getID())!=-1);
assert(table.find(player115.getID())!=-1);
assert(table.find(player8.getID())==-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.insert(player144.getID(), &player144)==SUCCESS);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player138.getID(), &player138)==ALREADY_EXIST);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.insert(player140.getID(), &player140)==SUCCESS);
assert(table.find(player63.getID())==-1);
assert(table.find(player39.getID())==-1);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player54.getID())==-1);
assert(table.find(player70.getID())!=-1);
assert(table.find(player91.getID())==-1);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player149.getID())==-1);
assert(table.find(player84.getID())!=-1);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.find(player64.getID())!=-1);
assert(table.remove(player126.getID())==SUCCESS);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.find(player117.getID())!=-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.find(player87.getID())!=-1);
assert(table.find(player58.getID())==-1);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.find(player119.getID())==-1);
assert(table.find(player122.getID())!=-1);
assert(table.find(player20.getID())!=-1);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.find(player41.getID())!=-1);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.insert(player125.getID(), &player125)==SUCCESS);
assert(table.remove(player145.getID())==SUCCESS);
assert(table.find(player126.getID())==-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.remove(player127.getID())==NOT_FOUND);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.find(player24.getID())!=-1);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.insert(player77.getID(), &player77)==ALREADY_EXIST);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.find(player29.getID())==-1);
assert(table.find(player108.getID())==-1);
assert(table.find(player60.getID())!=-1);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.remove(player47.getID())==NOT_FOUND);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player137.getID(), &player137)==ALREADY_EXIST);
assert(table.find(player133.getID())==-1);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.remove(player43.getID())==NOT_FOUND);
assert(table.insert(player148.getID(), &player148)==SUCCESS);
assert(table.remove(player125.getID())==SUCCESS);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.insert(player134.getID(), &player134)==SUCCESS);
assert(table.find(player143.getID())==-1);
assert(table.find(player42.getID())==-1);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.insert(player122.getID(), &player122)==ALREADY_EXIST);
assert(table.find(player113.getID())==-1);
assert(table.find(player83.getID())==-1);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player30.getID())==-1);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.find(player65.getID())!=-1);
assert(table.find(player90.getID())!=-1);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.find(player53.getID())==-1);
assert(table.find(player2.getID())==-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.find(player137.getID())!=-1);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.find(player11.getID())==-1);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.insert(player144.getID(), &player144)==ALREADY_EXIST);
assert(table.find(player110.getID())!=-1);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.find(player22.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player43.getID())==-1);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player147.getID(), &player147)==SUCCESS);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.remove(player140.getID())==SUCCESS);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.find(player73.getID())==-1);
assert(table.find(player108.getID())==-1);
assert(table.insert(player138.getID(), &player138)==ALREADY_EXIST);
assert(table.insert(player146.getID(), &player146)==SUCCESS);
assert(table.find(player124.getID())!=-1);
assert(table.find(player55.getID())==-1);
assert(table.find(player104.getID())!=-1);
assert(table.find(player8.getID())==-1);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.find(player67.getID())==-1);
assert(table.remove(player128.getID())==SUCCESS);
assert(table.find(player19.getID())==-1);
assert(table.remove(player143.getID())==NOT_FOUND);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player66.getID())==-1);
assert(table.find(player22.getID())!=-1);
assert(table.find(player125.getID())==-1);
assert(table.insert(player143.getID(), &player143)==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player47.getID())==-1);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.find(player73.getID())==-1);
assert(table.remove(player133.getID())==NOT_FOUND);
assert(table.find(player41.getID())==-1);
assert(table.find(player119.getID())!=-1);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.find(player148.getID())!=-1);
assert(table.find(player37.getID())!=-1);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.remove(player141.getID())==SUCCESS);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.find(player72.getID())==-1);
assert(table.find(player138.getID())!=-1);
assert(table.find(player66.getID())==-1);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.find(player5.getID())!=-1);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.find(player50.getID())!=-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.find(player100.getID())!=-1);
assert(table.find(player16.getID())!=-1);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.find(player41.getID())==-1);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.find(player126.getID())==-1);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.insert(player130.getID(), &player130)==SUCCESS);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.find(player20.getID())==-1);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.find(player111.getID())==-1);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.find(player29.getID())==-1);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.find(player16.getID())!=-1);
assert(table.find(player101.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.find(player123.getID())!=-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.find(player50.getID())!=-1);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player135.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.find(player4.getID())==-1);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player42.getID())==NOT_FOUND);
assert(table.find(player40.getID())==-1);
assert(table.remove(player141.getID())==NOT_FOUND);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player128.getID())==-1);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.find(player1.getID())!=-1);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.insert(player148.getID(), &player148)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.find(player66.getID())==-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player137.getID())!=-1);
assert(table.find(player100.getID())!=-1);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.find(player74.getID())!=-1);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.find(player103.getID())!=-1);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.find(player100.getID())!=-1);
assert(table.remove(player138.getID())==SUCCESS);
assert(table.find(player93.getID())!=-1);
assert(table.find(player124.getID())!=-1);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.find(player139.getID())==-1);
assert(table.find(player70.getID())==-1);
assert(table.find(player106.getID())!=-1);
assert(table.remove(player146.getID())==SUCCESS);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.remove(player123.getID())==SUCCESS);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.find(player130.getID())!=-1);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.insert(player128.getID(), &player128)==SUCCESS);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.remove(player129.getID())==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.find(player26.getID())==-1);
assert(table.find(player91.getID())!=-1);
assert(table.remove(player26.getID())==NOT_FOUND);
assert(table.find(player30.getID())==-1);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.find(player143.getID())!=-1);
assert(table.find(player73.getID())==-1);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player14.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.remove(player123.getID())==NOT_FOUND);
assert(table.find(player10.getID())!=-1);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.find(player55.getID())==-1);
assert(table.find(player99.getID())!=-1);
assert(table.find(player84.getID())==-1);
assert(table.insert(player144.getID(), &player144)==ALREADY_EXIST);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.insert(player126.getID(), &player126)==SUCCESS);
assert(table.find(player92.getID())==-1);
assert(table.find(player92.getID())==-1);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.find(player53.getID())==-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.find(player7.getID())!=-1);
assert(table.insert(player138.getID(), &player138)==SUCCESS);
assert(table.find(player44.getID())==-1);
assert(table.find(player48.getID())==-1);
assert(table.insert(player143.getID(), &player143)==ALREADY_EXIST);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.remove(player134.getID())==SUCCESS);
assert(table.insert(player120.getID(), &player120)==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.insert(player120.getID(), &player120)==ALREADY_EXIST);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.find(player11.getID())==-1);
assert(table.find(player42.getID())==-1);
assert(table.insert(player140.getID(), &player140)==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.find(player72.getID())==-1);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.find(player142.getID())==-1);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.find(player86.getID())==-1);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.find(player58.getID())!=-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.find(player129.getID())==-1);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.insert(player121.getID(), &player121)==SUCCESS);
assert(table.remove(player122.getID())==SUCCESS);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.insert(player133.getID(), &player133)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player78.getID())!=-1);
assert(table.find(player102.getID())!=-1);
assert(table.find(player129.getID())==-1);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.remove(player136.getID())==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player71.getID())==-1);
assert(table.find(player93.getID())!=-1);
assert(table.find(player100.getID())!=-1);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.find(player78.getID())!=-1);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.find(player59.getID())==-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player26.getID())!=-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.insert(player131.getID(), &player131)==SUCCESS);
assert(table.remove(player130.getID())==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.find(player79.getID())==-1);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.insert(player139.getID(), &player139)==SUCCESS);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player91.getID())!=-1);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.find(player109.getID())!=-1);
assert(table.find(player28.getID())==-1);
assert(table.find(player137.getID())!=-1);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.find(player117.getID())!=-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.find(player65.getID())!=-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.remove(player120.getID())==SUCCESS);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player2.getID())==-1);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player45.getID())!=-1);
assert(table.insert(player129.getID(), &player129)==SUCCESS);
assert(table.insert(player137.getID(), &player137)==ALREADY_EXIST);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.find(player68.getID())==-1);
assert(table.find(player136.getID())==-1);
assert(table.find(player149.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player148.getID(), &player148)==ALREADY_EXIST);
assert(table.find(player108.getID())!=-1);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.find(player146.getID())==-1);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.find(player18.getID())==-1);
assert(table.find(player5.getID())!=-1);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.find(player63.getID())==-1);
assert(table.remove(player143.getID())==SUCCESS);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.remove(player135.getID())==NOT_FOUND);
assert(table.find(player115.getID())==-1);
assert(table.find(player29.getID())!=-1);
assert(table.insert(player123.getID(), &player123)==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.find(player122.getID())==-1);
assert(table.remove(player41.getID())==NOT_FOUND);
assert(table.find(player112.getID())!=-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.find(player38.getID())==-1);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.find(player141.getID())==-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player108.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player102.getID())!=-1);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.find(player120.getID())==-1);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.remove(player122.getID())==NOT_FOUND);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.find(player40.getID())==-1);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.remove(player142.getID())==NOT_FOUND);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.insert(player124.getID(), &player124)==ALREADY_EXIST);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.remove(player132.getID())==SUCCESS);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.insert(player120.getID(), &player120)==SUCCESS);
assert(table.find(player147.getID())!=-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
assert(table.find(player128.getID())!=-1);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.find(player28.getID())!=-1);
assert(table.insert(player143.getID(), &player143)==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.find(player30.getID())==-1);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.find(player42.getID())==-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player44.getID())==-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player37.getID())==-1);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.insert(player124.getID(), &player124)==ALREADY_EXIST);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.insert(player139.getID(), &player139)==ALREADY_EXIST);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.find(player104.getID())==-1);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.insert(player122.getID(), &player122)==SUCCESS);
assert(table.find(player88.getID())==-1);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.find(player50.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.find(player50.getID())!=-1);
assert(table.find(player12.getID())!=-1);
assert(table.find(player101.getID())==-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player129.getID(), &player129)==ALREADY_EXIST);
assert(table.find(player55.getID())!=-1);
assert(table.find(player20.getID())==-1);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.find(player88.getID())==-1);
assert(table.remove(player138.getID())==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player144.getID())==SUCCESS);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.find(player51.getID())!=-1);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.find(player20.getID())==-1);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.find(player84.getID())!=-1);
assert(table.find(player132.getID())==-1);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player42.getID())==-1);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.find(player1.getID())!=-1);
assert(table.remove(player137.getID())==SUCCESS);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.remove(player135.getID())==NOT_FOUND);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.insert(player109.getID(), &player109)==ALREADY_EXIST);
assert(table.find(player6.getID())!=-1);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.find(player106.getID())==-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player28.getID())!=-1);
assert(table.find(player25.getID())==-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.find(player35.getID())!=-1);
assert(table.remove(player125.getID())==NOT_FOUND);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.insert(player141.getID(), &player141)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.remove(player121.getID())==SUCCESS);
assert(table.find(player82.getID())==-1);
assert(table.find(player107.getID())==-1);
assert(table.find(player81.getID())!=-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.find(player3.getID())!=-1);
assert(table.find(player49.getID())==-1);
assert(table.find(player77.getID())==-1);
assert(table.find(player60.getID())==-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==NOT_FOUND);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player82.getID())==NOT_FOUND);
assert(table.find(player104.getID())==-1);
assert(table.find(player67.getID())==-1);
assert(table.find(player134.getID())==-1);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.insert(player75.getID(), &player75)==ALREADY_EXIST);
assert(table.find(player96.getID())==-1);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.find(player118.getID())!=-1);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player21.getID())==-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.find(player144.getID())==-1);
assert(table.find(player59.getID())==-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
assert(table.find(player142.getID())==-1);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player138.getID())==-1);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.find(player80.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.remove(player147.getID())==SUCCESS);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.remove(player131.getID())==SUCCESS);
assert(table.insert(player139.getID(), &player139)==ALREADY_EXIST);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.insert(player121.getID(), &player121)==SUCCESS);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.find(player55.getID())!=-1);
assert(table.find(player140.getID())!=-1);
assert(table.insert(player127.getID(), &player127)==SUCCESS);
assert(table.find(player111.getID())==-1);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.find(player148.getID())!=-1);
assert(table.insert(player134.getID(), &player134)==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.find(player92.getID())==-1);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.find(player42.getID())==-1);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.find(player78.getID())!=-1);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.find(player123.getID())!=-1);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.find(player66.getID())==-1);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player2.getID())!=-1);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.find(player58.getID())!=-1);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.find(player38.getID())==-1);
assert(table.find(player16.getID())==-1);
assert(table.insert(player143.getID(), &player143)==ALREADY_EXIST);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player19.getID())!=-1);
assert(table.find(player147.getID())==-1);
assert(table.find(player74.getID())==-1);
assert(table.find(player102.getID())!=-1);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.find(player132.getID())==-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.find(player13.getID())!=-1);
assert(table.find(player18.getID())==-1);
assert(table.find(player79.getID())==-1);
assert(table.remove(player121.getID())==SUCCESS);
assert(table.remove(player11.getID())==NOT_FOUND);
assert(table.find(player109.getID())!=-1);
assert(table.find(player40.getID())==-1);
assert(table.find(player104.getID())==-1);
assert(table.find(player126.getID())!=-1);
assert(table.find(player4.getID())==-1);
assert(table.find(player78.getID())!=-1);
assert(table.remove(player7.getID())==NOT_FOUND);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.find(player21.getID())==-1);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.find(player78.getID())!=-1);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player83.getID())==-1);
assert(table.insert(player131.getID(), &player131)==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.find(player127.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.find(player101.getID())!=-1);
assert(table.remove(player32.getID())==NOT_FOUND);
assert(table.find(player48.getID())==-1);
assert(table.find(player34.getID())!=-1);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.find(player90.getID())==-1);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.find(player133.getID())!=-1);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.find(player138.getID())==-1);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.find(player112.getID())==-1);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.insert(player144.getID(), &player144)==SUCCESS);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player128.getID())!=-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.remove(player16.getID())==NOT_FOUND);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player131.getID())==SUCCESS);
assert(table.find(player149.getID())==-1);
assert(table.find(player97.getID())==-1);
assert(table.remove(player128.getID())==SUCCESS);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player139.getID())==SUCCESS);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.find(player119.getID())!=-1);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.remove(player68.getID())==NOT_FOUND);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player131.getID(), &player131)==SUCCESS);
assert(table.find(player67.getID())!=-1);
assert(table.find(player77.getID())!=-1);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.remove(player129.getID())==SUCCESS);
assert(table.find(player86.getID())!=-1);
assert(table.remove(player141.getID())==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player135.getID())==-1);
assert(table.find(player31.getID())==-1);
assert(table.find(player44.getID())==-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player149.getID())==-1);
assert(table.remove(player132.getID())==NOT_FOUND);
assert(table.remove(player92.getID())==NOT_FOUND);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.find(player114.getID())!=-1);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.remove(player143.getID())==SUCCESS);
assert(table.remove(player140.getID())==SUCCESS);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.find(player49.getID())==-1);
assert(table.find(player65.getID())==-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player134.getID())==SUCCESS);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.find(player93.getID())==-1);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.find(player139.getID())==-1);
assert(table.find(player123.getID())!=-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player146.getID(), &player146)==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.find(player67.getID())!=-1);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player128.getID(), &player128)==SUCCESS);
assert(table.find(player47.getID())!=-1);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.find(player31.getID())==-1);
assert(table.find(player78.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player148.getID())==SUCCESS);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.find(player70.getID())==-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player121.getID())==-1);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player54.getID())!=-1);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player85.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.find(player91.getID())!=-1);
assert(table.find(player116.getID())==-1);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.remove(player58.getID())==SUCCESS);
assert(table.find(player118.getID())!=-1);
assert(table.find(player12.getID())!=-1);
assert(table.find(player30.getID())!=-1);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player145.getID(), &player145)==SUCCESS);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.remove(player140.getID())==NOT_FOUND);
assert(table.insert(player132.getID(), &player132)==SUCCESS);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.remove(player124.getID())==NOT_FOUND);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.find(player12.getID())!=-1);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.find(player95.getID())!=-1);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.find(player27.getID())==-1);
assert(table.remove(player136.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.find(player144.getID())!=-1);
assert(table.insert(player143.getID(), &player143)==SUCCESS);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player125.getID())==NOT_FOUND);
assert(table.find(player120.getID())!=-1);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.find(player8.getID())==-1);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.remove(player137.getID())==NOT_FOUND);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.remove(player147.getID())==NOT_FOUND);
assert(table.find(player122.getID())!=-1);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.find(player9.getID())!=-1);
assert(table.find(player106.getID())==-1);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.find(player69.getID())!=-1);
assert(table.find(player48.getID())!=-1);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.find(player34.getID())!=-1);
assert(table.find(player81.getID())!=-1);
assert(table.find(player14.getID())!=-1);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.find(player136.getID())==-1);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.find(player33.getID())==-1);
assert(table.find(player17.getID())==-1);
assert(table.find(player107.getID())==-1);
assert(table.remove(player40.getID())==NOT_FOUND);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player57.getID())!=-1);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.find(player5.getID())!=-1);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.find(player36.getID())==-1);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.find(player146.getID())!=-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.find(player51.getID())!=-1);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.find(player95.getID())!=-1);
assert(table.find(player108.getID())==-1);
assert(table.find(player76.getID())!=-1);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.find(player23.getID())!=-1);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.insert(player122.getID(), &player122)==ALREADY_EXIST);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player136.getID())==NOT_FOUND);
assert(table.find(player27.getID())==-1);
assert(table.find(player13.getID())!=-1);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player15.getID())!=-1);
assert(table.find(player117.getID())!=-1);
assert(table.find(player125.getID())==-1);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.remove(player140.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player114.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player93.getID())==-1);
assert(table.insert(player147.getID(), &player147)==SUCCESS);
assert(table.find(player89.getID())==-1);
assert(table.insert(player134.getID(), &player134)==SUCCESS);
assert(table.find(player124.getID())!=-1);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player144.getID())==SUCCESS);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.find(player97.getID())==-1);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.find(player130.getID())==-1);
assert(table.remove(player145.getID())==SUCCESS);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.find(player20.getID())!=-1);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.find(player66.getID())==-1);
assert(table.find(player108.getID())==-1);
assert(table.find(player52.getID())!=-1);
assert(table.find(player77.getID())==-1);
assert(table.insert(player125.getID(), &player125)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.find(player131.getID())!=-1);
assert(table.remove(player110.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.find(player104.getID())!=-1);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.remove(player147.getID())==SUCCESS);
assert(table.remove(player19.getID())==NOT_FOUND);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.find(player104.getID())!=-1);
assert(table.find(player45.getID())==-1);
assert(table.find(player90.getID())!=-1);
assert(table.find(player17.getID())==-1);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.insert(player121.getID(), &player121)==SUCCESS);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.find(player83.getID())==-1);
assert(table.find(player5.getID())!=-1);
assert(table.find(player77.getID())==-1);
assert(table.find(player120.getID())!=-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player31.getID())==-1);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
assert(table.find(player147.getID())==-1);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player125.getID(), &player125)==ALREADY_EXIST);
assert(table.find(player57.getID())!=-1);
assert(table.find(player49.getID())==-1);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player121.getID())!=-1);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.remove(player125.getID())==SUCCESS);
assert(table.insert(player135.getID(), &player135)==SUCCESS);
assert(table.find(player136.getID())!=-1);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player121.getID(), &player121)==ALREADY_EXIST);
assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
assert(table.find(player42.getID())==-1);
assert(table.find(player103.getID())!=-1);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.find(player10.getID())==-1);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player100.getID())==-1);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.find(player60.getID())==-1);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.remove(player122.getID())==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.find(player42.getID())==-1);
assert(table.find(player54.getID())==-1);
assert(table.find(player146.getID())!=-1);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player95.getID())!=-1);
assert(table.find(player122.getID())==-1);
assert(table.find(player108.getID())==-1);
assert(table.remove(player128.getID())==SUCCESS);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.find(player98.getID())==-1);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.insert(player147.getID(), &player147)==SUCCESS);
assert(table.find(player21.getID())!=-1);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.find(player111.getID())!=-1);
assert(table.insert(player111.getID(), &player111)==ALREADY_EXIST);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.find(player98.getID())==-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.find(player1.getID())!=-1);
assert(table.find(player109.getID())==-1);
assert(table.find(player7.getID())!=-1);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.remove(player128.getID())==NOT_FOUND);
assert(table.remove(player136.getID())==SUCCESS);
assert(table.find(player37.getID())!=-1);
assert(table.find(player34.getID())!=-1);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.find(player2.getID())!=-1);
assert(table.insert(player125.getID(), &player125)==SUCCESS);
assert(table.find(player69.getID())!=-1);
assert(table.find(player53.getID())==-1);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player127.getID(), &player127)==ALREADY_EXIST);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.find(player143.getID())!=-1);
assert(table.find(player109.getID())==-1);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.find(player20.getID())!=-1);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.remove(player125.getID())==SUCCESS);
assert(table.find(player18.getID())==-1);
assert(table.insert(player147.getID(), &player147)==ALREADY_EXIST);
assert(table.insert(player143.getID(), &player143)==ALREADY_EXIST);
assert(table.find(player8.getID())==-1);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.find(player35.getID())==-1);
assert(table.find(player130.getID())==-1);
assert(table.find(player52.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.find(player52.getID())!=-1);
assert(table.insert(player144.getID(), &player144)==SUCCESS);
assert(table.insert(player120.getID(), &player120)==ALREADY_EXIST);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
assert(table.insert(player121.getID(), &player121)==ALREADY_EXIST);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.find(player32.getID())!=-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.find(player136.getID())==-1);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player8.getID())==-1);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.find(player129.getID())==-1);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.find(player27.getID())==-1);
assert(table.find(player42.getID())==-1);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.insert(player141.getID(), &player141)==SUCCESS);
assert(table.find(player87.getID())!=-1);
assert(table.find(player72.getID())!=-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player66.getID())==-1);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.find(player125.getID())==-1);
assert(table.find(player148.getID())==-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player80.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.find(player89.getID())!=-1);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player45.getID())==-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player28.getID())!=-1);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.find(player88.getID())==-1);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.find(player92.getID())==-1);
assert(table.remove(player70.getID())==NOT_FOUND);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.insert(player125.getID(), &player125)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.find(player112.getID())!=-1);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.find(player93.getID())==-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player125.getID())!=-1);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.remove(player132.getID())==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.find(player15.getID())!=-1);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.find(player69.getID())!=-1);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.find(player131.getID())!=-1);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.find(player90.getID())!=-1);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.find(player131.getID())!=-1);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.find(player21.getID())==-1);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.find(player57.getID())!=-1);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player143.getID())==SUCCESS);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.find(player115.getID())==-1);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.find(player68.getID())!=-1);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.find(player89.getID())!=-1);
assert(table.find(player15.getID())!=-1);
assert(table.remove(player148.getID())==NOT_FOUND);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.remove(player125.getID())==SUCCESS);
assert(table.remove(player93.getID())==NOT_FOUND);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.find(player102.getID())!=-1);
assert(table.find(player127.getID())!=-1);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.find(player2.getID())!=-1);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.find(player115.getID())==-1);
assert(table.find(player66.getID())==-1);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
assert(table.find(player142.getID())!=-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player60.getID())!=-1);
assert(table.insert(player130.getID(), &player130)==SUCCESS);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.find(player133.getID())!=-1);
assert(table.find(player104.getID())!=-1);
assert(table.remove(player99.getID())==NOT_FOUND);
assert(table.find(player33.getID())==-1);
assert(table.find(player113.getID())!=-1);
assert(table.find(player93.getID())==-1);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.insert(player132.getID(), &player132)==SUCCESS);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.insert(player144.getID(), &player144)==ALREADY_EXIST);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.find(player131.getID())!=-1);
assert(table.find(player30.getID())==-1);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.find(player94.getID())!=-1);
assert(table.find(player24.getID())==-1);
assert(table.find(player11.getID())!=-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.find(player55.getID())!=-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player103.getID())==-1);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.find(player145.getID())==-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.remove(player112.getID())==NOT_FOUND);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.find(player38.getID())!=-1);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.find(player100.getID())==-1);
assert(table.find(player38.getID())!=-1);
assert(table.find(player58.getID())==-1);
assert(table.find(player3.getID())!=-1);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.insert(player127.getID(), &player127)==ALREADY_EXIST);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.remove(player147.getID())==SUCCESS);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.find(player17.getID())==-1);
assert(table.find(player55.getID())!=-1);
assert(table.find(player59.getID())==-1);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.find(player142.getID())!=-1);
assert(table.find(player66.getID())==-1);
assert(table.find(player32.getID())==-1);
assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.find(player26.getID())!=-1);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player100.getID())==-1);
assert(table.find(player97.getID())==-1);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.find(player139.getID())==-1);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.find(player118.getID())!=-1);
assert(table.find(player6.getID())==-1);
assert(table.find(player77.getID())==-1);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player135.getID(), &player135)==ALREADY_EXIST);
assert(table.find(player31.getID())==-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player137.getID())==-1);
assert(table.find(player19.getID())!=-1);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.find(player15.getID())!=-1);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.find(player56.getID())!=-1);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.find(player74.getID())!=-1);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player124.getID())!=-1);
assert(table.find(player28.getID())!=-1);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.find(player45.getID())==-1);
assert(table.find(player9.getID())==-1);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.find(player41.getID())==-1);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.remove(player63.getID())==NOT_FOUND);
assert(table.find(player106.getID())==-1);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.find(player20.getID())!=-1);
assert(table.find(player21.getID())==-1);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player25.getID())!=-1);
assert(table.remove(player130.getID())==SUCCESS);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.remove(player120.getID())==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
assert(table.find(player23.getID())!=-1);
assert(table.find(player147.getID())==-1);
assert(table.find(player88.getID())==-1);
assert(table.remove(player110.getID())==NOT_FOUND);
assert(table.find(player122.getID())==-1);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player28.getID())==-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player117.getID())==-1);
assert(table.find(player62.getID())!=-1);
assert(table.insert(player122.getID(), &player122)==SUCCESS);
assert(table.remove(player133.getID())==SUCCESS);
assert(table.insert(player140.getID(), &player140)==SUCCESS);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.find(player96.getID())==-1);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.insert(player129.getID(), &player129)==SUCCESS);
assert(table.insert(player143.getID(), &player143)==SUCCESS);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.find(player58.getID())==-1);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.find(player143.getID())!=-1);
assert(table.find(player6.getID())==-1);
assert(table.find(player69.getID())==-1);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.remove(player131.getID())==SUCCESS);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.remove(player148.getID())==NOT_FOUND);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.find(player48.getID())!=-1);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.find(player43.getID())!=-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.remove(player129.getID())==SUCCESS);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.find(player148.getID())==-1);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.find(player32.getID())==-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player146.getID())==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.remove(player35.getID())==NOT_FOUND);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.remove(player135.getID())==SUCCESS);
assert(table.find(player105.getID())==-1);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.find(player141.getID())!=-1);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.find(player113.getID())==-1);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.find(player148.getID())==-1);
assert(table.remove(player128.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.remove(player107.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.insert(player30.getID(), &player30)==ALREADY_EXIST);
assert(table.find(player77.getID())==-1);
assert(table.find(player7.getID())!=-1);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player81.getID())!=-1);
assert(table.find(player96.getID())==-1);
assert(table.find(player138.getID())==-1);
assert(table.find(player36.getID())!=-1);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player86.getID())==-1);
assert(table.find(player121.getID())!=-1);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player98.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player134.getID())==SUCCESS);
assert(table.find(player149.getID())==-1);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.remove(player127.getID())==SUCCESS);
assert(table.find(player64.getID())==-1);
assert(table.insert(player145.getID(), &player145)==SUCCESS);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.find(player48.getID())==-1);
assert(table.find(player104.getID())!=-1);
assert(table.find(player111.getID())==-1);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.find(player49.getID())==-1);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.find(player137.getID())==-1);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.find(player58.getID())==-1);
assert(table.remove(player134.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.find(player30.getID())!=-1);
assert(table.find(player115.getID())==-1);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player33.getID())==-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.find(player120.getID())==-1);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.insert(player128.getID(), &player128)==SUCCESS);
assert(table.find(player105.getID())==-1);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.find(player63.getID())==-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player127.getID())==-1);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.find(player4.getID())==-1);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.insert(player142.getID(), &player142)==ALREADY_EXIST);
assert(table.find(player29.getID())!=-1);
assert(table.find(player138.getID())==-1);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.find(player111.getID())==-1);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.find(player126.getID())!=-1);
assert(table.insert(player125.getID(), &player125)==SUCCESS);
assert(table.insert(player120.getID(), &player120)==SUCCESS);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.insert(player133.getID(), &player133)==SUCCESS);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.find(player119.getID())!=-1);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.insert(player124.getID(), &player124)==ALREADY_EXIST);
assert(table.remove(player73.getID())==NOT_FOUND);
assert(table.insert(player139.getID(), &player139)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.find(player62.getID())!=-1);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.insert(player147.getID(), &player147)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.remove(player131.getID())==NOT_FOUND);
assert(table.find(player77.getID())!=-1);
assert(table.find(player6.getID())!=-1);
assert(table.find(player82.getID())!=-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.remove(player37.getID())==NOT_FOUND);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player125.getID())==SUCCESS);
assert(table.insert(player128.getID(), &player128)==ALREADY_EXIST);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player90.getID())!=-1);
assert(table.insert(player139.getID(), &player139)==ALREADY_EXIST);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.insert(player137.getID(), &player137)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.find(player140.getID())!=-1);
assert(table.find(player85.getID())!=-1);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player31.getID())==-1);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.find(player125.getID())==-1);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.find(player144.getID())!=-1);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.remove(player125.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.remove(player18.getID())==NOT_FOUND);
assert(table.find(player75.getID())==-1);
assert(table.remove(player148.getID())==NOT_FOUND);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.find(player45.getID())!=-1);
assert(table.find(player53.getID())==-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.find(player58.getID())==-1);
assert(table.insert(player140.getID(), &player140)==ALREADY_EXIST);
assert(table.find(player72.getID())==-1);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.find(player38.getID())==-1);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.find(player54.getID())==-1);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.remove(player135.getID())==NOT_FOUND);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.find(player33.getID())==-1);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.find(player54.getID())==-1);
assert(table.insert(player141.getID(), &player141)==ALREADY_EXIST);
assert(table.find(player25.getID())!=-1);
assert(table.remove(player27.getID())==NOT_FOUND);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.find(player102.getID())!=-1);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player147.getID())==SUCCESS);
assert(table.find(player3.getID())!=-1);
assert(table.find(player90.getID())!=-1);
assert(table.remove(player131.getID())==NOT_FOUND);
assert(table.find(player129.getID())==-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.remove(player110.getID())==NOT_FOUND);
assert(table.insert(player148.getID(), &player148)==SUCCESS);
assert(table.find(player80.getID())==-1);
assert(table.insert(player134.getID(), &player134)==SUCCESS);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.insert(player146.getID(), &player146)==SUCCESS);
assert(table.remove(player137.getID())==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.remove(player140.getID())==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.find(player68.getID())!=-1);
assert(table.find(player8.getID())!=-1);
assert(table.find(player145.getID())!=-1);
assert(table.find(player4.getID())==-1);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.remove(player128.getID())==SUCCESS);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.remove(player75.getID())==NOT_FOUND);
assert(table.find(player133.getID())!=-1);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.remove(player38.getID())==NOT_FOUND);
assert(table.remove(player39.getID())==NOT_FOUND);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.insert(player109.getID(), &player109)==ALREADY_EXIST);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.find(player47.getID())!=-1);
assert(table.find(player144.getID())!=-1);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.remove(player143.getID())==SUCCESS);
assert(table.find(player131.getID())==-1);
assert(table.find(player56.getID())==-1);
assert(table.find(player36.getID())==-1);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.find(player123.getID())!=-1);
assert(table.find(player141.getID())!=-1);
assert(table.remove(player137.getID())==NOT_FOUND);
assert(table.find(player83.getID())==-1);
assert(table.find(player48.getID())==-1);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player56.getID())==-1);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.remove(player143.getID())==NOT_FOUND);
assert(table.find(player30.getID())!=-1);
assert(table.find(player19.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.find(player17.getID())!=-1);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.find(player27.getID())==-1);
assert(table.find(player139.getID())!=-1);
assert(table.find(player91.getID())==-1);
assert(table.remove(player69.getID())==SUCCESS);
assert(table.find(player129.getID())==-1);
assert(table.find(player149.getID())==-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player4.getID())==-1);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.find(player39.getID())==-1);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.find(player127.getID())==-1);
assert(table.find(player49.getID())==-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player45.getID())==NOT_FOUND);
assert(table.find(player119.getID())!=-1);
assert(table.find(player109.getID())!=-1);
assert(table.remove(player140.getID())==NOT_FOUND);
assert(table.insert(player77.getID(), &player77)==SUCCESS);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.find(player22.getID())!=-1);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.remove(player125.getID())==NOT_FOUND);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.insert(player135.getID(), &player135)==SUCCESS);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.find(player145.getID())!=-1);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.find(player65.getID())==-1);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.find(player40.getID())==-1);
assert(table.find(player146.getID())!=-1);
assert(table.remove(player110.getID())==NOT_FOUND);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.find(player43.getID())==-1);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==ALREADY_EXIST);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.find(player89.getID())==-1);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.remove(player65.getID())==NOT_FOUND);
assert(table.find(player130.getID())==-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player71.getID())==-1);
assert(table.find(player42.getID())!=-1);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.remove(player136.getID())==SUCCESS);
assert(table.find(player32.getID())==-1);
assert(table.find(player47.getID())!=-1);
assert(table.find(player33.getID())==-1);
assert(table.insert(player139.getID(), &player139)==ALREADY_EXIST);
assert(table.remove(player89.getID())==NOT_FOUND);
assert(table.remove(player77.getID())==SUCCESS);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.remove(player56.getID())==NOT_FOUND);
assert(table.find(player114.getID())!=-1);
assert(table.remove(player139.getID())==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.find(player5.getID())==-1);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.find(player97.getID())==-1);
assert(table.find(player50.getID())==-1);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.find(player30.getID())==-1);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player101.getID())==-1);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.find(player95.getID())==-1);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.insert(player132.getID(), &player132)==ALREADY_EXIST);
assert(table.insert(player143.getID(), &player143)==SUCCESS);
assert(table.remove(player148.getID())==SUCCESS);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.find(player61.getID())!=-1);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.remove(player123.getID())==SUCCESS);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.remove(player122.getID())==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.find(player83.getID())!=-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.find(player112.getID())==-1);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.find(player67.getID())==-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.remove(player133.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player98.getID())==-1);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.find(player5.getID())!=-1);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.insert(player142.getID(), &player142)==ALREADY_EXIST);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player110.getID())!=-1);
assert(table.find(player88.getID())==-1);
assert(table.find(player135.getID())!=-1);
assert(table.find(player147.getID())==-1);
assert(table.find(player30.getID())==-1);
assert(table.remove(player144.getID())==SUCCESS);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.find(player114.getID())!=-1);
assert(table.remove(player31.getID())==NOT_FOUND);
assert(table.find(player133.getID())==-1);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.find(player105.getID())!=-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.find(player73.getID())==-1);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.insert(player105.getID(), &player105)==ALREADY_EXIST);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.find(player93.getID())!=-1);
assert(table.find(player112.getID())==-1);
assert(table.find(player129.getID())==-1);
assert(table.remove(player148.getID())==NOT_FOUND);
assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
assert(table.find(player79.getID())==-1);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.find(player43.getID())==-1);
assert(table.remove(player120.getID())==SUCCESS);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.find(player60.getID())!=-1);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player149.getID())==NOT_FOUND);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.find(player108.getID())!=-1);
assert(table.find(player100.getID())==-1);
assert(table.find(player128.getID())==-1);
assert(table.remove(player101.getID())==NOT_FOUND);
assert(table.find(player93.getID())!=-1);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.find(player128.getID())==-1);
assert(table.remove(player96.getID())==SUCCESS);
assert(table.remove(player135.getID())==SUCCESS);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player105.getID())==SUCCESS);
assert(table.find(player95.getID())==-1);
assert(table.find(player141.getID())!=-1);
assert(table.find(player115.getID())!=-1);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.find(player32.getID())==-1);
assert(table.find(player81.getID())!=-1);
assert(table.find(player143.getID())!=-1);
assert(table.find(player128.getID())==-1);
assert(table.remove(player66.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.find(player142.getID())!=-1);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.remove(player148.getID())==NOT_FOUND);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player120.getID())==NOT_FOUND);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player106.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.insert(player130.getID(), &player130)==SUCCESS);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player92.getID())!=-1);
assert(table.remove(player141.getID())==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.find(player89.getID())==-1);
assert(table.find(player65.getID())!=-1);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.find(player35.getID())!=-1);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.insert(player104.getID(), &player104)==ALREADY_EXIST);
assert(table.find(player52.getID())==-1);
assert(table.insert(player137.getID(), &player137)==SUCCESS);
assert(table.find(player37.getID())!=-1);
assert(table.find(player83.getID())!=-1);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.find(player31.getID())!=-1);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.find(player22.getID())==-1);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.find(player63.getID())==-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player101.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player123.getID(), &player123)==SUCCESS);
assert(table.remove(player132.getID())==SUCCESS);
assert(table.find(player105.getID())==-1);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.find(player98.getID())==-1);
assert(table.remove(player136.getID())==SUCCESS);
assert(table.find(player79.getID())!=-1);
assert(table.remove(player115.getID())==SUCCESS);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player48.getID())!=-1);
assert(table.find(player28.getID())==-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.remove(player137.getID())==SUCCESS);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player125.getID())==-1);
assert(table.find(player60.getID())!=-1);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.remove(player23.getID())==SUCCESS);
assert(table.find(player56.getID())==-1);
assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.find(player99.getID())==-1);
assert(table.insert(player130.getID(), &player130)==ALREADY_EXIST);
assert(table.find(player40.getID())==-1);
assert(table.find(player86.getID())!=-1);
assert(table.find(player7.getID())!=-1);
assert(table.insert(player131.getID(), &player131)==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
assert(table.find(player137.getID())==-1);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
assert(table.insert(player127.getID(), &player127)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.find(player148.getID())==-1);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.find(player90.getID())!=-1);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.insert(player130.getID(), &player130)==ALREADY_EXIST);
assert(table.find(player40.getID())==-1);
assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.find(player14.getID())==-1);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.find(player13.getID())==-1);
assert(table.insert(player116.getID(), &player116)==SUCCESS);
assert(table.find(player144.getID())==-1);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.find(player75.getID())!=-1);
assert(table.insert(player124.getID(), &player124)==ALREADY_EXIST);
assert(table.find(player144.getID())==-1);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.find(player63.getID())==-1);
assert(table.find(player78.getID())!=-1);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
assert(table.find(player75.getID())!=-1);
assert(table.insert(player122.getID(), &player122)==SUCCESS);
assert(table.find(player116.getID())!=-1);
assert(table.find(player124.getID())!=-1);
assert(table.remove(player145.getID())==SUCCESS);
assert(table.find(player130.getID())!=-1);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.find(player76.getID())==-1);
assert(table.insert(player120.getID(), &player120)==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player147.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.insert(player121.getID(), &player121)==ALREADY_EXIST);
assert(table.find(player6.getID())!=-1);
assert(table.find(player48.getID())!=-1);
assert(table.find(player85.getID())!=-1);
assert(table.remove(player135.getID())==NOT_FOUND);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.find(player22.getID())!=-1);
assert(table.remove(player98.getID())==NOT_FOUND);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player12.getID())==-1);
assert(table.find(player101.getID())!=-1);
assert(table.find(player98.getID())==-1);
assert(table.remove(player95.getID())==NOT_FOUND);
assert(table.find(player139.getID())==-1);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.find(player143.getID())!=-1);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player83.getID())==-1);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player107.getID())!=-1);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
assert(table.find(player42.getID())!=-1);
assert(table.find(player76.getID())==-1);
assert(table.remove(player113.getID())==SUCCESS);
assert(table.find(player122.getID())!=-1);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.find(player6.getID())!=-1);
assert(table.find(player5.getID())!=-1);
assert(table.remove(player115.getID())==NOT_FOUND);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.insert(player124.getID(), &player124)==ALREADY_EXIST);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player62.getID())!=-1);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.find(player98.getID())==-1);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.insert(player119.getID(), &player119)==ALREADY_EXIST);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.insert(player133.getID(), &player133)==SUCCESS);
assert(table.remove(player134.getID())==SUCCESS);
assert(table.find(player85.getID())!=-1);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.find(player48.getID())==-1);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.find(player145.getID())==-1);
assert(table.find(player17.getID())==-1);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.insert(player120.getID(), &player120)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.find(player7.getID())!=-1);
assert(table.find(player2.getID())==-1);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.find(player90.getID())!=-1);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.find(player84.getID())!=-1);
assert(table.find(player31.getID())!=-1);
assert(table.find(player126.getID())!=-1);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player96.getID())==-1);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.find(player70.getID())!=-1);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.remove(player133.getID())==SUCCESS);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.find(player5.getID())!=-1);
assert(table.find(player76.getID())==-1);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.remove(player146.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.remove(player131.getID())==SUCCESS);
assert(table.remove(player128.getID())==NOT_FOUND);
assert(table.find(player76.getID())==-1);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.find(player117.getID())==-1);
assert(table.insert(player115.getID(), &player115)==SUCCESS);
assert(table.find(player30.getID())==-1);
assert(table.remove(player120.getID())==SUCCESS);
assert(table.remove(player30.getID())==NOT_FOUND);
assert(table.find(player65.getID())!=-1);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.find(player2.getID())==-1);
assert(table.find(player136.getID())==-1);
assert(table.remove(player133.getID())==NOT_FOUND);
assert(table.insert(player132.getID(), &player132)==SUCCESS);
assert(table.find(player134.getID())==-1);
assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player50.getID())==-1);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
assert(table.find(player131.getID())==-1);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.find(player98.getID())!=-1);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player137.getID(), &player137)==SUCCESS);
assert(table.remove(player138.getID())==NOT_FOUND);
assert(table.find(player34.getID())==-1);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.insert(player124.getID(), &player124)==ALREADY_EXIST);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.insert(player144.getID(), &player144)==SUCCESS);
assert(table.remove(player122.getID())==SUCCESS);
assert(table.remove(player13.getID())==NOT_FOUND);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.find(player33.getID())==-1);
assert(table.find(player27.getID())!=-1);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.find(player16.getID())!=-1);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.find(player145.getID())==-1);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.find(player52.getID())!=-1);
assert(table.find(player135.getID())==-1);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.find(player92.getID())!=-1);
assert(table.find(player133.getID())==-1);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player111.getID(), &player111)==SUCCESS);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.find(player64.getID())==-1);
assert(table.insert(player134.getID(), &player134)==SUCCESS);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.find(player29.getID())!=-1);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.find(player90.getID())==-1);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
assert(table.find(player12.getID())==-1);
assert(table.find(player16.getID())!=-1);
assert(table.remove(player133.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.find(player69.getID())==-1);
assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.find(player82.getID())!=-1);
assert(table.find(player73.getID())==-1);
assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.insert(player34.getID(), &player34)==ALREADY_EXIST);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player99.getID())==-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.find(player88.getID())!=-1);
assert(table.find(player134.getID())!=-1);
assert(table.find(player52.getID())!=-1);
assert(table.remove(player121.getID())==SUCCESS);
assert(table.find(player74.getID())==-1);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.insert(player52.getID(), &player52)==ALREADY_EXIST);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.find(player26.getID())!=-1);
assert(table.insert(player127.getID(), &player127)==ALREADY_EXIST);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player135.getID())==NOT_FOUND);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.remove(player55.getID())==NOT_FOUND);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.find(player24.getID())!=-1);
assert(table.find(player106.getID())==-1);
assert(table.remove(player33.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.find(player132.getID())!=-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player2.getID())==NOT_FOUND);
assert(table.find(player27.getID())!=-1);
assert(table.find(player138.getID())==-1);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.insert(player125.getID(), &player125)==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.remove(player96.getID())==NOT_FOUND);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.find(player56.getID())==-1);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.remove(player113.getID())==NOT_FOUND);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.find(player6.getID())!=-1);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.find(player130.getID())!=-1);
assert(table.remove(player90.getID())==NOT_FOUND);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.insert(player148.getID(), &player148)==SUCCESS);
assert(table.find(player60.getID())==-1);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.insert(player133.getID(), &player133)==SUCCESS);
assert(table.find(player104.getID())==-1);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player21.getID())!=-1);
assert(table.insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player22.getID())!=-1);
assert(table.insert(player108.getID(), &player108)==SUCCESS);
assert(table.insert(player137.getID(), &player137)==ALREADY_EXIST);
assert(table.insert(player139.getID(), &player139)==SUCCESS);
assert(table.find(player106.getID())==-1);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.remove(player76.getID())==NOT_FOUND);
assert(table.find(player124.getID())!=-1);
assert(table.find(player21.getID())!=-1);
assert(table.find(player148.getID())!=-1);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player141.getID())==-1);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.find(player141.getID())==-1);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.remove(player123.getID())==SUCCESS);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player124.getID())!=-1);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.find(player132.getID())!=-1);
assert(table.remove(player116.getID())==SUCCESS);
assert(table.insert(player146.getID(), &player146)==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.find(player76.getID())==-1);
assert(table.remove(player91.getID())==NOT_FOUND);
assert(table.find(player74.getID())==-1);
assert(table.remove(player78.getID())==NOT_FOUND);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.find(player138.getID())==-1);
assert(table.remove(player94.getID())==NOT_FOUND);
assert(table.find(player20.getID())!=-1);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
assert(table.insert(player102.getID(), &player102)==SUCCESS);
assert(table.find(player144.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.find(player54.getID())==-1);
assert(table.find(player101.getID())!=-1);
assert(table.find(player3.getID())!=-1);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.remove(player105.getID())==NOT_FOUND);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.insert(player111.getID(), &player111)==ALREADY_EXIST);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.insert(player129.getID(), &player129)==SUCCESS);
assert(table.insert(player103.getID(), &player103)==ALREADY_EXIST);
assert(table.remove(player143.getID())==SUCCESS);
assert(table.find(player125.getID())!=-1);
assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
assert(table.find(player24.getID())!=-1);
assert(table.find(player48.getID())==-1);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.find(player26.getID())==-1);
assert(table.find(player60.getID())==-1);
assert(table.remove(player136.getID())==SUCCESS);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.remove(player36.getID())==NOT_FOUND);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.find(player89.getID())!=-1);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.find(player134.getID())!=-1);
assert(table.remove(player138.getID())==NOT_FOUND);
assert(table.remove(player101.getID())==SUCCESS);
assert(table.insert(player70.getID(), &player70)==ALREADY_EXIST);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.insert(player8.getID(), &player8)==ALREADY_EXIST);
assert(table.find(player70.getID())!=-1);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player141.getID())==NOT_FOUND);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player102.getID())!=-1);
assert(table.find(player70.getID())!=-1);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.find(player89.getID())!=-1);
assert(table.find(player142.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player71.getID())!=-1);
assert(table.find(player116.getID())==-1);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.remove(player64.getID())==NOT_FOUND);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.find(player131.getID())==-1);
assert(table.find(player117.getID())!=-1);
assert(table.insert(player3.getID(), &player3)==ALREADY_EXIST);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.insert(player148.getID(), &player148)==ALREADY_EXIST);
assert(table.find(player2.getID())==-1);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
assert(table.find(player2.getID())==-1);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.find(player33.getID())==-1);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player13.getID())==-1);
assert(table.remove(player61.getID())==NOT_FOUND);
assert(table.remove(player21.getID())==NOT_FOUND);
assert(table.remove(player47.getID())==SUCCESS);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.find(player79.getID())!=-1);
assert(table.find(player145.getID())==-1);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player55.getID())==-1);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.find(player132.getID())!=-1);
assert(table.remove(player132.getID())==SUCCESS);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player124.getID(), &player124)==ALREADY_EXIST);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.insert(player137.getID(), &player137)==ALREADY_EXIST);
assert(table.find(player133.getID())!=-1);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player129.getID())!=-1);
assert(table.find(player31.getID())!=-1);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.find(player34.getID())!=-1);
assert(table.find(player60.getID())==-1);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.find(player53.getID())==-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.insert(player144.getID(), &player144)==ALREADY_EXIST);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.find(player12.getID())==-1);
assert(table.find(player43.getID())==-1);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.find(player9.getID())==-1);
assert(table.find(player144.getID())!=-1);
assert(table.insert(player100.getID(), &player100)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.find(player106.getID())==-1);
assert(table.remove(player107.getID())==SUCCESS);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.remove(player5.getID())==NOT_FOUND);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player2.getID(), &player2)==ALREADY_EXIST);
assert(table.find(player2.getID())!=-1);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.find(player76.getID())!=-1);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.remove(player142.getID())==SUCCESS);
assert(table.remove(player136.getID())==NOT_FOUND);
assert(table.find(player70.getID())!=-1);
assert(table.find(player83.getID())!=-1);
assert(table.remove(player119.getID())==NOT_FOUND);
assert(table.insert(player140.getID(), &player140)==SUCCESS);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player45.getID())==-1);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.insert(player143.getID(), &player143)==SUCCESS);
assert(table.find(player107.getID())==-1);
assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
assert(table.insert(player20.getID(), &player20)==ALREADY_EXIST);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.find(player41.getID())==-1);
assert(table.find(player139.getID())!=-1);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.find(player75.getID())==-1);
assert(table.insert(player6.getID(), &player6)==ALREADY_EXIST);
assert(table.find(player107.getID())==-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.insert(player124.getID(), &player124)==SUCCESS);
assert(table.find(player123.getID())==-1);
assert(table.insert(player114.getID(), &player114)==SUCCESS);
assert(table.remove(player134.getID())==SUCCESS);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
assert(table.find(player59.getID())==-1);
assert(table.find(player62.getID())==-1);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.insert(player135.getID(), &player135)==SUCCESS);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
assert(table.insert(player134.getID(), &player134)==SUCCESS);
assert(table.find(player111.getID())!=-1);
assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
assert(table.find(player58.getID())==-1);
assert(table.remove(player144.getID())==SUCCESS);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player143.getID())!=-1);
assert(table.find(player85.getID())==-1);
assert(table.find(player33.getID())==-1);
assert(table.insert(player36.getID(), &player36)==ALREADY_EXIST);
assert(table.find(player39.getID())!=-1);
assert(table.insert(player143.getID(), &player143)==ALREADY_EXIST);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.find(player37.getID())!=-1);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.find(player149.getID())==-1);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player3.getID())==-1);
assert(table.insert(player23.getID(), &player23)==SUCCESS);
assert(table.insert(player149.getID(), &player149)==SUCCESS);
assert(table.remove(player142.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.remove(player104.getID())==SUCCESS);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.remove(player15.getID())==NOT_FOUND);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.find(player27.getID())!=-1);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.find(player24.getID())==-1);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.remove(player148.getID())==SUCCESS);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.find(player108.getID())!=-1);
assert(table.find(player117.getID())!=-1);
assert(table.find(player132.getID())==-1);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.find(player57.getID())==-1);
assert(table.find(player24.getID())==-1);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player130.getID(), &player130)==ALREADY_EXIST);
assert(table.insert(player134.getID(), &player134)==ALREADY_EXIST);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player48.getID())!=-1);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player60.getID(), &player60)==ALREADY_EXIST);
assert(table.find(player88.getID())==-1);
assert(table.find(player33.getID())==-1);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.find(player16.getID())!=-1);
assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
assert(table.find(player68.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player70.getID())==SUCCESS);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.find(player109.getID())!=-1);
assert(table.remove(player74.getID())==NOT_FOUND);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.find(player116.getID())==-1);
assert(table.insert(player101.getID(), &player101)==SUCCESS);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.remove(player59.getID())==NOT_FOUND);
assert(table.remove(player132.getID())==NOT_FOUND);
assert(table.remove(player52.getID())==SUCCESS);
assert(table.find(player24.getID())==-1);
assert(table.remove(player83.getID())==NOT_FOUND);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.insert(player27.getID(), &player27)==ALREADY_EXIST);
assert(table.insert(player121.getID(), &player121)==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.find(player14.getID())!=-1);
assert(table.find(player43.getID())==-1);
assert(table.find(player58.getID())==-1);
assert(table.remove(player77.getID())==NOT_FOUND);
assert(table.find(player68.getID())!=-1);
assert(table.find(player132.getID())==-1);
assert(table.remove(player131.getID())==NOT_FOUND);
assert(table.find(player46.getID())==-1);
assert(table.remove(player124.getID())==SUCCESS);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.find(player12.getID())!=-1);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
assert(table.insert(player129.getID(), &player129)==ALREADY_EXIST);
assert(table.insert(player108.getID(), &player108)==ALREADY_EXIST);
assert(table.find(player20.getID())!=-1);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player135.getID())==SUCCESS);
assert(table.remove(player24.getID())==NOT_FOUND);
assert(table.insert(player122.getID(), &player122)==SUCCESS);
assert(table.find(player54.getID())==-1);
assert(table.find(player95.getID())!=-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.remove(player58.getID())==NOT_FOUND);
assert(table.remove(player86.getID())==NOT_FOUND);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.remove(player46.getID())==NOT_FOUND);
assert(table.remove(player128.getID())==NOT_FOUND);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player56.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.insert(player64.getID(), &player64)==ALREADY_EXIST);
assert(table.remove(player109.getID())==SUCCESS);
assert(table.find(player137.getID())!=-1);
assert(table.find(player148.getID())==-1);
assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.remove(player50.getID())==NOT_FOUND);
assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player101.getID())!=-1);
assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.insert(player125.getID(), &player125)==ALREADY_EXIST);
assert(table.find(player69.getID())==-1);
assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
assert(table.find(player138.getID())==-1);
assert(table.find(player69.getID())==-1);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.insert(player147.getID(), &player147)==SUCCESS);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.remove(player141.getID())==NOT_FOUND);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.remove(player149.getID())==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player39.getID())!=-1);
assert(table.find(player142.getID())==-1);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.find(player148.getID())==-1);
assert(table.find(player39.getID())!=-1);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player61.getID())==-1);
assert(table.find(player77.getID())==-1);
assert(table.remove(player29.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.remove(player103.getID())==SUCCESS);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.remove(player121.getID())==SUCCESS);
assert(table.find(player120.getID())==-1);
assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
assert(table.find(player147.getID())!=-1);
assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
assert(table.find(player149.getID())==-1);
assert(table.find(player16.getID())!=-1);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.find(player18.getID())!=-1);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.remove(player141.getID())==NOT_FOUND);
assert(table.remove(player8.getID())==NOT_FOUND);
assert(table.insert(player120.getID(), &player120)==SUCCESS);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.find(player71.getID())!=-1);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.find(player83.getID())==-1);
assert(table.remove(player137.getID())==SUCCESS);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player72.getID())==-1);
assert(table.find(player119.getID())==-1);
assert(table.insert(player147.getID(), &player147)==ALREADY_EXIST);
assert(table.find(player42.getID())==-1);
assert(table.find(player30.getID())!=-1);
assert(table.remove(player79.getID())==NOT_FOUND);
assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
assert(table.find(player145.getID())==-1);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player85.getID())==-1);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
assert(table.remove(player102.getID())==SUCCESS);
assert(table.insert(player131.getID(), &player131)==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.find(player9.getID())!=-1);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
assert(table.insert(player149.getID(), &player149)==SUCCESS);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.remove(player97.getID())==NOT_FOUND);
assert(table.find(player132.getID())==-1);
assert(table.remove(player111.getID())==SUCCESS);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player44.getID())==NOT_FOUND);
assert(table.find(player1.getID())==-1);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.find(player23.getID())!=-1);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.find(player148.getID())==-1);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.find(player144.getID())==-1);
assert(table.remove(player124.getID())==NOT_FOUND);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.find(player144.getID())==-1);
assert(table.remove(player120.getID())==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.find(player47.getID())==-1);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player46.getID())==-1);
assert(table.find(player58.getID())==-1);
assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
assert(table.remove(player149.getID())==SUCCESS);
assert(table.find(player117.getID())!=-1);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.insert(player11.getID(), &player11)==ALREADY_EXIST);
assert(table.find(player31.getID())!=-1);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.find(player146.getID())!=-1);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.remove(player34.getID())==NOT_FOUND);
assert(table.insert(player32.getID(), &player32)==ALREADY_EXIST);
assert(table.insert(player101.getID(), &player101)==ALREADY_EXIST);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.find(player13.getID())==-1);
assert(table.remove(player71.getID())==NOT_FOUND);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player103.getID())==NOT_FOUND);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.remove(player104.getID())==NOT_FOUND);
assert(table.insert(player104.getID(), &player104)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
assert(table.remove(player140.getID())==SUCCESS);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.find(player68.getID())!=-1);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player125.getID())!=-1);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player127.getID())==SUCCESS);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.find(player59.getID())==-1);
assert(table.find(player2.getID())==-1);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player102.getID())==NOT_FOUND);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.remove(player118.getID())==NOT_FOUND);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player134.getID())==SUCCESS);
assert(table.remove(player125.getID())==SUCCESS);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.find(player34.getID())==-1);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.remove(player113.getID())==NOT_FOUND);
assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
assert(table.find(player66.getID())==-1);
assert(table.remove(player85.getID())==SUCCESS);
assert(table.remove(player121.getID())==NOT_FOUND);
assert(table.remove(player3.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.find(player73.getID())!=-1);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.remove(player139.getID())==SUCCESS);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.find(player48.getID())==-1);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.remove(player62.getID())==NOT_FOUND);
assert(table.insert(player138.getID(), &player138)==SUCCESS);
assert(table.remove(player64.getID())==SUCCESS);
assert(table.remove(player138.getID())==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.remove(player100.getID())==SUCCESS);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.find(player79.getID())==-1);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.find(player33.getID())==-1);
assert(table.find(player29.getID())==-1);
assert(table.find(player41.getID())!=-1);
assert(table.remove(player145.getID())==NOT_FOUND);
assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
assert(table.find(player58.getID())==-1);
assert(table.insert(player107.getID(), &player107)==SUCCESS);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.find(player149.getID())==-1);
assert(table.find(player115.getID())!=-1);
assert(table.remove(player17.getID())==NOT_FOUND);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
assert(table.remove(player132.getID())==NOT_FOUND);
assert(table.remove(player109.getID())==NOT_FOUND);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.find(player125.getID())==-1);
assert(table.remove(player25.getID())==NOT_FOUND);
assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.insert(player23.getID(), &player23)==ALREADY_EXIST);
assert(table.find(player88.getID())==-1);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.insert(player118.getID(), &player118)==ALREADY_EXIST);
assert(table.find(player61.getID())!=-1);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.find(player138.getID())==-1);
assert(table.find(player127.getID())==-1);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.find(player22.getID())==-1);
assert(table.remove(player4.getID())==NOT_FOUND);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.find(player124.getID())==-1);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.find(player11.getID())!=-1);
assert(table.find(player113.getID())==-1);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.insert(player49.getID(), &player49)==ALREADY_EXIST);
assert(table.find(player100.getID())==-1);
assert(table.remove(player141.getID())==NOT_FOUND);
assert(table.find(player89.getID())==-1);
assert(table.insert(player106.getID(), &player106)==SUCCESS);
assert(table.find(player95.getID())==-1);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.remove(player80.getID())==SUCCESS);
assert(table.remove(player129.getID())==SUCCESS);
assert(table.find(player4.getID())==-1);
assert(table.find(player124.getID())==-1);
assert(table.remove(player139.getID())==NOT_FOUND);
assert(table.remove(player88.getID())==NOT_FOUND);
assert(table.remove(player127.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player122.getID(), &player122)==ALREADY_EXIST);
assert(table.remove(player84.getID())==NOT_FOUND);
assert(table.find(player125.getID())==-1);
assert(table.find(player144.getID())==-1);
assert(table.remove(player129.getID())==NOT_FOUND);
assert(table.insert(player113.getID(), &player113)==SUCCESS);
assert(table.remove(player110.getID())==NOT_FOUND);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.insert(player110.getID(), &player110)==SUCCESS);
assert(table.find(player2.getID())==-1);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.find(player148.getID())==-1);
assert(table.find(player118.getID())!=-1);
assert(table.find(player64.getID())==-1);
assert(table.find(player107.getID())!=-1);
assert(table.remove(player108.getID())==SUCCESS);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.remove(player68.getID())==SUCCESS);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player92.getID())!=-1);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.insert(player109.getID(), &player109)==SUCCESS);
assert(table.find(player52.getID())==-1);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.insert(player120.getID(), &player120)==SUCCESS);
assert(table.insert(player142.getID(), &player142)==SUCCESS);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.insert(player123.getID(), &player123)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player27.getID())==SUCCESS);
assert(table.find(player123.getID())!=-1);
assert(table.find(player22.getID())==-1);
assert(table.remove(player136.getID())==SUCCESS);
assert(table.remove(player100.getID())==NOT_FOUND);
assert(table.find(player147.getID())!=-1);
assert(table.remove(player22.getID())==NOT_FOUND);
assert(table.remove(player6.getID())==NOT_FOUND);
assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.remove(player85.getID())==NOT_FOUND);
assert(table.find(player69.getID())==-1);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player10.getID())==NOT_FOUND);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.insert(player149.getID(), &player149)==SUCCESS);
assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
assert(table.remove(player118.getID())==SUCCESS);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.find(player129.getID())==-1);
assert(table.find(player81.getID())!=-1);
assert(table.find(player143.getID())!=-1);
assert(table.insert(player121.getID(), &player121)==SUCCESS);
assert(table.find(player34.getID())==-1);
assert(table.find(player99.getID())==-1);
assert(table.remove(player117.getID())==SUCCESS);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.remove(player67.getID())==NOT_FOUND);
assert(table.remove(player119.getID())==SUCCESS);
assert(table.find(player3.getID())!=-1);
assert(table.insert(player118.getID(), &player118)==SUCCESS);
assert(table.find(player32.getID())!=-1);
assert(table.find(player139.getID())==-1);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player139.getID(), &player139)==SUCCESS);
assert(table.remove(player28.getID())==NOT_FOUND);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.remove(player80.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
assert(table.insert(player127.getID(), &player127)==SUCCESS);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player125.getID())==-1);
assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
assert(table.find(player4.getID())==-1);
assert(table.find(player81.getID())!=-1);
assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player114.getID())!=-1);
assert(table.find(player14.getID())==-1);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.remove(player112.getID())==SUCCESS);
assert(table.remove(player116.getID())==NOT_FOUND);
assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
assert(table.find(player120.getID())!=-1);
assert(table.find(player110.getID())!=-1);
assert(table.remove(player51.getID())==NOT_FOUND);
assert(table.insert(player121.getID(), &player121)==ALREADY_EXIST);
assert(table.remove(player128.getID())==NOT_FOUND);
assert(table.find(player122.getID())!=-1);
assert(table.remove(player9.getID())==NOT_FOUND);
assert(table.find(player82.getID())!=-1);
assert(table.find(player144.getID())==-1);
assert(table.remove(player72.getID())==NOT_FOUND);
assert(table.find(player51.getID())==-1);
assert(table.find(player137.getID())==-1);
assert(table.insert(player130.getID(), &player130)==ALREADY_EXIST);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
assert(table.insert(player117.getID(), &player117)==SUCCESS);
assert(table.find(player141.getID())==-1);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.find(player146.getID())!=-1);
assert(table.remove(player69.getID())==NOT_FOUND);
assert(table.find(player77.getID())==-1);
assert(table.find(player61.getID())!=-1);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.find(player19.getID())!=-1);
assert(table.remove(player49.getID())==NOT_FOUND);
assert(table.find(player16.getID())!=-1);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.insert(player136.getID(), &player136)==SUCCESS);
assert(table.insert(player136.getID(), &player136)==ALREADY_EXIST);
assert(table.find(player120.getID())!=-1);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.find(player41.getID())==-1);
assert(table.find(player1.getID())==-1);
assert(table.insert(player125.getID(), &player125)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
assert(table.find(player130.getID())!=-1);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.find(player133.getID())!=-1);
assert(table.remove(player54.getID())==NOT_FOUND);
assert(table.find(player112.getID())==-1);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.find(player108.getID())==-1);
assert(table.find(player137.getID())==-1);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
assert(table.find(player101.getID())!=-1);
assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
assert(table.insert(player103.getID(), &player103)==SUCCESS);
assert(table.find(player87.getID())==-1);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player68.getID())==-1);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player62.getID())==-1);
assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
assert(table.find(player141.getID())==-1);
assert(table.find(player60.getID())==-1);
assert(table.insert(player126.getID(), &player126)==ALREADY_EXIST);
assert(table.remove(player146.getID())==SUCCESS);
assert(table.find(player36.getID())!=-1);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.remove(player144.getID())==NOT_FOUND);
assert(table.find(player53.getID())==-1);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.remove(player12.getID())==NOT_FOUND);
assert(table.insert(player143.getID(), &player143)==ALREADY_EXIST);
assert(table.insert(player122.getID(), &player122)==ALREADY_EXIST);
assert(table.find(player80.getID())==-1);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player127.getID(), &player127)==ALREADY_EXIST);
assert(table.remove(player108.getID())==NOT_FOUND);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.remove(player139.getID())==SUCCESS);
assert(table.insert(player123.getID(), &player123)==ALREADY_EXIST);
assert(table.insert(player119.getID(), &player119)==SUCCESS);
assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
assert(table.find(player103.getID())!=-1);
assert(table.remove(player130.getID())==SUCCESS);
assert(table.remove(player15.getID())==SUCCESS);
assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
assert(table.find(player134.getID())==-1);
assert(table.remove(player53.getID())==NOT_FOUND);
assert(table.find(player22.getID())!=-1);
assert(table.find(player89.getID())!=-1);
assert(table.find(player103.getID())!=-1);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.find(player36.getID())!=-1);
assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
assert(table.remove(player110.getID())==SUCCESS);
assert(table.find(player95.getID())!=-1);
assert(table.find(player111.getID())==-1);
assert(table.insert(player138.getID(), &player138)==SUCCESS);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.find(player1.getID())==-1);
assert(table.remove(player14.getID())==NOT_FOUND);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.remove(player111.getID())==NOT_FOUND);
assert(table.insert(player147.getID(), &player147)==ALREADY_EXIST);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player112.getID(), &player112)==SUCCESS);
assert(table.remove(player87.getID())==NOT_FOUND);
assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.remove(player48.getID())==NOT_FOUND);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.find(player47.getID())!=-1);
assert(table.find(player43.getID())==-1);
assert(table.find(player123.getID())!=-1);
assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
assert(table.insert(player64.getID(), &player64)==SUCCESS);
assert(table.insert(player105.getID(), &player105)==SUCCESS);
assert(table.find(player10.getID())!=-1);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player138.getID())!=-1);
assert(table.find(player107.getID())!=-1);
assert(table.find(player24.getID())!=-1);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.find(player82.getID())!=-1);
assert(table.find(player115.getID())!=-1);
assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
assert(table.remove(player1.getID())==NOT_FOUND);
assert(table.find(player92.getID())!=-1);
assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.remove(player130.getID())==NOT_FOUND);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
assert(table.remove(player114.getID())==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.remove(player106.getID())==SUCCESS);
assert(table.find(player89.getID())!=-1);
assert(table.insert(player93.getID(), &player93)==ALREADY_EXIST);
assert(table.find(player76.getID())!=-1);
assert(table.find(player41.getID())!=-1);
assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
